<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>字符串篇</title>
      <link href="/2024/08/02/algorithm-%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
      <url>/2024/08/02/algorithm-%E5%AD%97%E7%AC%A6%E4%B8%B2/</url>
      
        <content type="html"><![CDATA[<h1 id="字符串篇"><a href="#字符串篇" class="headerlink" title="字符串篇"></a>字符串篇</h1><h2 id="344-反转字符串"><a href="#344-反转字符串" class="headerlink" title="344.反转字符串"></a>344.反转字符串</h2><p>编写一个函数，其作用是将输入的字符串反转过来。输入字符串以字符数组 <code>s</code> 的形式给出。</p><p>不要给另外的数组分配额外的空间，必须<strong><a href="https://baike.baidu.com/item/原地算法">原地</a>修改输入数组</strong>、使用 O(1) 的额外空间解决这一问题。</p><p>示例： 输入：[“h”,”e”,”l”,”l”,”o”]<br>            输出：[“o”,”l”,”l”,”e”,”h”]</p><blockquote><p>思路：</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reverseString = <span class="keyword">function</span>(<span class="params">s</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> left = <span class="number">0</span>,right = s.<span class="property">length</span> -<span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span>(left &lt; right)&#123;</span><br><span class="line">        <span class="comment">// 解构赋值交换</span></span><br><span class="line">        [s[left], s[right]] = [s[right], s[left]]</span><br><span class="line">        left++</span><br><span class="line">        right--</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> s</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="541-反转字符串II"><a href="#541-反转字符串II" class="headerlink" title="541.反转字符串II"></a>541.反转字符串II</h2><p>给定一个字符串 <code>s</code> 和一个整数 <code>k</code>，从字符串开头算起，每计数至 <code>2k</code> 个字符，就反转这 <code>2k</code> 字符中的前 <code>k</code> 个字符。</p><ul><li>如果剩余字符少于 <code>k</code> 个，则将剩余字符全部反转。</li><li>如果剩余字符小于 <code>2k</code> 但大于或等于 <code>k</code> 个，则反转前 <code>k</code> 个字符，其余字符保持原样。</li></ul><p>示例： 输入： s = “abcdefg”, k = 2<br>            输出： “bacdfeg”</p><blockquote><p>思路：</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reverseStr = <span class="keyword">function</span>(<span class="params">s, k</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> resArr = s.<span class="title function_">split</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; s.<span class="property">length</span>; i += <span class="number">2</span>*k)&#123; <span class="comment">// 每隔 2k 个字符的前 k 个字符进行反转</span></span><br><span class="line">    <span class="comment">// 如果 i + k 超出字符串长度，则 right 设置为字符串的最后一个字符</span></span><br><span class="line">        <span class="keyword">let</span> left = i, right = <span class="title class_">Math</span>.<span class="title function_">min</span>(i+k-<span class="number">1</span>,s.<span class="property">length</span>-<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">while</span>(left &lt; right)&#123;</span><br><span class="line">            [resArr[left], resA[right]] = [resArr[right], resA[left]]</span><br><span class="line">            left++</span><br><span class="line">            right--</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> resArr.<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="151-翻转字符串里的单词"><a href="#151-翻转字符串里的单词" class="headerlink" title="151.翻转字符串里的单词"></a>151.翻转字符串里的单词</h2><p>给你一个字符串 <code>s</code> ，请你反转字符串中 <strong>单词</strong> 的顺序。</p><p>示例：输入: “the sky is blue”<br>           输出: “blue is sky the”</p><blockquote><p>思路：将字符串转化为数组，移除首尾和中间重复空格，再翻转整个字符串，然后，遍历数组字符串，<br>           遇到空格或到达字符数组的末尾时翻转单词，最后return。</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reverseWords = <span class="keyword">function</span> (<span class="params">s</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> resArr = <span class="title class_">Array</span>.<span class="title function_">from</span>(s)</span><br><span class="line">    <span class="title function_">removeExtraSpaces</span>(resArr)<span class="comment">// 删除多余空格</span></span><br><span class="line">    <span class="title function_">reverse</span>(resArr, <span class="number">0</span>, resArr.<span class="property">length</span>-<span class="number">1</span>) <span class="comment">// 翻转整个字符数组</span></span><br><span class="line">    <span class="keyword">let</span> start = <span class="number">0</span> <span class="comment">// 初始化单词的起始位置</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt;= resArr.<span class="property">length</span>; i++)&#123;</span><br><span class="line">        <span class="comment">// 遇到空格或到达字符数组的末尾时翻转单词</span></span><br><span class="line">        <span class="keyword">if</span>(resArr[i] === <span class="string">&quot; &quot;</span> || i === resArr.<span class="property">length</span>)&#123;</span><br><span class="line">            <span class="title function_">reverse</span>(resArr, start, i-<span class="number">1</span>)</span><br><span class="line">            start = i+<span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> resArr.<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除多余空格</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">removeExtraSpaces</span>(<span class="params">resArr</span>)&#123;</span><br><span class="line">    <span class="keyword">let</span> slowIndex = fastIndex = <span class="number">0</span></span><br><span class="line">    <span class="comment">// 快指针遍历字符数组</span></span><br><span class="line">    <span class="keyword">while</span>(fastIndex &lt; resArr.<span class="property">length</span>)&#123;</span><br><span class="line">        <span class="comment">// 移除开始位置的空格和重复的空格</span></span><br><span class="line">        <span class="keyword">if</span>(resArr[fastIndex] === <span class="string">&#x27; &#x27;</span> &amp;&amp; (fastIndex === <span class="number">0</span> || resArr[fastIndex-<span class="number">1</span>] === <span class="string">&#x27; &#x27;</span>))&#123;</span><br><span class="line">            fastIndex++</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            resArr[slowIndex++] = resArr[fastIndex++]<span class="comment">// 将非空格字符移动到慢指针位置</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 移除末尾的空格</span></span><br><span class="line">    <span class="keyword">if</span>(resArr[slowIndex - <span class="number">1</span>] === <span class="string">&quot; &quot;</span>)&#123;</span><br><span class="line">        resArr.<span class="property">length</span> = slowIndex - <span class="number">1</span></span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        resArr.<span class="property">length</span> = slowIndex</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 翻转</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">reverse</span> (resArr, start , end) &#123;</span><br><span class="line">    <span class="keyword">let</span> left = start, right = end</span><br><span class="line">    <span class="keyword">while</span>(left &lt; right) &#123;</span><br><span class="line">        [resArr[left], resArr[right]] = [resArr[right], resArr[left]]</span><br><span class="line">        left++</span><br><span class="line">        right--</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="28-实现-strStr"><a href="#28-实现-strStr" class="headerlink" title="28. 实现 strStr()"></a>28. 实现 strStr()</h2><p>给定一个 haystack 字符串和一个 needle 字符串，在 haystack 字符串中找出 needle 字符串<br>出现的第一个位置 (从0开始)。如果不存在，则返回  -1。</p><p>示例：输入：haystack = “hello”, needle = “ll”<br>           输出： 2</p><p>思路：<br>前缀表统一减一      </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> strStr = <span class="keyword">function</span> (<span class="params">haystack, needle</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (needle.<span class="property">length</span> === <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 构建部分匹配表（next 数组）</span></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">getNext</span> = (<span class="params">needle</span>) =&gt; &#123;</span><br><span class="line">        <span class="keyword">let</span> next = [];</span><br><span class="line">        <span class="keyword">let</span> j = -<span class="number">1</span>;</span><br><span class="line">        next.<span class="title function_">push</span>(j);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt; needle.<span class="property">length</span>; ++i) &#123;</span><br><span class="line">            <span class="comment">// 如果当前字符与前缀的下一个字符不匹配，跳到前一个匹配位置的 next 值</span></span><br><span class="line">            <span class="keyword">while</span> (j &gt;= <span class="number">0</span> &amp;&amp; needle[i] !== needle[j + <span class="number">1</span>])  j = next[j];</span><br><span class="line">            <span class="keyword">if</span> (needle[i] === needle[j + <span class="number">1</span>]) j++;<span class="comment">// 如果匹配，前缀末尾指针向前移动</span></span><br><span class="line">            next.<span class="title function_">push</span>(j);<span class="comment">// 记录当前字符的 next 值</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 查找 needle 在 haystack 中的位置：</span></span><br><span class="line">    <span class="keyword">let</span> next = <span class="title function_">getNext</span>(needle);</span><br><span class="line">    <span class="keyword">let</span> j = -<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; haystack.<span class="property">length</span>; ++i) &#123;</span><br><span class="line">        <span class="comment">// 如果当前字符与前缀的下一个字符不匹配，跳到前一个匹配位置的 next 值</span></span><br><span class="line">        <span class="keyword">while</span> (j &gt;= <span class="number">0</span> &amp;&amp; haystack[i] !== needle[j + <span class="number">1</span>]) j = next[j];</span><br><span class="line">        <span class="keyword">if</span> (haystack[i] === needle[j + <span class="number">1</span>]) j++;</span><br><span class="line">        <span class="keyword">if</span> (j === needle.<span class="property">length</span> - <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="comment">// 如果前缀末尾指针到达 needle 的末尾，匹配成功，返回匹配起始位置</span></span><br><span class="line">            <span class="keyword">return</span> (i - needle.<span class="property">length</span> + <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="459-重复的子字符串"><a href="#459-重复的子字符串" class="headerlink" title="459.重复的子字符串"></a>459.重复的子字符串</h2><p>给定一个非空的字符串，判断它是否可以由它的一个子串重复多次构成。<br>给定的字符串只含有小写英文字母，并且长度不超过10000。</p><p>示例：输入：”abcabcabcabc”<br>           输出： True<br>           解释： 可由子字符串 “abc” 重复四次构成。 (或者子字符串 “abcabc” 重复两次构成。)</p><p>-思路：</p><p>前缀表统一不减一<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> repeatedSubstringPattern = <span class="keyword">function</span> (<span class="params">s</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (s.<span class="property">length</span> === <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">getNext</span> = (<span class="params">s</span>) =&gt; &#123;</span><br><span class="line">        <span class="keyword">let</span> next = [];</span><br><span class="line">        <span class="keyword">let</span> j = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        next.<span class="title function_">push</span>(j);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt; s.<span class="property">length</span>; ++i) &#123;</span><br><span class="line">            <span class="keyword">while</span> (j &gt; <span class="number">0</span> &amp;&amp; s[i] !== s[j])</span><br><span class="line">                j = next[j - <span class="number">1</span>];</span><br><span class="line">            <span class="keyword">if</span> (s[i] === s[j])</span><br><span class="line">                j++;</span><br><span class="line">            next.<span class="title function_">push</span>(j);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> next;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> next = <span class="title function_">getNext</span>(s);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (next[next.<span class="property">length</span> - <span class="number">1</span>] !== <span class="number">0</span> &amp;&amp; s.<span class="property">length</span> % (s.<span class="property">length</span> - next[next.<span class="property">length</span> - <span class="number">1</span>]) === <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>栈与队列篇</title>
      <link href="/2024/08/02/algorithm-%E6%A0%88%E4%B8%8E%E9%98%9F%E5%88%97/"/>
      <url>/2024/08/02/algorithm-%E6%A0%88%E4%B8%8E%E9%98%9F%E5%88%97/</url>
      
        <content type="html"><![CDATA[<h1 id="栈与队列（先进后出、先入先出）"><a href="#栈与队列（先进后出、先入先出）" class="headerlink" title="栈与队列（先进后出、先入先出）"></a>栈与队列（先进后出、先入先出）</h1><h2 id="232-用栈实现队列"><a href="#232-用栈实现队列" class="headerlink" title="232.用栈实现队列"></a>232.用栈实现队列</h2><p>使用栈实现队列的下列操作：<br>        push(x) — 将一个元素放入队列的尾部。<br>        pop() — 从队列首部移除元素。<br>        peek() — 返回队列首部的元素。<br>        empty() — 返回队列是否为空。</p><blockquote><p>思路： 使用两个数组的栈方法（push, pop） 实现队列</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 构造函数 MyQueue</span></span><br><span class="line"><span class="keyword">var</span> <span class="title class_">MyQueue</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">   <span class="variable language_">this</span>.<span class="property">stackIn</span> = [];  <span class="comment">//输入栈</span></span><br><span class="line">   <span class="variable language_">this</span>.<span class="property">stackOut</span> = []; <span class="comment">//输出栈</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// push方法</span></span><br><span class="line"><span class="title class_">MyQueue</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">push</span> = <span class="keyword">function</span>(<span class="params">x</span>) &#123;</span><br><span class="line">   <span class="variable language_">this</span>.<span class="property">stackIn</span>.<span class="title function_">push</span>(x);<span class="comment">// 将元素 x 压入输入栈</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// pop方法</span></span><br><span class="line"><span class="title class_">MyQueue</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">pop</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">stackOut</span>.<span class="property">length</span> === <span class="number">0</span>) &#123;  <span class="comment">// 如果输出栈为空</span></span><br><span class="line">        <span class="keyword">while</span> (<span class="variable language_">this</span>.<span class="property">stackIn</span>.<span class="property">length</span> &gt; <span class="number">0</span>) &#123;  <span class="comment">// 将输入栈的所有元素移动到输出栈</span></span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">stackOut</span>.<span class="title function_">push</span>(<span class="variable language_">this</span>.<span class="property">stackIn</span>.<span class="title function_">pop</span>());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">stackOut</span>.<span class="title function_">pop</span>();  <span class="comment">// 弹出输出栈的栈顶元素</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// peek方法</span></span><br><span class="line"><span class="title class_">MyQueue</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">peek</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> front = <span class="variable language_">this</span>.<span class="title function_">pop</span>();  <span class="comment">// 获取队列的头部元素</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">stackOut</span>.<span class="title function_">push</span>(front);  <span class="comment">// 再次将该元素压入输出栈</span></span><br><span class="line">    <span class="keyword">return</span> front;  <span class="comment">// 返回队列的头部元素</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// empty方法</span></span><br><span class="line"><span class="title class_">MyQueue</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">empty</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 判断输入栈和输出栈是否都为空</span></span><br><span class="line">    <span class="keyword">return</span> !<span class="variable language_">this</span>.<span class="property">stackIn</span>.<span class="property">length</span> &amp;&amp; !<span class="variable language_">this</span>.<span class="property">stackOut</span>.<span class="property">length</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="225-用队列实现栈"><a href="#225-用队列实现栈" class="headerlink" title="225. 用队列实现栈"></a>225. 用队列实现栈</h2><p>使用队列实现栈的下列操作：<br>        push(x) — 元素 x 入栈<br>        pop() — 移除栈顶元素。<br>        peek() — 返回栈顶的元素。<br>        empty() — 返回栈是否为空</p><blockquote><p>使用两个队列实现</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="title class_">MyStack</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">queue1</span> = [];</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">queue2</span> = [];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// push方法:元素 x 入栈</span></span><br><span class="line"><span class="title class_">MyStack</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">push</span> = <span class="keyword">function</span>(<span class="params">x</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">queue1</span>.<span class="title function_">push</span>(x);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// pop方法:移除栈顶元素，并返回</span></span><br><span class="line"><span class="title class_">MyStack</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">pop</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 减少两个队列交换的次数， 只有当queue1为空时，交换两个队列</span></span><br><span class="line">    <span class="keyword">if</span>(!<span class="variable language_">this</span>.<span class="property">queue1</span>.<span class="property">length</span>) &#123;</span><br><span class="line">        [<span class="variable language_">this</span>.<span class="property">queue1</span>, <span class="variable language_">this</span>.<span class="property">queue2</span>] = [<span class="variable language_">this</span>.<span class="property">queue2</span>, <span class="variable language_">this</span>.<span class="property">queue1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(<span class="variable language_">this</span>.<span class="property">queue1</span>.<span class="property">length</span> &gt; <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="comment">// shift() 方法从数组中删除第一个元素，并返回该元素的值。</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">queue2</span>.<span class="title function_">push</span>(<span class="variable language_">this</span>.<span class="property">queue1</span>.<span class="title function_">shift</span>());<span class="comment">//移除队列1元素加入队列2</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">queue1</span>.<span class="title function_">shift</span>();<span class="comment">//将队列1剩下的最后一个数移除（栈顶元素）</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// top方法:返回栈顶的元素</span></span><br><span class="line"><span class="title class_">MyStack</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">top</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> x = <span class="variable language_">this</span>.<span class="title function_">pop</span>();</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">queue1</span>.<span class="title function_">push</span>(x);</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// empty方法:返回栈是否为空</span></span><br><span class="line"><span class="title class_">MyStack</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">empty</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> !<span class="variable language_">this</span>.<span class="property">queue1</span>.<span class="property">length</span> &amp;&amp; !<span class="variable language_">this</span>.<span class="property">queue2</span>.<span class="property">length</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><blockquote><p>使用一个队列实现</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="title class_">MyStack</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">queue</span> = [];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// push方法:元素 x 入栈</span></span><br><span class="line"><span class="title class_">MyStack</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">push</span> = <span class="keyword">function</span>(<span class="params">x</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">queue</span>.<span class="title function_">push</span>(x);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// pop方法:移除栈顶元素</span></span><br><span class="line"><span class="title class_">MyStack</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">pop</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> size = <span class="variable language_">this</span>.<span class="property">queue</span>.<span class="property">length</span>;</span><br><span class="line">    <span class="keyword">while</span>(size-- &gt; <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="comment">// 先移除队列里size-1个数，再加入队列</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">queue</span>.<span class="title function_">push</span>(<span class="variable language_">this</span>.<span class="property">queue</span>.<span class="title function_">shift</span>());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">queue</span>.<span class="title function_">shift</span>();<span class="comment">//移除队列里第一个数</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// top方法:返回栈顶的元素</span></span><br><span class="line"><span class="title class_">MyStack</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">top</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 将栈顶元素加入队列再return x</span></span><br><span class="line">    <span class="keyword">const</span> x = <span class="variable language_">this</span>.<span class="title function_">pop</span>();</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">queue</span>.<span class="title function_">push</span>(x);</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// empty方法:返回栈是否为空</span></span><br><span class="line"><span class="title class_">MyStack</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">empty</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> !<span class="variable language_">this</span>.<span class="property">queue</span>.<span class="property">length</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="20-有效的括号"><a href="#20-有效的括号" class="headerlink" title="20. 有效的括号"></a>20. 有效的括号</h2><p>给定一个只包括 ‘(‘，’)’，’{‘，’}’，’[‘，’]’ 的字符串，判断字符串是否有效。<br>示例1： 输入： “([)]”       示例 2： 输入： “{[]}”<br>              输出： false                     输出： true</p><p>思路：</p><blockquote><p>遍历字符串，遇到左括号（(、[ 或 {）,就将对应的右括号（)、] 或 }）压入栈中；<br>遇到右括号，检查是否与栈顶元素匹配。如果不匹配或栈为空，则返回 false。<br>遍历结束后，检查栈是否为空。若为空，则表示所有的括号都匹配，返回 true；否则返回 false。</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> isValid = <span class="keyword">function</span> (<span class="params">s</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> stack = [];</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; s.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">let</span> c = s[i];</span><br><span class="line">    <span class="keyword">switch</span> (c) &#123;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;(&#x27;</span>:</span><br><span class="line">        stack.<span class="title function_">push</span>(<span class="string">&#x27;)&#x27;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;[&#x27;</span>:</span><br><span class="line">        stack.<span class="title function_">push</span>(<span class="string">&#x27;]&#x27;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;&#123;&#x27;</span>:</span><br><span class="line">        stack.<span class="title function_">push</span>(<span class="string">&#x27;&#125;&#x27;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="attr">default</span>:</span><br><span class="line">        <span class="keyword">if</span> (c !== stack.<span class="title function_">pop</span>()) &#123;</span><br><span class="line">          <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> stack.<span class="property">length</span> === <span class="number">0</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 简化版本</span></span><br><span class="line"><span class="keyword">var</span> isValid = <span class="keyword">function</span>(<span class="params">s</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> stack = [], </span><br><span class="line">        map = &#123;</span><br><span class="line">            <span class="string">&quot;(&quot;</span>:<span class="string">&quot;)&quot;</span>,</span><br><span class="line">            <span class="string">&quot;&#123;&quot;</span>:<span class="string">&quot;&#125;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;[&quot;</span>:<span class="string">&quot;]&quot;</span></span><br><span class="line">        &#125;;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">const</span> x <span class="keyword">of</span> s) &#123;</span><br><span class="line">        <span class="keyword">if</span>(x <span class="keyword">in</span> map) &#123;</span><br><span class="line">            stack.<span class="title function_">push</span>(x);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">if</span>(map[stack.<span class="title function_">pop</span>()] !== x) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> !stack.<span class="property">length</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="1047-删除字符串中的所有相邻重复项"><a href="#1047-删除字符串中的所有相邻重复项" class="headerlink" title="1047. 删除字符串中的所有相邻重复项"></a>1047. 删除字符串中的所有相邻重复项</h2><p>给出由小写字母组成的字符串 S，重复项删除操作会选择两个相邻且相同的字母，并删除它们。<br>在 S 上反复执行重复项删除操作，直到无法继续删除。<br>在完成所有重复项删除操作后返回最终的字符串。答案保证唯一。</p><p>示例： 输入：”abbaca”<br>            输出：”ca”</p><p>思路：</p><blockquote><p>初始化一个空栈 stack; 遍历字符串,如果当前字符与栈顶字符相同，则移除栈顶字符;<br>如果当前字符与栈顶字符不同，则将当前字符压入栈中。最后，将栈中的字符连接成一个字符串并返回。</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> removeDuplicates = <span class="keyword">function</span>(<span class="params">s</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> result = []</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">const</span> i <span class="keyword">of</span> s)&#123;</span><br><span class="line">        <span class="keyword">if</span>(i === result[result.<span class="property">length</span>-<span class="number">1</span>])&#123;</span><br><span class="line">            result.<span class="title function_">pop</span>()</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            result.<span class="title function_">push</span>(i)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result.<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ul><li>原地解法（双指针模拟栈）<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> removeDuplicates = <span class="keyword">function</span>(<span class="params">s</span>) &#123;</span><br><span class="line">    s = [...s];</span><br><span class="line">    <span class="keyword">let</span> top = -<span class="number">1</span>; <span class="comment">// 指向栈顶元素的下标</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; s.<span class="property">length</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(top === -<span class="number">1</span> || s[top] !== s[i]) &#123; <span class="comment">// top === -1 即空栈</span></span><br><span class="line">            s[++top] = s[i]; <span class="comment">// 入栈</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            top--; <span class="comment">// 推出栈</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    s.<span class="property">length</span> = top + <span class="number">1</span>; <span class="comment">// 栈顶元素下标 + 1 为栈的长度</span></span><br><span class="line">    <span class="keyword">return</span> s.<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li></ul><h2 id="150-逆波兰表达式求值"><a href="#150-逆波兰表达式求值" class="headerlink" title="150. 逆波兰表达式求值"></a>150. 逆波兰表达式求值</h2><p>根据逆波兰表示法，求表达式的值。有效的运算符包括 + ,  - ,  * ,  / 。<br>每个运算对象可以是整数，也可以是另一个逆波兰表达式。</p><p>示例： 输入： [“2”, “1”, “+”, “3”, “ <em> “]<br>            输出： 9   —&gt;   ((2 + 1) </em> 3) = 9</p><p>思路：</p><blockquote><p>初始化一个空栈 stack，遍历输入的 tokens：<br>    若当前 token 是一个数字，则将其转换为数字并压入栈中。<br>    若当前 token 是一个运算符，则从栈中弹出两个数字，进行相应的运算，并将结果压入栈中。<br>遍历结束后，栈中的唯一元素即为表达式的结果。</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> evalRPN = <span class="keyword">function</span> (<span class="params">tokens</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> stack = [];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">const</span> token <span class="keyword">of</span> tokens) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">isNaN</span>(<span class="title class_">Number</span>(token))) &#123; <span class="comment">// 非数字</span></span><br><span class="line">            <span class="keyword">const</span> n2 = stack.<span class="title function_">pop</span>(); <span class="comment">// 出栈两个数字</span></span><br><span class="line">            <span class="keyword">const</span> n1 = stack.<span class="title function_">pop</span>();</span><br><span class="line">            <span class="keyword">switch</span> (token) &#123; <span class="comment">// 判断运算符类型，算出新数入栈</span></span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;+&quot;</span>:</span><br><span class="line">                    stack.<span class="title function_">push</span>(n1 + n2);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;-&quot;</span>:</span><br><span class="line">                    stack.<span class="title function_">push</span>(n1 - n2);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;*&quot;</span>:</span><br><span class="line">                    stack.<span class="title function_">push</span>(n1 * n2);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;/&quot;</span>:</span><br><span class="line">                    <span class="comment">// | 0 是一种位操作符，会将操作数转换为32位整数，去掉小数部分，从而实现向下取整的效果</span></span><br><span class="line">                    stack.<span class="title function_">push</span>(n1 / n2 | <span class="number">0</span>); <span class="comment">// 例：±2.5 |0 = ±2</span></span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123; <span class="comment">// 数字</span></span><br><span class="line">            stack.<span class="title function_">push</span>(<span class="title class_">Number</span>(token));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> stack[<span class="number">0</span>];  <span class="comment">// 返回栈顶元素</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="239-滑动窗口最大值（困难）-—-单调队列"><a href="#239-滑动窗口最大值（困难）-—-单调队列" class="headerlink" title="239. 滑动窗口最大值（困难）   —- 单调队列"></a>239. 滑动窗口最大值（困难）   —- 单调队列</h2><p>给定一个数组 nums，有一个大小为 k 的滑动窗口从数组的最左侧移动到数组的最右侧。<br>你只可以看到在滑动窗口内的 k 个数字。滑动窗口每次只向右移动一位。返回滑动窗口中的最大值。</p><p>示例： 输入： nums = [1, 3, -1, -3, 5, 3, 6, 7], 和 k = 3<br>            输出： [3, 3, 5, 5, 6, 7]</p><p>思路：</p><blockquote><p>初始检查：若输入数组 nums 为空或 k 为 0，直接返回空数组 []。<br>定义队列 queue 和结果数组 MaxRes (存储每个滑动窗口的最大值)<br>遍历数组nums，对于每个元素 nums[i]：<br>        若队首元素索引小于当前滑动窗口的起始索引 i - k + 1，将其移除。<br>        若当前元素 nums[i] 大于或等于队尾元素对应的值，则移除队尾元素。<br>    将当前元素的索引 i 入队。当 i 大于等于 k - 1 时，滑动窗口完全形成。<br>    将队首元素对应的值加入结果数组 MaxRes，返回结果MaxRes</p></blockquote><p>​    ——————<br>入  首             尾    出<br>​    ——————</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> maxSlidingWindow = <span class="keyword">function</span> (<span class="params">nums, k</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(nums.<span class="property">length</span> == <span class="number">0</span> || k == <span class="number">0</span>) <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">    <span class="keyword">const</span> queue = [],ans = [],len = nums.<span class="property">length</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; len; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(queue.<span class="property">length</span> == <span class="number">0</span>) queue.<span class="title function_">push</span>(i)</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="comment">//保证队首元素的下标和将要push的元素的下标满足indexIn - indexOut&lt;= k-1</span></span><br><span class="line">            <span class="comment">//如果不满足，就直接弹出队首元素</span></span><br><span class="line">            <span class="keyword">while</span>(i - queue[<span class="number">0</span>] &gt; k - <span class="number">1</span>) queue.<span class="title function_">shift</span>()</span><br><span class="line">            <span class="comment">//保证队列的单调性，如果push的元素大于队尾的元素，那么就将队尾的元素弹出，直到push的元素小于等于队尾的元素</span></span><br><span class="line">            <span class="keyword">while</span>(nums[i] &gt;= nums[queue[queue.<span class="property">length</span> - <span class="number">1</span>]]) queue.<span class="title function_">pop</span>()</span><br><span class="line">            queue.<span class="title function_">push</span>(i)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//当i &gt;= k - 1时，每滑动一次，就将队首元素放入最后的结果数组中</span></span><br><span class="line">        <span class="keyword">if</span>(i &gt;= k - <span class="number">1</span>) ans.<span class="title function_">push</span>(nums[queue[<span class="number">0</span>]])</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="347-前-K-个高频元素"><a href="#347-前-K-个高频元素" class="headerlink" title="347.前 K 个高频元素"></a>347.前 K 个高频元素</h2><p>给定一个非空的整数数组，返回其中出现频率前 k 高的元素。<br>示例： 输入： nums = [1, 1, 1, 2, 2, 3], k = 2<br>            输出： [1, 2]</p><blockquote><p>解法一：map+数组（时间复杂度nlogn，不符合）</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> topKFrequent = <span class="keyword">function</span>(<span class="params">nums, k</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> map = <span class="keyword">new</span> <span class="title class_">Map</span>(), arr = [...<span class="keyword">new</span> <span class="title class_">Set</span>(nums)]</span><br><span class="line">    nums.<span class="title function_">map</span>(<span class="function">(<span class="params">num</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(map.<span class="title function_">has</span>(num)) map.<span class="title function_">set</span>(num, map.<span class="title function_">get</span>(num)+<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">else</span> map.<span class="title function_">set</span>(num, <span class="number">1</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> arr.<span class="title function_">sort</span>(<span class="function">(<span class="params">a, b</span>) =&gt;</span> map.<span class="title function_">get</span>(b) - map.<span class="title function_">get</span>(a)).<span class="title function_">slice</span>(<span class="number">0</span>, k);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><blockquote><p>解法二：map + 小顶堆 (Leetcode 提供了优先队列的库)</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> topKFrequent = <span class="keyword">function</span> (<span class="params">nums, k</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> map = <span class="keyword">new</span> <span class="title class_">Map</span>();</span><br><span class="line">    <span class="keyword">const</span> res = [];</span><br><span class="line">    <span class="comment">//使用 map 统计元素出现频率</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">const</span> num <span class="keyword">of</span> nums) &#123;</span><br><span class="line">      map.<span class="title function_">set</span>(num, (map.<span class="title function_">get</span>(num) || <span class="number">0</span>) + <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//创建小顶堆</span></span><br><span class="line">    <span class="keyword">const</span> heap = <span class="keyword">new</span> <span class="title class_">PriorityQueue</span>(&#123;</span><br><span class="line">      <span class="attr">compare</span>: <span class="function">(<span class="params">a, b</span>) =&gt;</span> a.<span class="property">value</span> - b.<span class="property">value</span></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">const</span> [key, value] <span class="keyword">of</span> map) &#123;</span><br><span class="line">      heap.<span class="title function_">enqueue</span>(&#123; key, value &#125;);</span><br><span class="line">      <span class="keyword">if</span> (heap.<span class="title function_">size</span>() &gt; k) heap.<span class="title function_">dequeue</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//处理输出</span></span><br><span class="line">    <span class="keyword">while</span> (heap.<span class="title function_">size</span>()) res.<span class="title function_">push</span>(heap.<span class="title function_">dequeue</span>().<span class="property">key</span>);</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>&gt;</p><blockquote><p>手写实现优先队列 ：js 没有堆 需要自己构造</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Heap</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">compareFn</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">compareFn</span> = compareFn;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">queue</span> = [];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 添加</span></span><br><span class="line">    <span class="title function_">push</span>(<span class="params">item</span>) &#123;</span><br><span class="line">        <span class="comment">// 推入元素</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">queue</span>.<span class="title function_">push</span>(item);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 上浮</span></span><br><span class="line">        <span class="keyword">let</span> index = <span class="variable language_">this</span>.<span class="title function_">size</span>() - <span class="number">1</span>; <span class="comment">// 记录推入元素下标</span></span><br><span class="line">        <span class="keyword">let</span> parent = <span class="title class_">Math</span>.<span class="title function_">floor</span>((index - <span class="number">1</span>) / <span class="number">2</span>); <span class="comment">// 记录父节点下标</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (parent &gt;= <span class="number">0</span> &amp;&amp; <span class="variable language_">this</span>.<span class="title function_">compare</span>(parent, index) &gt; <span class="number">0</span>) &#123; <span class="comment">// 注意compare参数顺序</span></span><br><span class="line">            [<span class="variable language_">this</span>.<span class="property">queue</span>[index], <span class="variable language_">this</span>.<span class="property">queue</span>[parent]] = [<span class="variable language_">this</span>.<span class="property">queue</span>[parent], <span class="variable language_">this</span>.<span class="property">queue</span>[index]];</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 更新下标</span></span><br><span class="line">            index = parent;</span><br><span class="line">            parent = <span class="title class_">Math</span>.<span class="title function_">floor</span>((index - <span class="number">1</span>) / <span class="number">2</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取堆顶元素并移除</span></span><br><span class="line">    <span class="title function_">pop</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">// 边界情况，只有一个元素或没有元素应直接弹出</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="title function_">size</span>() &lt;= <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">queue</span>.<span class="title function_">pop</span>()</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 堆顶元素</span></span><br><span class="line">        <span class="keyword">const</span> out = <span class="variable language_">this</span>.<span class="property">queue</span>[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 移除堆顶元素 填入最后一个元素</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">queue</span>[<span class="number">0</span>] = <span class="variable language_">this</span>.<span class="property">queue</span>.<span class="title function_">pop</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 下沉</span></span><br><span class="line">        <span class="keyword">let</span> index = <span class="number">0</span>; <span class="comment">// 记录下沉元素下标</span></span><br><span class="line">        <span class="keyword">let</span> left = <span class="number">1</span>; <span class="comment">// left 是左子节点下标 left + 1 则是右子节点下标</span></span><br><span class="line">        <span class="keyword">let</span> searchChild = <span class="variable language_">this</span>.<span class="title function_">compare</span>(left, left + <span class="number">1</span>) &gt; <span class="number">0</span> ? left + <span class="number">1</span> : left;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (<span class="variable language_">this</span>.<span class="title function_">compare</span>(index, searchChild) &gt; <span class="number">0</span>) &#123; <span class="comment">// 注意compare参数顺序</span></span><br><span class="line">            [<span class="variable language_">this</span>.<span class="property">queue</span>[index], <span class="variable language_">this</span>.<span class="property">queue</span>[searchChild]] = [<span class="variable language_">this</span>.<span class="property">queue</span>[searchChild], <span class="variable language_">this</span>.<span class="property">queue</span>[index]];</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 更新下标</span></span><br><span class="line">            index = searchChild;</span><br><span class="line">            left = <span class="number">2</span> * index + <span class="number">1</span>;</span><br><span class="line">            searchChild = <span class="variable language_">this</span>.<span class="title function_">compare</span>(left, left + <span class="number">1</span>) &gt; <span class="number">0</span> ? left + <span class="number">1</span> : left;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> out;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">size</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">queue</span>.<span class="property">length</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 使用传入的 compareFn 比较两个位置的元素</span></span><br><span class="line">    <span class="title function_">compare</span>(<span class="params">index1, index2</span>) &#123;</span><br><span class="line">        <span class="comment">// 处理下标越界问题</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">queue</span>[index1] === <span class="literal">undefined</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">queue</span>[index2] === <span class="literal">undefined</span>) <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">compareFn</span>(<span class="variable language_">this</span>.<span class="property">queue</span>[index1], <span class="variable language_">this</span>.<span class="property">queue</span>[index2]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> topKFrequent = <span class="keyword">function</span> (<span class="params">nums, k</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> map = <span class="keyword">new</span> <span class="title class_">Map</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">const</span> num <span class="keyword">of</span> nums) &#123;</span><br><span class="line">        map.<span class="title function_">set</span>(num, (map.<span class="title function_">get</span>(num) || <span class="number">0</span>) + <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建小顶堆</span></span><br><span class="line">    <span class="keyword">const</span> heap= <span class="keyword">new</span> <span class="title class_">Heap</span>(<span class="function">(<span class="params">a, b</span>) =&gt;</span> a[<span class="number">1</span>] - b[<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// entry 是一个长度为2的数组，0位置存储key，1位置存储value</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">const</span> entry <span class="keyword">of</span> map.<span class="title function_">entries</span>()) &#123;</span><br><span class="line">        heap.<span class="title function_">push</span>(entry);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (heap.<span class="title function_">size</span>() &gt; k) &#123;</span><br><span class="line">            heap.<span class="title function_">pop</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// return heap.queue.map(e =&gt; e[0]);</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> res = [];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = heap.<span class="title function_">size</span>() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">        res[i] = heap.<span class="title function_">pop</span>()[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>数组篇</title>
      <link href="/2024/08/02/algorithm-%E6%95%B0%E7%BB%84/"/>
      <url>/2024/08/02/algorithm-%E6%95%B0%E7%BB%84/</url>
      
        <content type="html"><![CDATA[<h1 id="数组篇"><a href="#数组篇" class="headerlink" title="数组篇"></a>数组篇</h1><h2 id="704-二分查找"><a href="#704-二分查找" class="headerlink" title="704.二分查找"></a>704.二分查找</h2><ul><li>递归法<blockquote><p>判断target和nums[mid]，返回binarySearch()函数<br>时间复杂度：O(log n)</p></blockquote></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> search = <span class="keyword">function</span>(<span class="params">nums, target</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">binarySearch</span>(nums,target,<span class="number">0</span>,nums.<span class="property">length</span>-<span class="number">1</span>)</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">binarySearch</span>(<span class="params">nums,target,left,right</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(left &gt; right) <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">let</span> mid = <span class="title class_">Math</span>.<span class="title function_">floor</span>((left+right)/<span class="number">2</span>)</span><br><span class="line">    <span class="keyword">if</span>(target === nums[mid])&#123;</span><br><span class="line">        <span class="keyword">return</span> mid</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(target &gt; nums[mid])&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_">binarySearch</span>(nums,target,mid+<span class="number">1</span>,right)</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_">binarySearch</span>(nums,target,left,mid-<span class="number">1</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>非递归法<blockquote><p>while循环：定义left、right，在while循环体内if判断target和nums[mid]，返回新的left、right和mid<br>时间复杂度：O(log n)</p></blockquote></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> search = <span class="keyword">function</span>(<span class="params">nums, target</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> left = <span class="number">0</span></span><br><span class="line">    <span class="keyword">let</span> right = nums.<span class="property">length</span>-<span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span>(left &lt;= right)&#123;</span><br><span class="line">        <span class="keyword">let</span> mid = <span class="title class_">Math</span>.<span class="title function_">floor</span>((left+right)/<span class="number">2</span>)</span><br><span class="line">        <span class="keyword">if</span>(target &lt; nums[mid])&#123;</span><br><span class="line">            right = mid - <span class="number">1</span></span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(target &gt; nums[mid])&#123;</span><br><span class="line">            left = mid + <span class="number">1</span></span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> mid</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="27-移除元素"><a href="#27-移除元素" class="headerlink" title="27.移除元素"></a>27.移除元素</h2><ul><li>双指针法<blockquote><p>时间复杂度：O(n)</p></blockquote></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> removeElement = <span class="keyword">function</span>(<span class="params">nums, val</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> result = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i&lt;nums.<span class="property">length</span>; i++ ) &#123;</span><br><span class="line">        <span class="keyword">if</span>(nums[i] != val)&#123;</span><br><span class="line">            nums[result] = nums[i]</span><br><span class="line">            result++</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="977-有序数组的平方"><a href="#977-有序数组的平方" class="headerlink" title="977.有序数组的平方"></a>977.有序数组的平方</h2><ul><li>暴力排序 — 每个数平方之后，排个序<blockquote><p>时间复杂度是 O(n + nlogn)</p></blockquote></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> sortedSquares = <span class="keyword">function</span>(<span class="params">nums</span>) &#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i&lt;nums.<span class="property">length</span>; i++) &#123;</span><br><span class="line">        nums[i] *= nums[i]</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> nums.<span class="title function_">sort</span>(<span class="keyword">function</span>(<span class="params">a,b</span>) &#123;<span class="keyword">return</span> a-b&#125;)</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ul><li>双指针法  <blockquote><p>i指向起始位置，j指向终止位置。<br>定义一个新数组result，和A数组一样的大小，让k指向result数组终止位置。<br>时间复杂度为O(n)</p></blockquote></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> sortedSquares = <span class="keyword">function</span>(<span class="params">nums</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> n = nums.<span class="property">length</span></span><br><span class="line">    <span class="keyword">const</span> result = <span class="keyword">new</span> <span class="title class_">Array</span>(n).<span class="title function_">fill</span>()<span class="comment">//fill()会根据数组长度替换数组中所有的值为undefined</span></span><br><span class="line">    <span class="keyword">let</span> i=<span class="number">0</span>, j=n-<span class="number">1</span>, k=n-<span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span>(i&lt;=j)&#123;</span><br><span class="line">        <span class="keyword">let</span> left = nums[i]*nums[i],</span><br><span class="line">        right=nums[j]*nums[j]</span><br><span class="line">        <span class="keyword">if</span>(left&gt;right)&#123;</span><br><span class="line">            result[k--] = left</span><br><span class="line">            i++</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            result[k--] = right</span><br><span class="line">            j--</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="209-长度最小的子数组"><a href="#209-长度最小的子数组" class="headerlink" title="209.长度最小的子数组"></a>209.长度最小的子数组</h2><ul><li>暴力解法（超时）<blockquote><p>时间复杂度：O(n^2)</p></blockquote></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> minSubArrayLen = <span class="keyword">function</span>(<span class="params">target, nums</span>) &#123;</span><br><span class="line">    <span class="comment">// 表示在  JS 中最大的浮点数。</span></span><br><span class="line">    <span class="keyword">let</span> result = <span class="title class_">Number</span>.<span class="property">MAX_VALUE</span><span class="comment">// 因为要得到最小数，所以初始化为最大的数</span></span><br><span class="line">    <span class="keyword">let</span> subLength = <span class="number">0</span></span><br><span class="line">    <span class="keyword">let</span> sum = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>; i&lt;nums.<span class="property">length</span>; i++) &#123; <span class="comment">// 设置子序列起点为i</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">let</span> j=i; j&lt;nums.<span class="property">length</span>; j++)&#123; <span class="comment">// 设置子序列终止位置为j</span></span><br><span class="line">            sum += nums[j]</span><br><span class="line">            <span class="keyword">if</span>(target &lt;= sum)&#123;</span><br><span class="line">                subLength = j-i+<span class="number">1</span></span><br><span class="line">                result = result &lt; subLength ? result : subLength</span><br><span class="line">                <span class="comment">// result = Math.min(result, subLength)</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result === <span class="title class_">Number</span>.<span class="property">MAX_VALUE</span> ? <span class="number">0</span> : result<span class="comment">// 如果result没有被赋值的话，就返回0，说明没有符合条件的子序列</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ul><li>滑动窗口！！！<blockquote><p>时间复杂度：O(n)</p></blockquote></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> minSubArrayLen = <span class="keyword">function</span>(<span class="params">target, nums</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> start,sum = <span class="number">0</span></span><br><span class="line">    <span class="keyword">let</span> result = <span class="title class_">Infinity</span> <span class="comment">//Infinity比任何有限数都大。</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> end=<span class="number">0</span>; end&lt;nums.<span class="property">length</span>; end++)&#123;</span><br><span class="line">        sum += nums[end]</span><br><span class="line">        <span class="comment">// 动态调节滑动窗口的起始位置</span></span><br><span class="line">        <span class="keyword">while</span>(sum &gt;= target)&#123;</span><br><span class="line">            <span class="keyword">let</span> minLength = end - start + <span class="number">1</span></span><br><span class="line">            result = <span class="title class_">Math</span>.<span class="title function_">min</span>(result, minLength)</span><br><span class="line">            sum -= nums[start]</span><br><span class="line">            start++</span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result === <span class="title class_">Infinity</span> ? <span class="number">0</span> : result</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="59-螺旋矩阵II"><a href="#59-螺旋矩阵II" class="headerlink" title="59.螺旋矩阵II"></a>59.螺旋矩阵II</h2><blockquote><p>时间复杂度 O(n^2): 模拟遍历二维矩阵的时间</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> generateMatrix = <span class="keyword">function</span>(<span class="params">n</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> x = <span class="number">0</span>, y = <span class="number">0</span>   <span class="comment">// 起始位置</span></span><br><span class="line">    <span class="keyword">let</span> loop = <span class="title class_">Math</span>.<span class="title function_">floor</span>(n/<span class="number">2</span>)   <span class="comment">// 旋转圈数</span></span><br><span class="line">    <span class="keyword">let</span> mid = <span class="title class_">Math</span>.<span class="title function_">floor</span>(n/<span class="number">2</span>)    <span class="comment">// 中间位置</span></span><br><span class="line">    <span class="keyword">let</span> offset = <span class="number">1</span>    <span class="comment">// 控制每一层填充元素个数</span></span><br><span class="line">    <span class="keyword">let</span> num = <span class="number">1</span>     <span class="comment">// 更新填充数字</span></span><br><span class="line">    <span class="keyword">let</span> matrix = <span class="keyword">new</span> <span class="title class_">Array</span>(n).<span class="title function_">fill</span>(<span class="number">0</span>).<span class="title function_">map</span>(<span class="function">() =&gt;</span> <span class="keyword">new</span> <span class="title class_">Array</span>(n).<span class="title function_">fill</span>(<span class="number">0</span>))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (loop--) &#123;</span><br><span class="line">        <span class="keyword">let</span> row = x, col = y</span><br><span class="line">        <span class="comment">// 上行从左到右（左闭右开）</span></span><br><span class="line">        <span class="keyword">for</span> (col = y; col &lt; n - offset; col++) &#123;</span><br><span class="line">            matrix[row][col] = num</span><br><span class="line">            num++</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 右列从上到下（左闭右开）</span></span><br><span class="line">        <span class="keyword">for</span> (row = x; row &lt; n - offset; row++) &#123;</span><br><span class="line">            matrix[row][col] = num++</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 下行从右到左（左闭右开）</span></span><br><span class="line">        <span class="keyword">for</span> (col = n - offset; col &gt; y; col--) &#123;</span><br><span class="line">            matrix[row][col] = num++</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 左列做下到上（左闭右开）</span></span><br><span class="line">        <span class="keyword">for</span> (row = n - offset; row &gt; x; row--) &#123;</span><br><span class="line">            matrix[row][col] = num++</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 更新起始位置</span></span><br><span class="line">        x++</span><br><span class="line">        y++</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 更新offset</span></span><br><span class="line">        offset += <span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 如果n为奇数的话，需要单独给矩阵最中间的位置赋值</span></span><br><span class="line">    <span class="keyword">if</span> (n % <span class="number">2</span> === <span class="number">1</span>) &#123;</span><br><span class="line">        matrix[mid][mid] = num</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> matrix</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 递归 双指针 滑动窗口 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>链表篇</title>
      <link href="/2024/08/02/algorithm-%E9%93%BE%E8%A1%A8%E7%AF%87/"/>
      <url>/2024/08/02/algorithm-%E9%93%BE%E8%A1%A8%E7%AF%87/</url>
      
        <content type="html"><![CDATA[<h1 id="链表篇"><a href="#链表篇" class="headerlink" title="链表篇"></a>链表篇</h1><p>定义链表节点方式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">LinkNode</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">val, next</span>) &#123;</span><br><span class="line">    <span class="comment">//constructor构造函数传入新建结点的值和下一个结点的指针</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">val</span> = val;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">next</span> = next;</span><br><span class="line">    <span class="comment">/*this指针的作用：</span></span><br><span class="line"><span class="comment">        1.当形参与成员变量同名时，可以用this指针来区分</span></span><br><span class="line"><span class="comment">        2.this指针指向被调用的成员函数所属的对象，所以在类的非静态</span></span><br><span class="line"><span class="comment">        成员函数中用return *this可以返回对象本身，谁调用就指向谁</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="203-移除链表元素"><a href="#203-移除链表元素" class="headerlink" title="203.移除链表元素"></a>203.移除链表元素</h2><ul><li><p>方法一：使用原来的链表来进行删除操作</p><blockquote><p>时间复杂度: O(n)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> removeElements = <span class="keyword">function</span>(<span class="params">head, val</span>) &#123;</span><br><span class="line">    <span class="comment">// 头节点</span></span><br><span class="line">    <span class="keyword">while</span>(head !== <span class="literal">null</span> &amp;&amp; head.<span class="property">val</span> === val) head = head.<span class="property">next</span> </span><br><span class="line">    <span class="comment">// 其他节点</span></span><br><span class="line">    <span class="keyword">let</span> cur = head<span class="comment">//方便找到要删除节点node的前一个prev，让prev指向node.next</span></span><br><span class="line">    <span class="keyword">while</span>(cur !== <span class="literal">null</span> &amp;&amp; cur.<span class="property">next</span> !== <span class="literal">null</span>)&#123;<span class="comment">//避免对空指针进行操作</span></span><br><span class="line">        <span class="keyword">if</span>(cur.<span class="property">next</span>.<span class="property">val</span> === val)&#123;</span><br><span class="line">            cur.<span class="property">next</span> = cur.<span class="property">next</span>.<span class="property">next</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;<span class="comment">//不满足val，继续指向下一个节点</span></span><br><span class="line">            cur = cur.<span class="property">next</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> head</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote></li><li><p>方法二：设置一个虚拟头结点在进行删除操作 —— 推荐</p><blockquote><p>时间复杂度: O(n)</p></blockquote></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> removeElements = <span class="keyword">function</span>(<span class="params">head, val</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> node = <span class="keyword">new</span> <span class="title class_">ListNode</span>(<span class="number">0</span>, head)<span class="comment">//new一个虚拟头结点</span></span><br><span class="line">    <span class="keyword">let</span> cur = node</span><br><span class="line">    <span class="keyword">while</span>(cur.<span class="property">next</span> !== <span class="literal">null</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(cur.<span class="property">next</span>.<span class="property">val</span> === val)&#123;</span><br><span class="line">            cur.<span class="property">next</span> = cur.<span class="property">next</span>.<span class="property">next</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            cur = cur.<span class="property">next</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> node.<span class="property">next</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="707-设计链表"><a href="#707-设计链表" class="headerlink" title="707.设计链表"></a>707.设计链表</h2><ul><li>设置一个虚拟头结点进行操作<blockquote><p>时间复杂度: 涉及 index 的相关操作为 O(index), 其余为 O(1)</p></blockquote></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">LinkNode</span>&#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">val, next</span>)&#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">val</span> = val</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">next</span> = next</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化单链表</span></span><br><span class="line"><span class="comment">// 单链表由一个个LinkNode的结点组成，可以想成数组。包含 长度、头结点、尾结点</span></span><br><span class="line"><span class="keyword">var</span> <span class="title class_">MyLinkedList</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">size</span> = <span class="number">0</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">head</span> = <span class="literal">null</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">tail</span> = <span class="literal">null</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 遍历链表节点</span></span><br><span class="line"><span class="title class_">MyLinkedList</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">getNode</span> = <span class="keyword">function</span>(<span class="params">index</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(index &lt; <span class="number">0</span> || index &gt;= <span class="variable language_">this</span>.<span class="property">size</span>) <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">    <span class="comment">// 虚拟头节点</span></span><br><span class="line">    <span class="keyword">let</span> cur = <span class="keyword">new</span> <span class="title class_">LinkNode</span>(<span class="number">0</span>, <span class="variable language_">this</span>.<span class="property">head</span>)</span><br><span class="line">    <span class="keyword">while</span>(index-- &gt;= <span class="number">0</span>)&#123;</span><br><span class="line">        cur = cur.<span class="property">next</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> cur</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number</span>&#125; <span class="variable">index</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">number</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// 获取链表中第 index 个节点的值。如果索引无效，则返回-1。</span></span><br><span class="line"><span class="title class_">MyLinkedList</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">get</span> = <span class="keyword">function</span>(<span class="params">index</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(index &lt; <span class="number">0</span> || index &gt;= <span class="variable language_">this</span>.<span class="property">size</span>) <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">getNode</span>(index).<span class="property">val</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number</span>&#125; <span class="variable">val</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">void</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// 在链表的第一个元素之前添加一个值为 val 的节点</span></span><br><span class="line"><span class="title class_">MyLinkedList</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">addAtHead</span> = <span class="keyword">function</span>(<span class="params">val</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> node = <span class="keyword">new</span> <span class="title class_">LinkNode</span>(val, <span class="variable language_">this</span>.<span class="property">head</span>)</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">head</span> = node</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">size</span>++</span><br><span class="line">    <span class="comment">// 当原链表为空时，新添加的节点是头节点，也是尾节点</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="property">tail</span> === <span class="literal">null</span>)&#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">tail</span> = <span class="variable language_">this</span>.<span class="property">head</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number</span>&#125; <span class="variable">val</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">void</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// 将值为 val 的节点追加到链表的最后一个元素</span></span><br><span class="line"><span class="title class_">MyLinkedList</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">addAtTail</span> = <span class="keyword">function</span>(<span class="params">val</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> node = <span class="keyword">new</span> <span class="title class_">LinkNode</span>(val, <span class="literal">null</span>)</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">size</span>++</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="property">tail</span>)&#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">tail</span>.<span class="property">next</span> = node</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">tail</span> = node</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 当原链表为空时，新添加的节点是头节点，也是尾节点</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">head</span> = node</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">tail</span> = node</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number</span>&#125; index </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number</span>&#125; <span class="variable">val</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">void</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// 在链表中的第 index 个节点之前添加值为 val  的节点</span></span><br><span class="line"><span class="title class_">MyLinkedList</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">addAtIndex</span> = <span class="keyword">function</span>(<span class="params">index, val</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(index &gt; <span class="variable language_">this</span>.<span class="property">size</span>) <span class="keyword">return</span></span><br><span class="line">    <span class="keyword">if</span>(index &lt;= <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">addAtHead</span>(val)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(index === <span class="variable language_">this</span>.<span class="property">size</span>)&#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">addAtTail</span>(val)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 获取目标节点的上一个的节点</span></span><br><span class="line">    <span class="keyword">const</span> node = <span class="variable language_">this</span>.<span class="title function_">getNode</span>(index-<span class="number">1</span>)</span><br><span class="line">    node.<span class="property">next</span> = <span class="keyword">new</span> <span class="title class_">LinkNode</span>(val, node.<span class="property">next</span>)</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">size</span>++</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number</span>&#125; <span class="variable">index</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">void</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// 如果索引 index 有效，则删除链表中的第 index 个节点</span></span><br><span class="line"><span class="title class_">MyLinkedList</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">deleteAtIndex</span> = <span class="keyword">function</span>(<span class="params">index</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(index &lt; <span class="number">0</span> || index &gt;= <span class="variable language_">this</span>.<span class="property">size</span>) <span class="keyword">return</span></span><br><span class="line">    <span class="comment">// index所指定的是链表头节点</span></span><br><span class="line">    <span class="keyword">if</span>(index === <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">head</span> = <span class="variable language_">this</span>.<span class="property">head</span>.<span class="property">next</span></span><br><span class="line">        <span class="comment">// 当index也为尾节点</span></span><br><span class="line">        <span class="keyword">if</span>(index === <span class="variable language_">this</span>.<span class="property">size</span>-<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">tail</span> = <span class="variable language_">this</span>.<span class="property">head</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">size</span>--</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 获取目标节点的上一个的节点</span></span><br><span class="line">    <span class="keyword">const</span> node = <span class="variable language_">this</span>.<span class="title function_">getNode</span>(index-<span class="number">1</span>)</span><br><span class="line">    node.<span class="property">next</span> = node.<span class="property">next</span>.<span class="property">next</span></span><br><span class="line">    <span class="comment">// index所指定的是链表尾节点</span></span><br><span class="line">    <span class="keyword">if</span>(index === <span class="variable language_">this</span>.<span class="property">size</span>-<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">tail</span> = node</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">size</span>--</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="206-反转链表"><a href="#206-反转链表" class="headerlink" title="206.反转链表"></a>206.反转链表</h2><blockquote><p>时间复杂度: O(n)</p></blockquote><ul><li>双指针法</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reverseList = <span class="keyword">function</span>(<span class="params">head</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(!head || !head.<span class="property">next</span>) <span class="keyword">return</span> head</span><br><span class="line">    <span class="keyword">let</span> pre = <span class="literal">null</span></span><br><span class="line">    <span class="keyword">let</span> cur = head</span><br><span class="line">    <span class="keyword">while</span>(cur)&#123;</span><br><span class="line">        <span class="keyword">let</span> temp = <span class="literal">null</span> </span><br><span class="line">        temp = cur.<span class="property">next</span> <span class="comment">// 暂存当前指针cur.next</span></span><br><span class="line">        cur.<span class="property">next</span> = pre <span class="comment">// 反转链表：改变 cur-&gt;next 的指向</span></span><br><span class="line">        <span class="comment">// 更新pre和cur指针</span></span><br><span class="line">        pre = cur </span><br><span class="line">        cur = temp</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> pre</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ul><li><p>递归法①：从前往后反转</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reverse = <span class="keyword">function</span>(<span class="params">pre, head</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(!head) <span class="keyword">return</span> pre</span><br><span class="line">    <span class="keyword">let</span> temp = head.<span class="property">next</span></span><br><span class="line">    head.<span class="property">next</span> = pre</span><br><span class="line">    pre = head</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">reverse</span>(pre, temp)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> reverseList = <span class="keyword">function</span>(<span class="params">head</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">reverse</span>(<span class="literal">null</span>, head)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>递归法②：从后往前反转</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reverse = <span class="keyword">function</span>(<span class="params">head</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(!head || !head.<span class="property">next</span>) <span class="keyword">return</span> head;</span><br><span class="line">    <span class="keyword">const</span> pre = <span class="title function_">reverse</span>(head.<span class="property">next</span>);</span><br><span class="line">    head.<span class="property">next</span> = pre.<span class="property">next</span>;</span><br><span class="line">    pre.<span class="property">next</span> = head;</span><br><span class="line">    <span class="keyword">return</span> head;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> reverseList = <span class="keyword">function</span>(<span class="params">head</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> cur = head;</span><br><span class="line">    <span class="keyword">while</span>(cur &amp;&amp; cur.<span class="property">next</span>) &#123;</span><br><span class="line">        cur = cur.<span class="property">next</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">reverse</span>(head);</span><br><span class="line">    <span class="keyword">return</span> cur;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li></ul><h2 id="24-两两交换链表中的节点"><a href="#24-两两交换链表中的节点" class="headerlink" title="24. 两两交换链表中的节点"></a>24. 两两交换链表中的节点</h2><ul><li>迭代法A B C D E —&gt; B A D C E</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> swapPairs = <span class="keyword">function</span>(<span class="params">head</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> node0 = <span class="keyword">new</span> <span class="title class_">ListNode</span>(<span class="number">0</span>, head)</span><br><span class="line">    <span class="keyword">let</span> tempNode = node0</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(tempNode.<span class="property">next</span> &amp;&amp; tempNode.<span class="property">next</span>.<span class="property">next</span>)&#123;</span><br><span class="line">        <span class="keyword">let</span> node1 = tempNode.<span class="property">next</span> <span class="comment">//记录临时节点head  A</span></span><br><span class="line">        <span class="keyword">let</span> node2 = tempNode.<span class="property">next</span>.<span class="property">next</span>.<span class="property">next</span><span class="comment">//记录临时节点C</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 改变指针指向</span></span><br><span class="line">        tempNode.<span class="property">next</span> = tempNode.<span class="property">next</span>.<span class="property">next</span> <span class="comment">// tempNode指向B</span></span><br><span class="line">        tempNode.<span class="property">next</span>.<span class="property">next</span> = node1 <span class="comment">// tempNode的下一个节点指向A</span></span><br><span class="line">        tempNode.<span class="property">next</span>.<span class="property">next</span>.<span class="property">next</span> = node2 <span class="comment">// tempNode的下下个节点指向C</span></span><br><span class="line">        tempNode = tempNode.<span class="property">next</span>.<span class="property">next</span> <span class="comment">// tempNode移动两位，准备下一轮交换</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> node0.<span class="property">next</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>递归法<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> swapPairs = <span class="keyword">function</span>(<span class="params">head</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(!head || !head.<span class="property">next</span>) <span class="keyword">return</span> head</span><br><span class="line">    <span class="keyword">let</span> cur = head.<span class="property">next</span></span><br><span class="line">    head.<span class="property">next</span> = <span class="title function_">swapPairs</span>(head.<span class="property">next</span>.<span class="property">next</span>)</span><br><span class="line">    cur.<span class="property">next</span> = head</span><br><span class="line">    <span class="keyword">return</span> cur</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="19-删除链表的倒数第N个节点"><a href="#19-删除链表的倒数第N个节点" class="headerlink" title="19.删除链表的倒数第N个节点"></a>19.删除链表的倒数第N个节点</h2><ul><li>快慢指针<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> removeNthFromEnd = <span class="keyword">function</span>(<span class="params">head, n</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> dummyHead = <span class="keyword">new</span> <span class="title class_">ListNode</span>(<span class="number">0</span>, head)</span><br><span class="line">    <span class="comment">// 定义快慢指针</span></span><br><span class="line">    <span class="keyword">let</span> fast = dummyHead</span><br><span class="line">    <span class="keyword">let</span> slow = dummyHead</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">1</span>; i&lt;=n+<span class="number">1</span>; i++)&#123;</span><br><span class="line">        <span class="comment">// fast首先走n + 1步</span></span><br><span class="line">        fast = fast.<span class="property">next</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// fast和slow同时移动，直到fast指向末尾</span></span><br><span class="line">    <span class="keyword">while</span>(fast !== <span class="literal">null</span>)&#123;</span><br><span class="line">        fast = fast.<span class="property">next</span></span><br><span class="line">        slow = slow.<span class="property">next</span></span><br><span class="line">    &#125;</span><br><span class="line">    slow.<span class="property">next</span> = slow.<span class="property">next</span>.<span class="property">next</span><span class="comment">//删除slow指向的下一个节点</span></span><br><span class="line">    <span class="keyword">return</span> dummyHead.<span class="property">next</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li></ul><h2 id="面试题-02-07-链表相交"><a href="#面试题-02-07-链表相交" class="headerlink" title="面试题 02.07. 链表相交"></a>面试题 02.07. 链表相交</h2><blockquote><p>时间复杂度：O(n + m)</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取链表长度</span></span><br><span class="line"><span class="keyword">var</span> getListLen = <span class="keyword">function</span>(<span class="params">head</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> len = <span class="number">0</span>, cur = head</span><br><span class="line">    <span class="keyword">while</span>(cur) &#123;</span><br><span class="line">        len++</span><br><span class="line">        cur = cur.<span class="property">next</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> len</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> getIntersectionNode = <span class="keyword">function</span>(<span class="params">headA, headB</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> curA = headA, curB = headB,</span><br><span class="line">    lenA = <span class="title function_">getListLen</span>(headA),</span><br><span class="line">    lenB = <span class="title function_">getListLen</span>(headB)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 让curA成为最长链表的头，lenA为其长度</span></span><br><span class="line">    <span class="keyword">if</span>(lenA &lt; lenB) &#123;</span><br><span class="line">        <span class="comment">// 交换变量，确保curA为最长</span></span><br><span class="line">        [curA, curB] = [curB, curA];</span><br><span class="line">        [lenA, lenB] = [lenB, lenA];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 让curA和curB在同一起点上（末尾位置对齐）</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; lenA - lenB; i++)&#123;</span><br><span class="line">        curA = curA.<span class="property">next</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 遍历curA 和 curB，遇到相同则直接返回</span></span><br><span class="line">    <span class="keyword">while</span>(curA &amp;&amp; curA !== curB)&#123;</span><br><span class="line">        curA = curA.<span class="property">next</span></span><br><span class="line">        curB = curB.<span class="property">next</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// curA到达尾节点时，curA的指针指向null</span></span><br><span class="line">    <span class="keyword">return</span> curA</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="142-环形链表II"><a href="#142-环形链表II" class="headerlink" title="142.环形链表II"></a>142.环形链表II</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> detectCycle = <span class="keyword">function</span>(<span class="params">head</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(!head &amp;&amp; head.<span class="property">next</span> === <span class="literal">null</span>) <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">    <span class="keyword">let</span> slow = head.<span class="property">next</span>, fast = head.<span class="property">next</span>.<span class="property">next</span></span><br><span class="line">    <span class="comment">// 快慢指针相遇前</span></span><br><span class="line">    <span class="keyword">while</span>(fast &amp;&amp; fast.<span class="property">next</span> &amp;&amp; fast !== slow)&#123;</span><br><span class="line">        fast = fast.<span class="property">next</span>.<span class="property">next</span></span><br><span class="line">        slow = slow.<span class="property">next</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 第一次相遇后，再从 头结点 和 相遇节点 分别出发一个指针，</span></span><br><span class="line">    <span class="comment">// 且这两个指针每次只走一个节点， </span></span><br><span class="line">    <span class="comment">// 那么当这两个指针再次相遇的时候就是 环形入口的节点。</span></span><br><span class="line">    <span class="keyword">if</span>(!fast &amp;&amp; !fast.<span class="property">next</span>) <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">    slow = head</span><br><span class="line">    <span class="keyword">while</span>(fast !== slow)&#123;</span><br><span class="line">        slow = slow.<span class="property">next</span></span><br><span class="line">        fast = fast.<span class="property">next</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> slow <span class="comment">// 返回环形入口的节点。</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>哈希表篇</title>
      <link href="/2024/08/02/algorithm-%E5%93%88%E5%B8%8C%E8%A1%A8/"/>
      <url>/2024/08/02/algorithm-%E5%93%88%E5%B8%8C%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="哈希表篇（数组、set、map）"><a href="#哈希表篇（数组、set、map）" class="headerlink" title="哈希表篇（数组、set、map）"></a>哈希表篇（数组、set、map）</h1><p>判断元素是否在某集合中出现过 → hash表</p><h2 id="242-有效的字母异位词"><a href="#242-有效的字母异位词" class="headerlink" title="242.有效的字母异位词"></a>242.有效的字母异位词</h2><blockquote><p>t 是 s 的异位词等价于「两个字符串排序后相等」。</p></blockquote><ul><li><p>排序</p><blockquote><p>将两个字符串转换成数组，然后排序，最后在转换成字符串，比较这两个字符串是否相等即可。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> isAnagram = <span class="keyword">function</span>(<span class="params">s, t</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(s.<span class="property">length</span> !== t.<span class="property">length</span>) <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    <span class="keyword">let</span> array_s = <span class="title class_">Array</span>.<span class="title function_">from</span>(s).<span class="title function_">sort</span>().<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span>),</span><br><span class="line">    array_t = <span class="title class_">Array</span>.<span class="title function_">from</span>(t).<span class="title function_">sort</span>().<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> array_s === array_t</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></blockquote></li><li><p>哈希表</p><blockquote><p>由于字符串只包含 26 个小写字母，因此可以维护一个长度为 26 的频次数组 table，先遍历记录字符串 s 中字符出现的频次，然后遍历字符串 t，减去 table 中对应的频次，如果出现 table[i]&lt;0，则说明 t 包含一个不在 s 中的额外字符，返回 false 即可。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> isAnagram = <span class="keyword">function</span>(<span class="params">s, t</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (s.<span class="property">length</span> !== t.<span class="property">length</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">const</span> table = <span class="keyword">new</span> <span class="title class_">Array</span>(<span class="number">26</span>).<span class="title function_">fill</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; s.<span class="property">length</span>; ++i) &#123;</span><br><span class="line">        table[s.<span class="title function_">codePointAt</span>(i) - <span class="string">&#x27;a&#x27;</span>.<span class="title function_">codePointAt</span>(<span class="number">0</span>)]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; t.<span class="property">length</span>; ++i) &#123;</span><br><span class="line">        table[t.<span class="title function_">codePointAt</span>(i) - <span class="string">&#x27;a&#x27;</span>.<span class="title function_">codePointAt</span>(<span class="number">0</span>)]--;</span><br><span class="line">        <span class="keyword">if</span> (table[t.<span class="title function_">codePointAt</span>(i) - <span class="string">&#x27;a&#x27;</span>.<span class="title function_">codePointAt</span>(<span class="number">0</span>)] &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote></li></ul><h2 id="349-两个数组的交集"><a href="#349-两个数组的交集" class="headerlink" title="349. 两个数组的交集"></a>349. 两个数组的交集</h2><p>思路：</p><blockquote><p>首先确保nums1&gt;nums2,然后将 nums1 转换成一个 Set 集合，遍历nums2，<br>逐个检查 nums2 中的元素是否存在于 Set 集合中，若存在，则添加到结果 Set 集合中，<br>最后将结果 Set 集合转化为数组（Array.from()）</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">var</span> intersection = <span class="keyword">function</span>(<span class="params">nums1, nums2</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(nums1.<span class="property">length</span>&lt;nums2.<span class="property">length</span>)&#123;</span><br><span class="line">        <span class="keyword">let</span> _ = nums1</span><br><span class="line">        nums1 = nums2</span><br><span class="line">        nums2 = _</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">const</span> a = <span class="keyword">new</span> <span class="title function_">set</span>(nums1) <span class="comment">//将 nums1 转换成一个 Set 集合，以便于快速查找元素。</span></span><br><span class="line">    <span class="keyword">const</span> res = <span class="keyword">new</span> <span class="title function_">set</span>()    <span class="comment">//使用 res 来存储结果，保证结果中的元素唯一。</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i = nums2.<span class="property">length</span>-<span class="number">1</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">        <span class="comment">//逐个检查 nums2 中的元素是否存在于 a 中。如果存在，则将其添加到 res 中。</span></span><br><span class="line">        a.<span class="title function_">has</span>(nums2[i]) &amp;&amp; res.<span class="title function_">add</span>(nums2[i])</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Array</span>.<span class="title function_">from</span>(res)</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="202-快乐数"><a href="#202-快乐数" class="headerlink" title="202. 快乐数"></a>202. 快乐数</h2><p>示例：非快乐数：20</p><ul><li>1   20——4+0     = 4</li><li>2   4 ——16      = 16</li><li>3   16——1+36    = 37</li><li>4   37——9+49    = 58</li><li>5   58——25+64   = 89</li><li>6   89——64+81   = 145</li><li>7   145—-1+16+25 = 42</li><li>8   42——16+4=20 = 20</li></ul><blockquote><p>Set是es6新增的数据结构，类似于数组，但是成员的值都是唯一的，没有重复的值，我们一般称为集合</p><ul><li>set方法：</li></ul><p>将快乐数转化成字符串，while(sum !== 1)内遍历字符串，得到新Sum值，<br>若结果 Set 集合内含有Sum值，则非快乐数，反之，则将sum添加进set集合内<br>最后在while循环外返回true<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> isHappy = <span class="keyword">function</span>(<span class="params">n</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> set = <span class="keyword">new</span> <span class="title class_">Set</span>()</span><br><span class="line">    n += <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">let</span> sum = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span>(sum !== <span class="number">1</span>)&#123;</span><br><span class="line">        sum = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>;i&lt;=n.<span class="property">length</span>-<span class="number">1</span>;i++)&#123;</span><br><span class="line">            sum += n[i]*n[i]</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(set.<span class="title function_">has</span>(sum)) <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">        n = sum + <span class="string">&#x27;&#x27;</span></span><br><span class="line">        set.<span class="title function_">add</span>(sum)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><p>Map类型是键值对的有序列表，而键和值都可以是任意类型</p><ul><li>map方法：</li></ul><p>初始化一个 Map 用于记录已经出现过的数字 ，定义一个函数 getSum，计算数字平方和<br>进入无限循环(while(n !== 1))：若 n 已经出现在 Map 中，则表示陷入了无限循环，返回 false;<br>反之，将n 记录到 Map 中,并计算当前数字各个位数字的平方和getSum(n)，并赋值给 n，进行下一次循环。</p><p> 最后，若当前数字 n 为 1，返回 true。</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> isHappy = <span class="keyword">function</span>(<span class="params">n</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> m = <span class="keyword">new</span> <span class="title class_">Map</span>()</span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">getSum</span> = (<span class="params">num</span>) =&gt; &#123;</span><br><span class="line">        <span class="keyword">let</span> sum = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span>(num &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">let</span> a = num % <span class="number">10</span></span><br><span class="line">            sum += a*a</span><br><span class="line">            num = <span class="title class_">Math</span>.<span class="title function_">floor</span>(num/<span class="number">10</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sum</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(n !== <span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(m.<span class="title function_">has</span>(n)) <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">        m.<span class="title function_">set</span>(n,<span class="number">1</span>)</span><br><span class="line">        n = <span class="title function_">getSum</span>(n)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="1-两数之和"><a href="#1-两数之和" class="headerlink" title="1.两数之和"></a>1.两数之和</h2><p>示例： nums = [2, 7, 11, 15], target = 9<br>            返回[0,1]</p><ul><li><p>暴力解法：两层for循环（<code>i=0 j=i+1 nums[i] + nums[j] === target</code>），不推荐</p><p>思路：</p></li></ul><blockquote><p>遍历当前数组元素，若hash表内匹配到了target-nums[i]，则返回[i, target-nums[i]],<br>反之，就把当前访问的元素和下标加入到map中</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> twoSum = <span class="keyword">function</span> (<span class="params">nums, target</span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> hash = &#123;&#125;;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; nums.<span class="property">length</span>; i++) &#123;  <span class="comment">// 遍历当前元素，并在map中寻找是否有匹配的key</span></span><br><span class="line">    <span class="keyword">if</span> (hash[target - nums[i]] !== <span class="literal">undefined</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> [i, hash[target - nums[i]]];</span><br><span class="line">    &#125;</span><br><span class="line">    hash[nums[i]] = i;   <span class="comment">// 如果没找到匹配对，就把访问过的元素和下标加入到map中</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> [];</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="454-四数相加II"><a href="#454-四数相加II" class="headerlink" title="454.四数相加II"></a>454.四数相加II</h2><p>示例： A = [1, 2]  B = [-2, -1]  C = [-1, 2]  D = [ 0, 2]        输出：2<br>           (0, 0, 0, 1) -&gt; A[0] + B[0] + C[0] + D[1] = 1 + (-2) + (-1) + 2 = 0<br>           (1, 1, 0, 0) -&gt; A[1] + B[1] + C[0] + D[0] = 2 + (-1) + (-1) + 0 = 0</p><p>思路：</p><blockquote><p>初始化哈希表（twoSumMap）和计数器（count）<br>两层for循环A和B，并记录各个A+B值出现的次数<br>两层for循环C和D，若能找到0-(C+D),将 twoSumMap 中对应的值（出现次数）加到 count 中。</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> fourSumCount = <span class="keyword">function</span>(<span class="params">nums1, nums2, nums3, nums4</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> twoSumMap = <span class="keyword">new</span> <span class="title class_">Map</span>();</span><br><span class="line">    <span class="keyword">let</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 统计nums1和nums2数组元素之和，和出现的次数，放到map中</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">const</span> n1 <span class="keyword">of</span> nums1) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">const</span> n2 <span class="keyword">of</span> nums2) &#123;</span><br><span class="line">            <span class="keyword">const</span> sum = n1 + n2;</span><br><span class="line">            twoSumMap.<span class="title function_">set</span>(sum, (twoSumMap.<span class="title function_">get</span>(sum) || <span class="number">0</span>) + <span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 找到如果 0-(c+d) 在map中出现过的话，就把map中key对应的value也就是出现次数统计出来</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">const</span> n3 <span class="keyword">of</span> nums3) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">const</span> n4 <span class="keyword">of</span> nums4) &#123;</span><br><span class="line">            <span class="keyword">const</span> sum = n3 + n4;</span><br><span class="line">            count += (twoSumMap.<span class="title function_">get</span>(<span class="number">0</span> - sum) || <span class="number">0</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> count;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="383-赎金信"><a href="#383-赎金信" class="headerlink" title="383. 赎金信"></a>383. 赎金信</h2><p>给定一个赎金信 (ransom) 字符串和一个杂志(magazine)字符串，判断第一个字符串 ransom 能不能由第二个字符串 magazines 里面的字符构成。如果可以构成，返回 true ；否则返回 false。</p><p>思路：</p><blockquote><p>定义一个长度为26的数组strArr，初始化为0。base 是字符 ‘a’ 的 Unicode 编码。<br>遍历magazine字符串，记录每个字符出现次数，再遍历ransomNote字符串，如果对应索引的值为0，<br>表示 magazine 中该字符数量不足，返回 false。否则，对应索引的值减 1。</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> canConstruct = <span class="keyword">function</span>(<span class="params">ransomNote, magazine</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> strArr = <span class="keyword">new</span> <span class="title class_">Array</span>(<span class="number">26</span>).<span class="title function_">fill</span>(<span class="number">0</span>), </span><br><span class="line">    base = <span class="string">&quot;a&quot;</span>.<span class="title function_">charCodeAt</span>();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">const</span> s <span class="keyword">of</span> magazine) &#123;  <span class="comment">// 记录 magazine里各个字符出现次数</span></span><br><span class="line">        strArr[s.<span class="title function_">charCodeAt</span>() - base]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">const</span> s <span class="keyword">of</span> ransomNote) &#123; <span class="comment">// 对应的字符个数做--操作</span></span><br><span class="line">        <span class="keyword">const</span> index = s.<span class="title function_">charCodeAt</span>() - base;</span><br><span class="line">        <span class="keyword">if</span>(!strArr[index]) <span class="keyword">return</span> <span class="literal">false</span>;  <span class="comment">// 如果没记录过直接返回false</span></span><br><span class="line">        strArr[index]--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="15-三数之和"><a href="#15-三数之和" class="headerlink" title="15. 三数之和"></a>15. 三数之和</h2><p>示例：nums = [-1, 0, 1, 2, -1, -4]，<br>           满足要求的三元组集合为：[[-1, 0, 1], [-1, -1, 2]] </p><p>思路：</p><blockquote><p>首先，对数组进行排序，遍历; 再建立前后指针 left=i+1 和right=nums.length-1，计算三数之和 sum;<br>若sum&gt;0,则right向前移动；若sum&lt;0，则left向后移动；sum=0时，将这3个数组成的数组保存进res中。<br>设置去重：如果当前元素与上一个元素相同，跳过当前循环以避免重复结果。<br>若left指向的元素与下一个相同，右移左指针；若right指向的元素与上一个相同，左移右指针。</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">var</span> threeSum = <span class="keyword">function</span>(<span class="params">nums</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> res = []</span><br><span class="line">    nums.<span class="title function_">sort</span>(<span class="function">(<span class="params">a,b</span>) =&gt;</span> a-b)  <span class="comment">// 对数组排序</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; nums.<span class="property">length</span>; i++)&#123;</span><br><span class="line">        <span class="keyword">let</span> left = i+<span class="number">1</span>, right = nums.<span class="property">length</span>-<span class="number">1</span></span><br><span class="line">        <span class="comment">// 数组排过序，如果第一个数大于0直接返回res</span></span><br><span class="line">        <span class="keyword">if</span>(nums[i]&gt;<span class="number">0</span>) <span class="keyword">return</span> res</span><br><span class="line">        <span class="comment">// 去重</span></span><br><span class="line">        <span class="keyword">if</span>(nums[i] === nums[i-<span class="number">1</span>]) <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">while</span>(left &lt; right)&#123;</span><br><span class="line">            <span class="keyword">let</span> sum = nums[i] + nums[left] + nums[right]</span><br><span class="line">            <span class="keyword">if</span>(sum &gt; <span class="number">0</span>) left++</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(sum &lt; <span class="number">0</span>) right--</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                res.<span class="title function_">push</span>([nums[i],nums[left],nums[right]])</span><br><span class="line">                <span class="comment">// 去重</span></span><br><span class="line">                <span class="keyword">while</span>(nums[left] == nums[left+<span class="number">1</span>]) left++</span><br><span class="line">                <span class="keyword">while</span>(nums[right] == nums[right-<span class="number">1</span>]) right--</span><br><span class="line">                left++</span><br><span class="line">                right--</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ul><li>nSum通解：递归</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> threeSum = <span class="keyword">function</span> (<span class="params">nums</span>) &#123;</span><br><span class="line">    <span class="comment">// nsum通用解法核心方法：递归</span></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">nSumTarget</span>(<span class="params">nums, n, start, target</span>) &#123;</span><br><span class="line">        <span class="comment">// 前提：nums要先排序好</span></span><br><span class="line">        <span class="keyword">let</span> res = [];</span><br><span class="line">        <span class="keyword">if</span> (n === <span class="number">2</span>) &#123;</span><br><span class="line">            res = <span class="title function_">towSumTarget</span>(nums, start, target);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">let</span> i = start; i &lt; nums.<span class="property">length</span>; i++) &#123;</span><br><span class="line">                <span class="comment">// 递归求(n - 1)sum</span></span><br><span class="line">                <span class="keyword">let</span> subRes = <span class="title function_">nSumTarget</span>(</span><br><span class="line">                    nums,</span><br><span class="line">                    n - <span class="number">1</span>,</span><br><span class="line">                    i + <span class="number">1</span>,</span><br><span class="line">                    target - nums[i]</span><br><span class="line">                );</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0</span>; j &lt; subRes.<span class="property">length</span>; j++) &#123;</span><br><span class="line">                    res.<span class="title function_">push</span>([nums[i], ...subRes[j]]);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 跳过相同元素</span></span><br><span class="line">                <span class="keyword">while</span> (nums[i] === nums[i + <span class="number">1</span>]) i++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">towSumTarget</span>(<span class="params">nums, start, target</span>) &#123;</span><br><span class="line">        <span class="comment">// 前提：nums要先排序好</span></span><br><span class="line">        <span class="keyword">let</span> res = [];</span><br><span class="line">        <span class="keyword">let</span> len = nums.<span class="property">length</span>;</span><br><span class="line">        <span class="keyword">let</span> left = start;</span><br><span class="line">        <span class="keyword">let</span> right = len - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (left &lt; right) &#123;</span><br><span class="line">            <span class="keyword">let</span> sum = nums[left] + nums[right];</span><br><span class="line">            <span class="keyword">if</span> (sum &lt; target) &#123;</span><br><span class="line">                <span class="keyword">while</span> (nums[left] === nums[left + <span class="number">1</span>]) left++;</span><br><span class="line">                left++;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (sum &gt; target) &#123;</span><br><span class="line">                <span class="keyword">while</span> (nums[right] === nums[right - <span class="number">1</span>]) right--;</span><br><span class="line">                right--;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// 相等</span></span><br><span class="line">                res.<span class="title function_">push</span>([nums[left], nums[right]]);</span><br><span class="line">                <span class="comment">// 跳过相同元素</span></span><br><span class="line">                <span class="keyword">while</span> (nums[left] === nums[left + <span class="number">1</span>]) left++;</span><br><span class="line">                <span class="keyword">while</span> (nums[right] === nums[right - <span class="number">1</span>]) right--;</span><br><span class="line">                left++;</span><br><span class="line">                right--;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">    nums.<span class="title function_">sort</span>(<span class="function">(<span class="params">a, b</span>) =&gt;</span> a - b);</span><br><span class="line">    <span class="comment">// n = 3，此时求3sum之和</span></span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">nSumTarget</span>(nums, <span class="number">3</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="18-四数之和"><a href="#18-四数之和" class="headerlink" title="18. 四数之和"></a>18. 四数之和</h2><p>示例： nums = [1, 0, -1, 0, -2, 2]，和 target = 0<br>            满足要求的四元组集合为： [ [-1, 0, 0, 1], [-2, -1, 1, 2], [-2, 0, 0, 2] ]</p><p>思路：</p><blockquote><p>对比三数之和，再套一层for循环（外层循环i 从 0 遍历到 len-4，内层循环j 从 i+1 遍历到 len-3）<br>注意去重；当数组长度小于 4，直接返回空数组。</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> fourSum = <span class="keyword">function</span>(<span class="params">nums, target</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(nums.<span class="property">length</span> &lt; <span class="number">4</span>) <span class="keyword">return</span> []</span><br><span class="line">    <span class="keyword">const</span> res = []</span><br><span class="line">    nums.<span class="title function_">sort</span>(<span class="function">(<span class="params">a,b</span>) =&gt;</span> a-b)</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; nums.<span class="property">length</span> - <span class="number">3</span>; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(i &gt; <span class="number">0</span> &amp;&amp; nums[i] === nums[i-<span class="number">1</span>]) <span class="keyword">continue</span> <span class="comment">// 去重i</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">let</span> j = i + <span class="number">1</span>; j &lt; nums.<span class="property">length</span> - <span class="number">2</span>; j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(j &gt; i + <span class="number">1</span> &amp;&amp; nums[j] === nums[j-<span class="number">1</span>]) <span class="keyword">continue</span> <span class="comment">// 去重j</span></span><br><span class="line">            <span class="keyword">let</span> left = j + <span class="number">1</span>, right = nums.<span class="property">length</span> - <span class="number">1</span></span><br><span class="line">            <span class="keyword">while</span>(left &lt; right)&#123;</span><br><span class="line">                <span class="keyword">let</span> sum = nums[i] + nums[j] + nums[left] + nums[right]</span><br><span class="line">                <span class="keyword">if</span>(sum &gt; target) right--</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(sum &lt; target) left++</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    res.<span class="title function_">push</span>([nums[i], nums[j], nums[left], nums[right]])</span><br><span class="line">                    <span class="comment">// 对nums[left]和nums[right]去重</span></span><br><span class="line">                    <span class="keyword">while</span>(nums[left] === nums[left+<span class="number">1</span>]) left++</span><br><span class="line">                    <span class="keyword">while</span>(nums[right] === nums[right-<span class="number">1</span>]) right--</span><br><span class="line">                    left++</span><br><span class="line">                    right--</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>二叉树篇</title>
      <link href="/2024/08/02/algorithm-%E4%BA%8C%E5%8F%89%E6%A0%91/"/>
      <url>/2024/08/02/algorithm-%E4%BA%8C%E5%8F%89%E6%A0%91/</url>
      
        <content type="html"><![CDATA[<h1 id="二叉树篇"><a href="#二叉树篇" class="headerlink" title="二叉树篇"></a>二叉树篇</h1><h2 id="二叉树理论基础"><a href="#二叉树理论基础" class="headerlink" title="二叉树理论基础"></a>二叉树理论基础</h2><p>1、二叉树<strong>类型</strong>：</p><p>1.<strong>满二叉树</strong>：如果一棵二叉树只有度为0的结点和度为2的结点，并且度为0的结点在同一层上。<br>深度为k，有2^k-1个节点</p><p>  <img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022058290.png" alt="photo"></p><p>2.<strong>完全二叉树</strong>：除了最底层节点可能没填满外，其余每层节点数都达到最大值，并且最下面一层的节点都集中        在该层最左边的若干位置。若最底层为第 h 层（h从1开始），则该层包含 1~ 2^(h-1) 个节点。</p><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022100949.png" alt="photo"> </p><p>3.<strong>二叉搜索树</strong>：是一个有序树。<br>        若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值；<br>        若它的右子树不空，则右子树上所有结点的值均大于它的根结点的值；<br>        它的左、右子树也分别为二叉排序树</p><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022101723.png" alt="photo"> </p><p>4.<strong>平衡二叉搜索树</strong>：又被称为AVL（Adelson-Velsky and Landis）树，且具有以下性质：它是一棵空树或它的左右两个子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树。</p><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022102999.png" alt="photo"> </p><p>2、二叉树的<strong>存储方式</strong></p><p>​    1.链式存储：指针<br>​    <img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022058897.png" alt="photo"><br>​    </p><p>2.顺序存储：数组<br>    <img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022059691.png" alt="photo"></p><p>3、二叉树的<strong>遍历方式</strong></p><p>​    1. 深度优先遍历：先往深走，遇到叶子节点再往回走。</p><ul><li>前序遍历（递归法，迭代法）：中左右</li><li>中序遍历（递归法，迭代法）：左中右</li><li><p>后序遍历（递归法，迭代法）：左右中<br>   <img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022059886.png" alt="photo"></p></li><li><p>2.广度优先遍历：一层一层的去遍历。</p><pre><code>       * 层次遍历（迭代法)</code></pre></li></ul><p>4、二叉树的定义<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">TreeNode</span>(<span class="params">val, left, right</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">val</span> = (val===<span class="literal">undefined</span> ? <span class="number">0</span> : val)</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">left</span> = (left===<span class="literal">undefined</span> ? <span class="literal">null</span> : left)</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">right</span> = (right===<span class="literal">undefined</span> ? <span class="literal">null</span> : right)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="二叉树的递归遍历"><a href="#二叉树的递归遍历" class="headerlink" title="二叉树的递归遍历"></a>二叉树的递归遍历</h2><p>递归的实现就是：每一次递归调用都会把函数的局部变量、参数值和返回地址等压入调用栈中，然后递归返回的时候，从栈顶弹出上一次递归的各项参数，<br>递归算法：1.确定递归函数的参数和返回值：<br>              2.确定终止条件<br>              3.确定单层递归的逻辑</p><ul><li><p>前序遍历：中左右（144.二叉树的前序遍历）</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> preorderTraversal = <span class="keyword">function</span>(<span class="params">root</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> res=[];</span><br><span class="line">    <span class="keyword">const</span> dfs = <span class="keyword">function</span>(<span class="params">root</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(root===<span class="literal">null</span>)<span class="keyword">return</span> ;</span><br><span class="line">        </span><br><span class="line">        res.<span class="title function_">push</span>(root.<span class="property">val</span>); <span class="comment">// 先序遍历所以从父节点开始</span></span><br><span class="line">        </span><br><span class="line">        <span class="title function_">dfs</span>(root.<span class="property">left</span>); <span class="comment">// 递归左子树</span></span><br><span class="line">        </span><br><span class="line">        <span class="title function_">dfs</span>(root.<span class="property">right</span>); <span class="comment">// 递归右子树</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="title function_">dfs</span>(root); <span class="comment">// 只使用一个参数 使用闭包进行存储结果</span></span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li><p>中序遍历：左中右（94.二叉树的中序遍历）</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> inorderTraversal = <span class="keyword">function</span>(<span class="params">root</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> res=[];</span><br><span class="line">    <span class="keyword">const</span> dfs=<span class="keyword">function</span>(<span class="params">root</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(root===<span class="literal">null</span>)  <span class="keyword">return</span></span><br><span class="line">        <span class="title function_">dfs</span>(root.<span class="property">left</span>); <span class="comment">// 递归左子树</span></span><br><span class="line">        res.<span class="title function_">push</span>(root.<span class="property">val</span>); <span class="comment">// 父节点</span></span><br><span class="line">        <span class="title function_">dfs</span>(root.<span class="property">right</span>); <span class="comment">// 递归右子树</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">dfs</span>(root);</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li><p>后序遍历：左右中（145.二叉树的后序遍历）</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> postorderTraversal = <span class="keyword">function</span>(<span class="params">root</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> res=[];</span><br><span class="line">    <span class="keyword">const</span> dfs=<span class="keyword">function</span>(<span class="params">root</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(root===<span class="literal">null</span>)  <span class="keyword">return</span> </span><br><span class="line">        <span class="title function_">dfs</span>(root.<span class="property">left</span>); <span class="comment">// 递归左子树</span></span><br><span class="line">        <span class="title function_">dfs</span>(root.<span class="property">right</span>); <span class="comment">// 递归右子树</span></span><br><span class="line">        res.<span class="title function_">push</span>(root.<span class="property">val</span>); <span class="comment">// 父节点</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">dfs</span>(root);</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li></ul><h2 id="二叉树的迭代遍历"><a href="#二叉树的迭代遍历" class="headerlink" title="二叉树的迭代遍历"></a>二叉树的迭代遍历</h2><ul><li><p>前序遍历：中左右（144.二叉树的前序遍历）</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 入栈 右 -&gt; 左</span></span><br><span class="line"><span class="comment">// 出栈 中 -&gt; 左 -&gt; 右</span></span><br><span class="line"><span class="keyword">var</span> preorderTraversal = <span class="keyword">function</span>(<span class="params">root, res = []</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(!root) <span class="keyword">return</span> res;</span><br><span class="line">    <span class="keyword">const</span> stack = [root];</span><br><span class="line">    <span class="keyword">let</span> cur = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">while</span>(stack.<span class="property">length</span>) &#123;</span><br><span class="line">        cur = stack.<span class="title function_">pop</span>();</span><br><span class="line">        res.<span class="title function_">push</span>(cur.<span class="property">val</span>);</span><br><span class="line">        <span class="keyword">if</span>(node.<span class="property">right</span>) stack.<span class="title function_">push</span>(node.<span class="property">right</span>);</span><br><span class="line">        <span class="keyword">if</span>(node.<span class="property">left</span>) stack.<span class="title function_">push</span>(node.<span class="property">left</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li><p>中序遍历：左中右（94.二叉树的中序遍历）</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 入栈 左 -&gt; 右</span></span><br><span class="line"><span class="comment">// 出栈 左 -&gt; 中 -&gt; 右</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> inorderTraversal = <span class="keyword">function</span>(<span class="params">root, res = []</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> stack = [];</span><br><span class="line">    <span class="keyword">let</span> cur = root;</span><br><span class="line">    <span class="keyword">while</span>(stack.<span class="property">length</span> || cur) &#123;</span><br><span class="line">        <span class="keyword">if</span>(cur) &#123;</span><br><span class="line">            stack.<span class="title function_">push</span>(cur);  </span><br><span class="line">            cur = cur.<span class="property">left</span>; <span class="comment">// 左</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            cur = stack.<span class="title function_">pop</span>(); <span class="comment">// 弹出</span></span><br><span class="line">            res.<span class="title function_">push</span>(cur.<span class="property">val</span>); <span class="comment">// 中</span></span><br><span class="line">            cur = cur.<span class="property">right</span>; <span class="comment">// 右</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li><p>后序遍历：左右中（145.二叉树的后序遍历）</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 入栈 左 -&gt; 右</span></span><br><span class="line"><span class="comment">// 出栈 中 -&gt; 右 -&gt; 左 结果翻转</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> postorderTraversal = <span class="keyword">function</span>(<span class="params">root</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> res = [];</span><br><span class="line">    <span class="keyword">if</span> (!root) <span class="keyword">return</span> res;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">const</span> stack = [root]; <span class="comment">// 初始化栈并将根节点入栈</span></span><br><span class="line">    <span class="keyword">while</span> (stack.<span class="property">length</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> cur = stack.<span class="title function_">pop</span>(); <span class="comment">// 从栈中弹出一个节点</span></span><br><span class="line">        res.<span class="title function_">push</span>(cur.<span class="property">val</span>); <span class="comment">// 将节点值加入结果数组</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(cur.<span class="property">left</span>) stack.<span class="title function_">push</span>(cur.<span class="property">left</span>); <span class="comment">// 左子节点存在，将其入栈</span></span><br><span class="line">        <span class="keyword">if</span>(cur.<span class="property">right</span>) stack.<span class="title function_">push</span>(cur.<span class="property">right</span>); <span class="comment">// 右子节点存在，将其入栈</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">reverse</span>(); <span class="comment">// 最后对结果数组进行反转，得到后序遍历的结果</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li></ul><h2 id="102-二叉树的层序遍历"><a href="#102-二叉树的层序遍历" class="headerlink" title="102.二叉树的层序遍历"></a>102.二叉树的层序遍历</h2><p>给你一个二叉树，请你返回其按 层序遍历 得到的节点值。 （即逐层地，从左到右访问所有节点）。<br>示例：二叉树：[3, 9, 20, null, null, 15, 7]<br>           结果：[[3], [9, 20], [15, 7]]</p><p>思路：</p><blockquote><p>当队列不为空时，进行遍历。记录当前层级的节点数size，存放当前层的节点值curLevel<br>遍历当前层的节点，对节点进行取出并push到curLevel操作；<br>若当前节点的左右子节点存在，将其push到队列中，以便在下一层遍历。<br>将当前层级的结果加入最终结果数组，并返回<br>特殊情况：如果 root 为 null，直接返回空的结果数组。</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> levelOrder = <span class="keyword">function</span>(<span class="params">root</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> res = [], queue = [];</span><br><span class="line">    queue.<span class="title function_">push</span>(root);</span><br><span class="line">    <span class="keyword">if</span>(root === <span class="literal">null</span>) <span class="keyword">return</span> res;</span><br><span class="line">    <span class="keyword">while</span>(queue.<span class="property">length</span> !== <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> length = queue.<span class="property">length</span>;<span class="comment">// 记录当前层级节点数</span></span><br><span class="line">        <span class="keyword">let</span> curLevel = [];<span class="comment">//存放每一层的节点</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>;i &lt; length; i++) &#123;</span><br><span class="line">            <span class="keyword">let</span> node = queue.<span class="title function_">shift</span>();</span><br><span class="line">            curLevel.<span class="title function_">push</span>(node.<span class="property">val</span>);</span><br><span class="line">            <span class="comment">// 存放当前层下一层的节点</span></span><br><span class="line">            node.<span class="property">left</span> &amp;&amp; queue.<span class="title function_">push</span>(node.<span class="property">left</span>);</span><br><span class="line">            node.<span class="property">right</span> &amp;&amp; queue.<span class="title function_">push</span>(node.<span class="property">right</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        res.<span class="title function_">push</span>(curLevel);<span class="comment">//把每一层的结果放到结果数组</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="107-二叉树的层次遍历-II"><a href="#107-二叉树的层次遍历-II" class="headerlink" title="107.二叉树的层次遍历 II"></a>107.二叉树的层次遍历 II</h2><p>给定一个二叉树，返回其节点值自底向上的层次遍历。 （即按从叶子节点所在层到根节点所在的层，逐层从左向右遍历）</p><p>示例： 二叉树：[3, 9,20, null,null,15,7]<br>            结果：[[15, 7], [9, 20],[3]]</p><ul><li>思路：相对于102.二叉树的层序遍历，就是最后把result数组反转一下就可以了。</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> levelOrderBottom = <span class="keyword">function</span>(<span class="params">root</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> res = [], queue = [];</span><br><span class="line">    <span class="keyword">if</span> (root === <span class="literal">null</span>) <span class="keyword">return</span> res; <span class="comment">// 修改为空数组</span></span><br><span class="line">    queue.<span class="title function_">push</span>(root);</span><br><span class="line">    <span class="keyword">while</span> (queue.<span class="property">length</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> size = queue.<span class="property">length</span>;</span><br><span class="line">        <span class="keyword">let</span> curLevel = [];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; size; i++) &#123;</span><br><span class="line">            <span class="keyword">let</span> node = queue.<span class="title function_">shift</span>();</span><br><span class="line">            curLevel.<span class="title function_">push</span>(node.<span class="property">val</span>);</span><br><span class="line">            <span class="keyword">if</span> (node.<span class="property">left</span>) queue.<span class="title function_">push</span>(node.<span class="property">left</span>);</span><br><span class="line">            <span class="keyword">if</span> (node.<span class="property">right</span>) queue.<span class="title function_">push</span>(node.<span class="property">right</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        res.<span class="title function_">unshift</span>(curLevel); <span class="comment">// 将当前层的结果插入到结果数组的开头</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="199-二叉树的右视图"><a href="#199-二叉树的右视图" class="headerlink" title="199.二叉树的右视图"></a>199.二叉树的右视图</h2><p>给定一棵二叉树，想象自己站在它的右侧，按照从顶部到底部的顺序，返回从右侧所能看到的节点值。<br>示例：输入：[1, 2,3, null,5,null,4]<br>           输出：[1, 3, 4] </p><blockquote><p>思路：层序遍历的时候，判断是否遍历到单层的最后面的元素，如果是，就放进res数组中，最后返回res。</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> rightSideView = <span class="keyword">function</span>(<span class="params">root</span>) &#123;</span><br><span class="line">    <span class="comment">//二叉树右视图 只需要把每一层最后一个节点存储到res数组</span></span><br><span class="line">    <span class="keyword">let</span> res = [], queue = [];</span><br><span class="line">    <span class="keyword">if</span>(root === <span class="literal">null</span>) <span class="keyword">return</span> res</span><br><span class="line">    queue.<span class="title function_">push</span>(root);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(queue.<span class="property">length</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> size = queue.<span class="property">length</span> <span class="comment">// 记录当前层级节点个数</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; size; i++)&#123;</span><br><span class="line">            <span class="keyword">let</span> node = queue.<span class="title function_">shift</span>()</span><br><span class="line">            <span class="comment">// length长度为0的时候表明到了层级最后一个节点</span></span><br><span class="line">            <span class="keyword">if</span>(!length) res.<span class="title function_">push</span>(node.<span class="property">val</span>);</span><br><span class="line">            node.<span class="property">left</span> &amp;&amp; queue.<span class="title function_">push</span>(node.<span class="property">left</span>);</span><br><span class="line">            node.<span class="property">right</span> &amp;&amp; queue.<span class="title function_">push</span>(node.<span class="property">right</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="637-二叉树的层平均值"><a href="#637-二叉树的层平均值" class="headerlink" title="637.二叉树的层平均值"></a>637.二叉树的层平均值</h2><p>给定一个非空二叉树, 返回一个由每层节点平均值组成的数组。<br>示例：输入：[3, 9,20, null,null,15,7]<br>           输出：[3, 14.5, 11] </p><blockquote><p>思路：层序遍历的时候把一层求个总和再取一个均值。</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> averageOfLevels = <span class="keyword">function</span>(<span class="params">root</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> res=[], queue = []</span><br><span class="line">    <span class="keyword">if</span>(root === <span class="literal">null</span>) <span class="keyword">return</span> res</span><br><span class="line">    queue.<span class="title function_">push</span>(root)</span><br><span class="line">    <span class="keyword">while</span>(queue.<span class="property">length</span>)&#123;</span><br><span class="line">        <span class="comment">// 每一层节点个数</span></span><br><span class="line">        <span class="keyword">let</span> length = queue.<span class="property">length</span>,</span><br><span class="line">            size = queue.<span class="property">length</span>,</span><br><span class="line">            sum = <span class="number">0</span> <span class="comment">// sum记录每一层的和</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; length; i++)&#123;</span><br><span class="line">            <span class="keyword">let</span> node = queue.<span class="title function_">shift</span>()</span><br><span class="line">            sum += node.<span class="property">val</span></span><br><span class="line">            <span class="keyword">if</span>(node.<span class="property">left</span>) queue.<span class="title function_">push</span>(node.<span class="property">left</span>)</span><br><span class="line">            <span class="keyword">if</span>(node.<span class="property">right</span>) queue.<span class="title function_">push</span>(node.<span class="property">right</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        res.<span class="title function_">push</span>(sum/size) <span class="comment">// 求平均值</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="429-N叉树的层序遍历"><a href="#429-N叉树的层序遍历" class="headerlink" title="429.N叉树的层序遍历"></a>429.N叉树的层序遍历</h2><p>给定一个 N 叉树，返回其节点值的层序遍历。 (即从左到右，逐层遍历)。</p><p>示例：三叉树：[1, 3,2,4, 5,6,null,null,null,null]<br>           结果：[[1], [3,2,4], [5,6]]</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> levelOrder = <span class="keyword">function</span>(<span class="params">root</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> res = [], queue = [];</span><br><span class="line">    <span class="keyword">if</span>(root === <span class="literal">null</span>) <span class="keyword">return</span> res</span><br><span class="line">    queue.<span class="title function_">push</span>(root);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(queue.<span class="property">length</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> length = queue.<span class="property">length</span>,</span><br><span class="line">            curLevel = [];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; length; i++)&#123;</span><br><span class="line">            <span class="keyword">let</span> node = queue.<span class="title function_">shift</span>();</span><br><span class="line">            curLevel.<span class="title function_">push</span>(node.<span class="property">val</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//这里不再是 ndoe.left node.right 而是循坏node.children</span></span><br><span class="line">           <span class="keyword">for</span>(<span class="keyword">let</span> item <span class="keyword">of</span> node.<span class="property">children</span>)&#123;</span><br><span class="line">               <span class="keyword">if</span>(item) queue.<span class="title function_">push</span>(item)</span><br><span class="line">           &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        res.<span class="title function_">push</span>(curLevel);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="515-在每个树行中找最大值"><a href="#515-在每个树行中找最大值" class="headerlink" title="515.在每个树行中找最大值"></a>515.在每个树行中找最大值</h2><p>在二叉树的每一行中找到最大的值。<br>示例： 二叉树：[1, 3,2, 5,3,null,9]<br>            结果：[1, 3, 9]</p><blockquote><p>思路：层序遍历，取每一层的最大值</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> largestValues = <span class="keyword">function</span> (<span class="params">root</span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> res = [],queue = [];</span><br><span class="line">  queue.<span class="title function_">push</span>(root);</span><br><span class="line">  <span class="keyword">if</span>(root === <span class="literal">null</span>)  <span class="keyword">return</span> res</span><br><span class="line">  <span class="keyword">while</span> (queue.<span class="property">length</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> lengthLevel = queue.<span class="property">length</span>,</span><br><span class="line">        max = -<span class="title class_">Infinity</span> <span class="comment">// 初始值设为负无穷大</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; length; i++)&#123; &#123;</span><br><span class="line">        <span class="keyword">const</span> node = queue.<span class="title function_">shift</span>();</span><br><span class="line">        max = <span class="title class_">Math</span>.<span class="title function_">max</span>(max, node.<span class="property">val</span>);<span class="comment">// 在当前层中找到最大值</span></span><br><span class="line">        <span class="comment">// 找到下一层的节点</span></span><br><span class="line">        node.<span class="property">left</span> &amp;&amp; queue.<span class="title function_">push</span>(node.<span class="property">left</span>);</span><br><span class="line">        node.<span class="property">right</span> &amp;&amp; queue.<span class="title function_">push</span>(node.<span class="property">right</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    res.<span class="title function_">push</span>(max);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> res;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="116-填充每个节点的下一个右侧节点指针"><a href="#116-填充每个节点的下一个右侧节点指针" class="headerlink" title="116.填充每个节点的下一个右侧节点指针"></a>116.填充每个节点的下一个右侧节点指针</h2><p>给定一个 完美二叉树 ，其所有叶子节点都在同一层，每个父节点都有两个子节点。二叉树定义如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">struct <span class="title class_">Node</span> &#123;</span><br><span class="line">    int val;</span><br><span class="line">    <span class="title class_">Node</span> *left;</span><br><span class="line">    <span class="title class_">Node</span> *right;</span><br><span class="line">    <span class="title class_">Node</span> *next;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>填充它的每个 next 指针，让这个指针指向其下一个右侧节点。如果找不到下一个右侧节点，<br>则将 next 指针设置为 NULL。初始状态下，所有 next 指针都被设置为 NULL。<br>示例：二叉树：root = [1, 2,3, 4,5,6,7]<br>          结果：[1,#,2,3,#,4,5,6,7,#]</p><blockquote><p>思路：层序遍历，在单层遍历的时候记录一下本层的头部节点，然后在遍历的时候让前一个节点指向本节点</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> connect = <span class="keyword">function</span>(<span class="params">root</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (root === <span class="literal">null</span>) <span class="keyword">return</span> root;</span><br><span class="line">    <span class="keyword">let</span> queue = [root];</span><br><span class="line">    <span class="keyword">while</span> (queue.<span class="property">length</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> n = queue.<span class="property">length</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">let</span> node = queue.<span class="title function_">shift</span>();</span><br><span class="line">            <span class="comment">// 若当前节点不是这一层的最后一个节点,则将它的next指针指向队列中的下一个节点</span></span><br><span class="line">            <span class="keyword">if</span>(i &lt; n-<span class="number">1</span>)  node.<span class="property">next</span> = queue[<span class="number">0</span>];</span><br><span class="line">            node.<span class="property">left</span> &amp;&amp; queue.<span class="title function_">push</span>(node.<span class="property">left</span>);</span><br><span class="line">            node.<span class="property">right</span> &amp;&amp; queue.<span class="title function_">push</span>(node.<span class="property">right</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> root;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="117-填充每个节点的下一个右侧节点指针II"><a href="#117-填充每个节点的下一个右侧节点指针II" class="headerlink" title="117.填充每个节点的下一个右侧节点指针II"></a>117.填充每个节点的下一个右侧节点指针II</h2><p>与116题目说是完整二叉树，此题说的是二叉树</p><p>示例：二叉树：root = [1, 2,3, 4,5,6,7]<br>           结果：[1,#,2,3,#,4,5,6,7,#]</p><blockquote><p>思路：与116一样</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> connect = <span class="keyword">function</span>(<span class="params">root</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(root === <span class="literal">null</span>) <span class="keyword">return</span> root;</span><br><span class="line">    <span class="keyword">let</span> queue = [root];</span><br><span class="line">    <span class="keyword">while</span> (queue.<span class="property">length</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> length = queue.<span class="property">length</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; length; i++) &#123;</span><br><span class="line">            <span class="keyword">let</span> node = queue.<span class="title function_">shift</span>();</span><br><span class="line">            <span class="keyword">if</span>(i &lt; n-<span class="number">1</span>) node.<span class="property">next</span> = queue[<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">if</span>(node.<span class="property">left</span>) queue.<span class="title function_">push</span>(node.<span class="property">left</span>);</span><br><span class="line">            <span class="keyword">if</span>(node.<span class="property">right</span>) queue.<span class="title function_">push</span>(node.<span class="property">right</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> root;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="104-二叉树的最大深度"><a href="#104-二叉树的最大深度" class="headerlink" title="104.二叉树的最大深度"></a>104.二叉树的最大深度</h2><p>给定一个二叉树，找出其最大深度。（二叉树的深度为根节点到最远叶子节点的最长路径上的节点数）<br>示例：二叉树[3, 9,20, null,null,15,7]，返回它的最大深度 3 。</p><blockquote><p>思路：返回二叉树层数</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> maxDepth = <span class="keyword">function</span> (<span class="params">root</span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> max = <span class="number">0</span>, queue = [root];</span><br><span class="line">  <span class="keyword">if</span>(root === <span class="literal">null</span>) <span class="keyword">return</span> max</span><br><span class="line">  <span class="keyword">while</span> (queue.<span class="property">length</span>) &#123;</span><br><span class="line">    max++;</span><br><span class="line">    <span class="keyword">let</span> length = queue.<span class="property">length</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; length; i++) &#123;</span><br><span class="line">      <span class="keyword">let</span> node = queue.<span class="title function_">shift</span>();</span><br><span class="line">      node.<span class="property">left</span> &amp;&amp; queue.<span class="title function_">push</span>(node.<span class="property">left</span>);</span><br><span class="line">      node.<span class="property">right</span> &amp;&amp; queue.<span class="title function_">push</span>(node.<span class="property">right</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> max;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 递归</span></span><br><span class="line"><span class="keyword">var</span> maxdepth = <span class="keyword">function</span>(<span class="params">root</span>) &#123;</span><br><span class="line">    <span class="comment">//1. 确定递归函数的参数和返回值</span></span><br><span class="line">    <span class="keyword">const</span> getdepth = <span class="keyword">function</span>(<span class="params">node</span>) &#123;</span><br><span class="line">    <span class="comment">//2. 确定终止条件</span></span><br><span class="line">        <span class="keyword">if</span>(node === <span class="literal">null</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//3. 确定单层逻辑</span></span><br><span class="line">        <span class="keyword">let</span> leftdepth = <span class="title function_">getdepth</span>(node.<span class="property">left</span>);</span><br><span class="line">        <span class="keyword">let</span> rightdepth = <span class="title function_">getdepth</span>(node.<span class="property">right</span>);</span><br><span class="line">        <span class="keyword">let</span> depth = <span class="number">1</span> + <span class="title class_">Math</span>.<span class="title function_">max</span>(leftdepth, rightdepth);</span><br><span class="line">        <span class="keyword">return</span> depth;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">getdepth</span>(root);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="111-二叉树的最小深度"><a href="#111-二叉树的最小深度" class="headerlink" title="111.二叉树的最小深度"></a>111.二叉树的最小深度</h2><p>给定一个二叉树，找出其最小深度。（最小深度是从根节点到最近叶子节点的最短路径上的节点数量。）<br>叶子节点是指没有子节点的节点。<br>示例：二叉树[3, 9,20, null,null,15,7]，返回它的最大深度 2 。</p><blockquote><p>思路：遍历层数，当左右孩子都为空的时候，才说明到遍历的最低点了。</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> minDepth = <span class="keyword">function</span> (<span class="params">root</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (root === <span class="literal">null</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">let</span> queue = [root];</span><br><span class="line">    <span class="keyword">let</span> depth = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (queue.<span class="property">length</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> n = queue.<span class="property">length</span>;</span><br><span class="line">        depth++;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">            <span class="keyword">let</span> node = queue.<span class="title function_">shift</span>();</span><br><span class="line">            <span class="comment">// 如果左右节点都是null(在遇见的第一个leaf节点上)，则该节点深度最小</span></span><br><span class="line">            <span class="keyword">if</span> (node.<span class="property">left</span> === <span class="literal">null</span> &amp;&amp; node.<span class="property">right</span> === <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> depth;</span><br><span class="line">            &#125;</span><br><span class="line">            node.<span class="property">left</span> &amp;&amp; queue.<span class="title function_">push</span>(node.<span class="property">left</span>);;</span><br><span class="line">            node.<span class="property">right</span> &amp;&amp; queue.<span class="title function_">push</span>(node.<span class="property">right</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> depth;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 递归</span></span><br><span class="line"><span class="keyword">var</span> minDepth1 = <span class="keyword">function</span>(<span class="params">root</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(!root) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 到叶子节点 返回 1</span></span><br><span class="line">    <span class="keyword">if</span>(!root.<span class="property">left</span> &amp;&amp; !root.<span class="property">right</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="comment">// 只有右节点时 递归右节点</span></span><br><span class="line">    <span class="keyword">if</span>(!root.<span class="property">left</span>) <span class="keyword">return</span> <span class="number">1</span> + <span class="title function_">minDepth</span>(root.<span class="property">right</span>);</span><br><span class="line">    <span class="comment">// 只有左节点时 递归左节点</span></span><br><span class="line">    <span class="keyword">if</span>(!root.<span class="property">right</span>) <span class="keyword">return</span> <span class="number">1</span> + <span class="title function_">minDepth</span>(root.<span class="property">left</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Math</span>.<span class="title function_">min</span>(<span class="title function_">minDepth</span>(root.<span class="property">left</span>), <span class="title function_">minDepth</span>(root.<span class="property">right</span>)) + <span class="number">1</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="226-翻转二叉树"><a href="#226-翻转二叉树" class="headerlink" title="226.翻转二叉树"></a>226.翻转二叉树</h2><p>给你一棵二叉树的根节点 root ，翻转这棵二叉树，并返回其根节点。<br>示例：输入：[4, 2,7, 1,3,6,9]<br>           输出：[4, 7,2, 9,6,3,1]   （把每一个节点的左右孩子交换）</p><blockquote><p>思路：</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用递归版本的前序遍历</span></span><br><span class="line"><span class="keyword">var</span> invertTree = <span class="keyword">function</span>(<span class="params">root</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!root) <span class="keyword">return</span> <span class="literal">null</span>;<span class="comment">// 终止条件</span></span><br><span class="line">    <span class="comment">// 交换左右节点</span></span><br><span class="line">    <span class="keyword">const</span> rightNode = root.<span class="property">right</span>;</span><br><span class="line">    root.<span class="property">right</span> = <span class="title function_">invertTree</span>(root.<span class="property">left</span>);</span><br><span class="line">    root.<span class="property">left</span> = <span class="title function_">invertTree</span>(rightNode);</span><br><span class="line">    <span class="keyword">return</span> root;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用层序遍历</span></span><br><span class="line"><span class="keyword">var</span> invertTree = <span class="keyword">function</span>(<span class="params">root</span>) &#123;</span><br><span class="line">    <span class="comment">//先定义节点交换函数</span></span><br><span class="line">    <span class="keyword">const</span> invertNode = <span class="keyword">function</span>(<span class="params">root, left, right</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> temp = left;</span><br><span class="line">        left = right;</span><br><span class="line">        right = temp;</span><br><span class="line">        root.<span class="property">left</span> = left;</span><br><span class="line">        root.<span class="property">right</span> = right;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">let</span> queue = [];</span><br><span class="line">    <span class="keyword">if</span>(root === <span class="literal">null</span>) <span class="keyword">return</span> root;</span><br><span class="line">    queue.<span class="title function_">push</span>(root);</span><br><span class="line">    <span class="keyword">while</span>(queue.<span class="property">length</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> length = queue.<span class="property">length</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>;i &lt; length; i++) &#123;</span><br><span class="line">            <span class="keyword">let</span> node = queue.<span class="title function_">shift</span>();</span><br><span class="line">            <span class="comment">//节点处理逻辑</span></span><br><span class="line">            <span class="title function_">invertNode</span>(node, node.<span class="property">left</span>, node.<span class="property">right</span>);</span><br><span class="line">            node.<span class="property">left</span> &amp;&amp; queue.<span class="title function_">push</span>(node.<span class="property">left</span>);</span><br><span class="line">            node.<span class="property">right</span> &amp;&amp; queue.<span class="title function_">push</span>(node.<span class="property">right</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> root;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用迭代版本(统一模板))的前序遍历：</span></span><br><span class="line"><span class="keyword">var</span> invertTree = <span class="keyword">function</span>(<span class="params">root</span>) &#123;</span><br><span class="line">    <span class="comment">//我们先定义节点交换函数</span></span><br><span class="line">    <span class="keyword">const</span> invertNode = <span class="keyword">function</span>(<span class="params">root, left, right</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> temp = left;</span><br><span class="line">        left = right;</span><br><span class="line">        right = temp;</span><br><span class="line">        root.<span class="property">left</span> = left;</span><br><span class="line">        root.<span class="property">right</span> = right;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//使用迭代方法的前序遍历 </span></span><br><span class="line">    <span class="keyword">let</span> stack = [];</span><br><span class="line">    <span class="keyword">if</span>(root === <span class="literal">null</span>) <span class="keyword">return</span> root;</span><br><span class="line">    stack.<span class="title function_">push</span>(root);</span><br><span class="line">    <span class="keyword">while</span>(stack.<span class="property">length</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> node = stack.<span class="title function_">pop</span>();</span><br><span class="line">        <span class="keyword">if</span>(node !== <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="comment">//前序遍历顺序中左右  入栈顺序是前序遍历的倒序右左中</span></span><br><span class="line">            node.<span class="property">right</span> &amp;&amp; stack.<span class="title function_">push</span>(node.<span class="property">right</span>);</span><br><span class="line">            node.<span class="property">left</span> &amp;&amp; stack.<span class="title function_">push</span>(node.<span class="property">left</span>);</span><br><span class="line">            stack.<span class="title function_">push</span>(node);</span><br><span class="line">            stack.<span class="title function_">push</span>(<span class="literal">null</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            node = stack.<span class="title function_">pop</span>();</span><br><span class="line">            <span class="comment">//节点处理逻辑</span></span><br><span class="line">            <span class="title function_">invertNode</span>(node, node.<span class="property">left</span>, node.<span class="property">right</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> root;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="101-对称二叉树"><a href="#101-对称二叉树" class="headerlink" title="101.对称二叉树"></a>101.对称二叉树</h2><p>给定一个二叉树，检查它是否是镜像对称的。<br>示例：输入：[1, 2,2, 3,4,4,3]            true<br>           输入：[1, 2,2, null,3,null,3]     false</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> isSymmetric = <span class="keyword">function</span>(<span class="params">root</span>) &#123;</span><br><span class="line">    <span class="comment">// 1. 确定递归的参数 root.left root.right和返回值true false </span></span><br><span class="line">    <span class="keyword">const</span> compareNode = <span class="keyword">function</span>(<span class="params">left, right</span>) &#123;</span><br><span class="line">        <span class="comment">// 2. 确定终止条件 空的情况</span></span><br><span class="line">        <span class="keyword">if</span>(left === <span class="literal">null</span> &amp;&amp; right !== <span class="literal">null</span> || left !== <span class="literal">null</span> &amp;&amp; right === <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(left === <span class="literal">null</span> &amp;&amp; right === <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(left.<span class="property">val</span> !== right.<span class="property">val</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 3. 确定单层递归逻辑</span></span><br><span class="line">        <span class="keyword">let</span> outSide = <span class="title function_">compareNode</span>(left.<span class="property">left</span>, right.<span class="property">right</span>);</span><br><span class="line">        <span class="keyword">let</span> inSide = <span class="title function_">compareNode</span>(left.<span class="property">right</span>, right.<span class="property">left</span>);</span><br><span class="line">        <span class="keyword">return</span> outSide &amp;&amp; inSide;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(root === <span class="literal">null</span>)  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">compareNode</span>(root.<span class="property">left</span>, root.<span class="property">right</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="559-n叉树的最大深度"><a href="#559-n叉树的最大深度" class="headerlink" title="559.n叉树的最大深度"></a>559.n叉树的最大深度</h2><p>给定一个 N 叉树，找到其最大深度。最大深度是指从根节点到最远叶子节点的最长路径上的节点总数。<br>示例：输入：[1,null,3,2,4,null,5,6]      3</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 递归写法</span></span><br><span class="line"><span class="keyword">var</span> maxDepth = <span class="keyword">function</span>(<span class="params">root</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(!root) <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    <span class="keyword">let</span> depth = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> node <span class="keyword">of</span> root.<span class="property">children</span>) &#123;</span><br><span class="line">        depth = <span class="title class_">Math</span>.<span class="title function_">max</span>(depth, <span class="title function_">maxDepth</span>(node))</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> depth + <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 层序遍历</span></span><br><span class="line"><span class="keyword">var</span> maxDepth = <span class="keyword">function</span>(<span class="params">root</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(!root) <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    <span class="keyword">let</span> count = <span class="number">0</span></span><br><span class="line">    <span class="keyword">let</span> queue = [root]</span><br><span class="line">    <span class="keyword">while</span>(queue.<span class="property">length</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> size = queue.<span class="property">length</span></span><br><span class="line">        count++</span><br><span class="line">        <span class="keyword">while</span>(size--) &#123;</span><br><span class="line">            <span class="keyword">let</span> node = queue.<span class="title function_">shift</span>()</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">let</span> item <span class="keyword">of</span> node.<span class="property">children</span>) &#123;</span><br><span class="line">                item &amp;&amp; queue.<span class="title function_">push</span>(item);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> count</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="222-完全二叉树的节点个数"><a href="#222-完全二叉树的节点个数" class="headerlink" title="222.完全二叉树的节点个数"></a>222.完全二叉树的节点个数</h2><p>给出一个完全二叉树，求出该树的节点个数。<br>示例：输入：root = [1,2,3,4,5,6]     6</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//递归法计算二叉树节点数</span></span><br><span class="line"><span class="keyword">var</span> countNodes = <span class="keyword">function</span>(<span class="params">root</span>) &#123;</span><br><span class="line">    <span class="comment">// 1. 确定递归函数参数</span></span><br><span class="line">    <span class="keyword">const</span> getNodeSum = <span class="keyword">function</span>(<span class="params">node</span>) &#123;</span><br><span class="line">    <span class="comment">// 2. 确定终止条件</span></span><br><span class="line">        <span class="keyword">if</span>(node === <span class="literal">null</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 3. 确定单层递归逻辑</span></span><br><span class="line">        <span class="keyword">let</span> leftNum = <span class="title function_">getNodeSum</span>(node.<span class="property">left</span>);</span><br><span class="line">        <span class="keyword">let</span> rightNum = <span class="title function_">getNodeSum</span>(node.<span class="property">right</span>);</span><br><span class="line">        <span class="keyword">return</span> leftNum + rightNum + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">getNodeSum</span>(root);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//层序遍历</span></span><br><span class="line"><span class="keyword">var</span> countNodes = <span class="keyword">function</span>(<span class="params">root</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> queue = [];</span><br><span class="line">    <span class="keyword">if</span>(root === <span class="literal">null</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    queue.<span class="title function_">push</span>(root);</span><br><span class="line">    <span class="keyword">let</span> nodeNums = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(queue.<span class="property">length</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> length = queue.<span class="property">length</span>;</span><br><span class="line">        <span class="keyword">while</span>(length--) &#123;</span><br><span class="line">            <span class="keyword">let</span> node = queue.<span class="title function_">shift</span>();</span><br><span class="line">            nodeNums++;</span><br><span class="line">            node.<span class="property">left</span> &amp;&amp; queue.<span class="title function_">push</span>(node.<span class="property">left</span>);</span><br><span class="line">            node.<span class="property">right</span> &amp;&amp; queue.<span class="title function_">push</span>(node.<span class="property">right</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> nodeNums;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="110-平衡二叉树"><a href="#110-平衡二叉树" class="headerlink" title="110.平衡二叉树"></a>110.平衡二叉树</h2><p>给定一个二叉树，判断它是否是高度平衡的二叉树。<br><strong>高度平衡二叉树</strong>定义为：一个二叉树每个节点 的左右两个子树的高度差的绝对值不超过1。<br>示例：输入：[3, 9,20, null,null,15,7]     true</p><blockquote><p>思路：通过递归计算每个节点的子树高度，并检查每个节点的左右子树高度差是否超过1。<br>           如果超过1，表示该树不平衡，立即返回-1。</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 递归三部曲 + 后序遍历 左右中 当前左子树右子树高度相差大于1就返回-1</span></span><br><span class="line"><span class="keyword">var</span> isBalanced = <span class="keyword">function</span>(<span class="params">root</span>) &#123;</span><br><span class="line">    <span class="comment">// 1. 确定递归函数参数以及返回值</span></span><br><span class="line">    <span class="keyword">const</span> getDepth = <span class="keyword">function</span>(<span class="params">node</span>) &#123;</span><br><span class="line">        <span class="comment">// 2. 确定递归函数终止条件</span></span><br><span class="line">        <span class="keyword">if</span>(node === <span class="literal">null</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="comment">// 3. 确定单层递归逻辑</span></span><br><span class="line">        <span class="keyword">let</span> leftDepth = <span class="title function_">getDepth</span>(node.<span class="property">left</span>); <span class="comment">//左子树高度</span></span><br><span class="line">        <span class="comment">// 当判定左子树不为平衡二叉树时,即可直接返回-1</span></span><br><span class="line">        <span class="keyword">if</span>(leftDepth === -<span class="number">1</span>) <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">let</span> rightDepth = <span class="title function_">getDepth</span>(node.<span class="property">right</span>); <span class="comment">//右子树高度</span></span><br><span class="line">        <span class="comment">// 当判定右子树不为平衡二叉树时,即可直接返回-1</span></span><br><span class="line">        <span class="keyword">if</span>(rightDepth === -<span class="number">1</span>) <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title class_">Math</span>.<span class="title function_">abs</span>(leftDepth - rightDepth) &gt; <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span> + <span class="title class_">Math</span>.<span class="title function_">max</span>(leftDepth, rightDepth);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> !(<span class="title function_">getDepth</span>(root) === -<span class="number">1</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//层序遍历</span></span><br><span class="line"><span class="keyword">var</span> getHeight = <span class="keyword">function</span> (<span class="params">curNode</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> queue = [];</span><br><span class="line">    <span class="keyword">if</span> (curNode !== <span class="literal">null</span>) queue.<span class="title function_">push</span>(curNode); <span class="comment">// 压入当前元素</span></span><br><span class="line">    <span class="keyword">let</span> depth = <span class="number">0</span>, res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (queue.<span class="property">length</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> node = queue[queue.<span class="property">length</span> - <span class="number">1</span>]; <span class="comment">// 取出栈顶</span></span><br><span class="line">        <span class="keyword">if</span> (node !== <span class="literal">null</span>) &#123;</span><br><span class="line">            queue.<span class="title function_">pop</span>();</span><br><span class="line">            queue.<span class="title function_">push</span>(node);   <span class="comment">// 中</span></span><br><span class="line">            queue.<span class="title function_">push</span>(<span class="literal">null</span>);</span><br><span class="line">            depth++;</span><br><span class="line">            node.<span class="property">right</span> &amp;&amp; queue.<span class="title function_">push</span>(node.<span class="property">right</span>);   <span class="comment">// 右</span></span><br><span class="line">            node.<span class="property">left</span> &amp;&amp; queue.<span class="title function_">push</span>(node.<span class="property">left</span>);     <span class="comment">// 左</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            queue.<span class="title function_">pop</span>();</span><br><span class="line">            node = queue[queue.<span class="property">length</span> - <span class="number">1</span>];</span><br><span class="line">            queue.<span class="title function_">pop</span>();</span><br><span class="line">            depth--;</span><br><span class="line">        &#125;</span><br><span class="line">        res = res &gt; depth ? res : depth;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> isBalanced = <span class="keyword">function</span> (<span class="params">root</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (root === <span class="literal">null</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">let</span> queue = [root];</span><br><span class="line">    <span class="keyword">while</span> (queue.<span class="property">length</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> node = queue[queue.<span class="property">length</span> - <span class="number">1</span>]; <span class="comment">// 取出栈顶</span></span><br><span class="line">        queue.<span class="title function_">pop</span>();</span><br><span class="line">        <span class="keyword">if</span> (<span class="title class_">Math</span>.<span class="title function_">abs</span>(<span class="title function_">getHeight</span>(node.<span class="property">left</span>) - <span class="title function_">getHeight</span>(node.<span class="property">right</span>)) &gt; <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        node.<span class="property">right</span> &amp;&amp; queue.<span class="title function_">push</span>(node.<span class="property">right</span>);</span><br><span class="line">        node.<span class="property">left</span> &amp;&amp; queue.<span class="title function_">push</span>(node.<span class="property">left</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="257-二叉树的所有路径"><a href="#257-二叉树的所有路径" class="headerlink" title="257.二叉树的所有路径"></a>257.二叉树的所有路径</h2><p>给定一个二叉树，返回所有从根节点到叶子节点的路径。(叶子节点是指没有子节点的节点)<br>示例：输入：[1, 2,3, null,5,null,null]<br>           输出：[“1-&gt;2-&gt;5”, “1-&gt;3”]</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//递归遍历+递归三部曲</span></span><br><span class="line"><span class="keyword">var</span> binaryTreePaths = <span class="keyword">function</span>(<span class="params">root</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> res = [];</span><br><span class="line">    <span class="comment">//1. 确定递归函数 函数参数</span></span><br><span class="line">    <span class="keyword">const</span> getPath = <span class="keyword">function</span>(<span class="params">node,curPath</span>) &#123;</span><br><span class="line">        <span class="comment">//2. 确定终止条件，到叶子节点就终止</span></span><br><span class="line">        <span class="keyword">if</span>(node.<span class="property">left</span> === <span class="literal">null</span> &amp;&amp; node.<span class="property">right</span> === <span class="literal">null</span>) &#123;</span><br><span class="line">            curPath += node.<span class="property">val</span> <span class="comment">// 将叶子节点值添加到当前路径</span></span><br><span class="line">            res.<span class="title function_">push</span>(curPath) <span class="comment">// 将完整路径添加到结果数组</span></span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//3. 确定单层递归逻辑</span></span><br><span class="line">        curPath += node.<span class="property">val</span> + <span class="string">&#x27;-&gt;&#x27;</span>;</span><br><span class="line">        node.<span class="property">left</span> &amp;&amp; <span class="title function_">getPath</span>(node.<span class="property">left</span>, curPath);</span><br><span class="line">        node.<span class="property">right</span> &amp;&amp; <span class="title function_">getPath</span>(node.<span class="property">right</span>, curPath);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">getPath</span>(root, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//迭代法</span></span><br><span class="line"><span class="keyword">var</span> binaryTreePaths = <span class="keyword">function</span>(<span class="params">root</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (!root) <span class="keyword">return</span> [];</span><br><span class="line">  <span class="keyword">const</span> stack = [root], paths = [<span class="string">&#x27;&#x27;</span>], res = [];</span><br><span class="line">  <span class="keyword">while</span> (stack.<span class="property">length</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> node = stack.<span class="title function_">pop</span>();</span><br><span class="line">    <span class="keyword">let</span> path = paths.<span class="title function_">pop</span>();</span><br><span class="line">    <span class="keyword">if</span> (!node.<span class="property">left</span> &amp;&amp; !node.<span class="property">right</span>) &#123; <span class="comment">// 到叶子节点终止, 添加路径到结果中</span></span><br><span class="line">      res.<span class="title function_">push</span>(path + node.<span class="property">val</span>);</span><br><span class="line">      <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    path += node.<span class="property">val</span> + <span class="string">&#x27;-&gt;&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span> (node.<span class="property">right</span>) &#123; <span class="comment">// 右节点存在</span></span><br><span class="line">      stack.<span class="title function_">push</span>(node.<span class="property">right</span>);</span><br><span class="line">      paths.<span class="title function_">push</span>(path);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (node.<span class="property">left</span>) &#123; <span class="comment">// 左节点存在</span></span><br><span class="line">      stack.<span class="title function_">push</span>(node.<span class="property">left</span>);</span><br><span class="line">      paths.<span class="title function_">push</span>(path);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> res;</span><br><span class="line">&#125;; </span><br></pre></td></tr></table></figure><h2 id="404-左叶子之和"><a href="#404-左叶子之和" class="headerlink" title="404.左叶子之和"></a>404.左叶子之和</h2><p>计算给定二叉树的所有左叶子之和。<br>示例：输入：[3, 9,20, null,null,15,7]<br>           在这个二叉树中，有两个左叶子9、15，所以返回24</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//采用后序遍历 递归遍历</span></span><br><span class="line"><span class="keyword">var</span> sumOfLeftLeaves = <span class="keyword">function</span>(<span class="params">root</span>) &#123;</span><br><span class="line">    <span class="comment">// 1. 确定递归函数参数</span></span><br><span class="line">    <span class="keyword">const</span> nodesSum = <span class="keyword">function</span>(<span class="params">node</span>) &#123;</span><br><span class="line">        <span class="comment">// 2. 确定终止条件</span></span><br><span class="line">        <span class="keyword">if</span>(node === <span class="literal">null</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">let</span> leftValue = <span class="title function_">nodesSum</span>(node.<span class="property">left</span>);</span><br><span class="line">        <span class="keyword">let</span> rightValue = <span class="title function_">nodesSum</span>(node.<span class="property">right</span>);</span><br><span class="line">        <span class="comment">// 3. 单层递归逻辑</span></span><br><span class="line">        <span class="keyword">let</span> midValue = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(node.<span class="property">left</span> &amp;&amp; node.<span class="property">left</span>.<span class="property">left</span> === <span class="literal">null</span> &amp;&amp; node.<span class="property">left</span>.<span class="property">right</span> === <span class="literal">null</span>) &#123;</span><br><span class="line">            midValue = node.<span class="property">left</span>.<span class="property">val</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">let</span> sum = midValue + leftValue + rightValue;</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">nodesSum</span>(root);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 迭代法 - 采用层序遍历</span></span><br><span class="line"><span class="keyword">var</span> sumOfLeftLeaves = <span class="keyword">function</span>(<span class="params">root</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(root === <span class="literal">null</span>) <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">let</span> queue = [],sum = <span class="number">0</span>;</span><br><span class="line">    queue.<span class="title function_">push</span>(root);</span><br><span class="line">    <span class="keyword">while</span>(queue.<span class="property">length</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> node = queue.<span class="title function_">shift</span>();</span><br><span class="line">        <span class="keyword">if</span>(node.<span class="property">left</span> !== <span class="literal">null</span> &amp;&amp; node.<span class="property">left</span>.<span class="property">left</span> === <span class="literal">null</span> &amp;&amp; node.<span class="property">left</span>.<span class="property">right</span> === <span class="literal">null</span>) &#123;</span><br><span class="line">            sum += node.<span class="property">left</span>.<span class="property">val</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        node.<span class="property">left</span> &amp;&amp; queue.<span class="title function_">push</span>(node.<span class="property">left</span>);</span><br><span class="line">        node.<span class="property">right</span> &amp;&amp; queue.<span class="title function_">push</span>(node.<span class="property">right</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="513-找树左下角的值"><a href="#513-找树左下角的值" class="headerlink" title="513.找树左下角的值"></a>513.找树左下角的值</h2><p>给定一个二叉树，在树的最后一行找到最左边的值。<br>示例：输入：[2, 2,3]     1<br>           [1, 2,3, 4,null,5,6, null,null,7,null,null,null]   7</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//递归遍历 前序遍历 找到最大深度的叶子节点即可</span></span><br><span class="line"><span class="keyword">var</span> findBottomLeftValue = <span class="keyword">function</span>(<span class="params">root</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> maxPath = <span class="number">0</span>, resNode = <span class="literal">null</span>;</span><br><span class="line">    <span class="comment">// 1. 确定递归函数的函数参数</span></span><br><span class="line">    <span class="keyword">const</span> dfsTree = <span class="keyword">function</span>(<span class="params">node, curPath</span>) &#123;</span><br><span class="line">    <span class="comment">// 2. 确定递归函数终止条件</span></span><br><span class="line">        <span class="keyword">if</span>(node.<span class="property">left</span> === <span class="literal">null</span> &amp;&amp; node.<span class="property">right</span> === <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span>(curPath &gt; maxPath) &#123;</span><br><span class="line">                maxPath = curPath;</span><br><span class="line">                resNode = node.<span class="property">val</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        node.<span class="property">left</span> &amp;&amp; <span class="title function_">dfsTree</span>(node.<span class="property">left</span>, curPath + <span class="number">1</span>);</span><br><span class="line">        node.<span class="property">right</span> &amp;&amp; <span class="title function_">dfsTree</span>(node.<span class="property">right</span>, curPath + <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">dfsTree</span>(root, <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> resNode;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//层序遍历 记录最后一行的第一个节点</span></span><br><span class="line"><span class="keyword">var</span> findBottomLeftValue = <span class="keyword">function</span>(<span class="params">root</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> queue = [], resNode;</span><br><span class="line">    <span class="keyword">if</span>(root === <span class="literal">null</span>) <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    queue.<span class="title function_">push</span>(root);</span><br><span class="line">    <span class="keyword">while</span>(queue.<span class="property">length</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> length = queue.<span class="property">length</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; length; i++) &#123;</span><br><span class="line">            <span class="keyword">let</span> node = queue.<span class="title function_">shift</span>();</span><br><span class="line">            <span class="keyword">if</span>(i === <span class="number">0</span>)  resNode = node.<span class="property">val</span>;</span><br><span class="line">            node.<span class="property">left</span> &amp;&amp; queue.<span class="title function_">push</span>(node.<span class="property">left</span>);</span><br><span class="line">            node.<span class="property">right</span> &amp;&amp; queue.<span class="title function_">push</span>(node.<span class="property">right</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> resNode;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="112-路径总和"><a href="#112-路径总和" class="headerlink" title="112. 路径总和"></a>112. 路径总和</h2><p>给定一个二叉树和一个目标和，判断该树中是否存在根节点到叶子节点的路径，<br>这条路径上所有节点值相加等于目标和。</p><p>示例：输入：[5, 4,8, 11,null,13,4, 7,2,null,null,null,1]<br>           返回 true, 因为存在目标和为 22 的根节点到叶子节点的路径 5 -&gt; 4 -&gt; 11 -&gt; 2</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 递归法</span></span><br><span class="line"><span class="keyword">let</span> haspathsum = <span class="keyword">function</span> (<span class="params">root, targetsum</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">traversal</span> = (<span class="params">node, cnt</span>) =&gt; &#123;</span><br><span class="line">    <span class="comment">// 遇到叶子节点，并且计数为0</span></span><br><span class="line">    <span class="keyword">if</span> (cnt === <span class="number">0</span> &amp;&amp; !node.<span class="property">left</span> &amp;&amp; !node.<span class="property">right</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="comment">// 遇到叶子节点而没有找到合适的边(计数不为0)，直接返回</span></span><br><span class="line">    <span class="keyword">if</span> (!node.<span class="property">left</span> &amp;&amp; !node.<span class="property">right</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//  左（空节点不遍历）.遇到叶子节点返回true，则直接返回true</span></span><br><span class="line">    <span class="keyword">if</span> (node.<span class="property">left</span> &amp;&amp; <span class="title function_">traversal</span>(node.<span class="property">left</span>, cnt - node.<span class="property">left</span>.<span class="property">val</span>)) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="comment">//  右（空节点不遍历）</span></span><br><span class="line">    <span class="keyword">if</span> (node.<span class="property">right</span> &amp;&amp; <span class="title function_">traversal</span>(node.<span class="property">right</span>, cnt - node.<span class="property">right</span>.<span class="property">val</span>)) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">if</span> (!root) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">traversal</span>(root, targetsum - root.<span class="property">val</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 迭代法：</span></span><br><span class="line"><span class="keyword">let</span> hasPathSum = <span class="keyword">function</span>(<span class="params">root, targetSum</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(root === <span class="literal">null</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">let</span> nodeArr = [root];</span><br><span class="line">    <span class="keyword">let</span> valArr = [<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">while</span>(nodeArr.<span class="property">length</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> curNode = nodeArr.<span class="title function_">shift</span>();</span><br><span class="line">        <span class="keyword">let</span> curVal = valArr.<span class="title function_">shift</span>();</span><br><span class="line">        curVal += curNode.<span class="property">val</span>;</span><br><span class="line">        <span class="comment">// 为叶子结点，且和等于目标数，返回true</span></span><br><span class="line">        <span class="keyword">if</span> (curNode.<span class="property">left</span> === <span class="literal">null</span> &amp;&amp; curNode.<span class="property">right</span> === <span class="literal">null</span> &amp;&amp; curVal === targetSum) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 左节点，将当前的数值也对应记录下来</span></span><br><span class="line">        <span class="keyword">if</span> (curNode.<span class="property">left</span>) &#123;</span><br><span class="line">            nodeArr.<span class="title function_">push</span>(curNode.<span class="property">left</span>);</span><br><span class="line">            valArr.<span class="title function_">push</span>(curVal);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 右节点，将当前的数值也对应记录下来</span></span><br><span class="line">        <span class="keyword">if</span> (curNode.<span class="property">right</span>) &#123;</span><br><span class="line">            nodeArr.<span class="title function_">push</span>(curNode.<span class="property">right</span>);</span><br><span class="line">            valArr.<span class="title function_">push</span>(curVal);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="113-路径总和Ⅱ"><a href="#113-路径总和Ⅱ" class="headerlink" title="113. 路径总和Ⅱ"></a>113. 路径总和Ⅱ</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 递归法：要遍历整个树找到所有路径，所以递归函数不需要返回值, 与112不同</span></span><br><span class="line"><span class="keyword">let</span> pathsum = <span class="keyword">function</span> (<span class="params">root, targetsum</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> res = [];</span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">travelsal</span> = (<span class="params">node, cnt, path</span>) =&gt; &#123;</span><br><span class="line">    <span class="comment">// 遇到了叶子节点且找到了和为sum的路径</span></span><br><span class="line">    <span class="keyword">if</span> (cnt === <span class="number">0</span> &amp;&amp; !node.<span class="property">left</span> &amp;&amp; !node.<span class="property">right</span>) &#123;</span><br><span class="line">      res.<span class="title function_">push</span>([...path]); <span class="comment">// 不能写res.push(path), 要深拷贝</span></span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!node.<span class="property">left</span> &amp;&amp; !node.<span class="property">right</span>) <span class="keyword">return</span>; <span class="comment">// 遇到叶子节点而没有找到合适的边，直接返回</span></span><br><span class="line">    <span class="comment">// 左 （空节点不遍历）</span></span><br><span class="line">    <span class="keyword">if</span> (node.<span class="property">left</span>) &#123;</span><br><span class="line">      path.<span class="title function_">push</span>(node.<span class="property">left</span>.<span class="property">val</span>);</span><br><span class="line">      <span class="title function_">travelsal</span>(node.<span class="property">left</span>, cnt - node.<span class="property">left</span>.<span class="property">val</span>, path); <span class="comment">// 递归</span></span><br><span class="line">      path.<span class="title function_">pop</span>(); <span class="comment">// 回溯</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 右 （空节点不遍历）</span></span><br><span class="line">    <span class="keyword">if</span> (node.<span class="property">right</span>) &#123;</span><br><span class="line">      path.<span class="title function_">push</span>(node.<span class="property">right</span>.<span class="property">val</span>);</span><br><span class="line">      <span class="title function_">travelsal</span>(node.<span class="property">right</span>, cnt - node.<span class="property">right</span>.<span class="property">val</span>, path); <span class="comment">// 递归</span></span><br><span class="line">      path.<span class="title function_">pop</span>(); <span class="comment">// 回溯</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">if</span> (!root) <span class="keyword">return</span> res;</span><br><span class="line">  <span class="title function_">travelsal</span>(root, targetsum - root.<span class="property">val</span>, [root.<span class="property">val</span>]); <span class="comment">// 把根节点放进路径</span></span><br><span class="line">  <span class="keyword">return</span> res;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 迭代</span></span><br><span class="line"><span class="keyword">let</span> pathSum = <span class="keyword">function</span>(<span class="params">root, targetSum</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(root === <span class="literal">null</span>) <span class="keyword">return</span> [];</span><br><span class="line">    <span class="keyword">let</span> nodeArr = [root];</span><br><span class="line">    <span class="keyword">let</span> resArr = []; <span class="comment">// 记录符合目标和的返回路径</span></span><br><span class="line">    <span class="keyword">let</span> tempArr = [[]]; <span class="comment">// 对应路径</span></span><br><span class="line">    <span class="keyword">let</span> countArr = [<span class="number">0</span>]; <span class="comment">//对应和</span></span><br><span class="line">    <span class="keyword">while</span>(nodeArr.<span class="property">length</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> curNode = nodeArr.<span class="title function_">shift</span>();</span><br><span class="line">        <span class="keyword">let</span> curVal = countArr.<span class="title function_">shift</span>();</span><br><span class="line">        <span class="keyword">let</span> curNodeArr = tempArr.<span class="title function_">shift</span>();</span><br><span class="line">        curVal += curNode.<span class="property">val</span>;</span><br><span class="line">        curNodeArr.<span class="title function_">push</span>(curNode.<span class="property">val</span>);</span><br><span class="line">        <span class="comment">// 为叶子结点，且和等于目标数，将此次结果数组push进返回数组中</span></span><br><span class="line">        <span class="keyword">if</span> (curNode.<span class="property">left</span> === <span class="literal">null</span> &amp;&amp; curNode.<span class="property">right</span> === <span class="literal">null</span> &amp;&amp; curVal === targetSum) &#123;</span><br><span class="line">            resArr.<span class="title function_">push</span>(curNodeArr);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 左节点，将当前的和及对应路径也对应记录下来</span></span><br><span class="line">        <span class="keyword">if</span> (curNode.<span class="property">left</span>) &#123;</span><br><span class="line">            nodeArr.<span class="title function_">push</span>(curNode.<span class="property">left</span>);</span><br><span class="line">            countArr.<span class="title function_">push</span>(curVal);</span><br><span class="line">            tempArr.<span class="title function_">push</span>([...curNodeArr]);</span><br><span class="line">        &#125;</span><br><span class="line">         <span class="comment">// 右节点，将当前的和及对应路径也对应记录下来</span></span><br><span class="line">        <span class="keyword">if</span> (curNode.<span class="property">right</span>) &#123;</span><br><span class="line">            nodeArr.<span class="title function_">push</span>(curNode.<span class="property">right</span>);</span><br><span class="line">            countArr.<span class="title function_">push</span>(curVal);</span><br><span class="line">            tempArr.<span class="title function_">push</span>([...curNodeArr]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> resArr;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="106-从中序与后序遍历序列构造二叉树"><a href="#106-从中序与后序遍历序列构造二叉树" class="headerlink" title="106.从中序与后序遍历序列构造二叉树"></a>106.从中序与后序遍历序列构造二叉树</h2><p>根据一棵树的中序遍历与后序遍历构造二叉树。</p><p>示例：中序遍历 inorder = [9,3,15,20,7]，后序遍历 postorder = [9,15,7,20, 3]<br>           返回如下的二叉树：[3, 9,20, null,null,15,7]</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> buildTree = <span class="keyword">function</span>(<span class="params">inorder, postorder</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!inorder.<span class="property">length</span>) <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">const</span> rootVal = postorder.<span class="title function_">pop</span>(); <span class="comment">// 从后序遍历的数组中获取中间节点的值， 即数组最后一个值</span></span><br><span class="line">    <span class="keyword">let</span> rootIndex = inorder.<span class="title function_">indexOf</span>(rootVal); <span class="comment">// 获取中间节点在中序遍历中的下标</span></span><br><span class="line">    <span class="keyword">const</span> root = <span class="keyword">new</span> <span class="title class_">TreeNode</span>(rootVal); <span class="comment">// 创建中间节点</span></span><br><span class="line">    root.<span class="property">left</span> = <span class="title function_">buildTree</span>(inorder.<span class="title function_">slice</span>(<span class="number">0</span>, rootIndex), postorder.<span class="title function_">slice</span>(<span class="number">0</span>, rootIndex)); <span class="comment">// 创建左节点</span></span><br><span class="line">    root.<span class="property">right</span> = <span class="title function_">buildTree</span>(inorder.<span class="title function_">slice</span>(rootIndex + <span class="number">1</span>), postorder.<span class="title function_">slice</span>(rootIndex)); <span class="comment">// 创建右节点</span></span><br><span class="line">    <span class="keyword">return</span> root;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="105-从前序与中序遍历序列构造二叉树"><a href="#105-从前序与中序遍历序列构造二叉树" class="headerlink" title="105.从前序与中序遍历序列构造二叉树"></a>105.从前序与中序遍历序列构造二叉树</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> buildTree = <span class="keyword">function</span>(<span class="params">preorder, inorder</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!preorder.<span class="property">length</span>) <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">const</span> rootVal = preorder.<span class="title function_">shift</span>(); <span class="comment">// 从前序遍历的数组中获取中间节点的值， 即数组第一个值</span></span><br><span class="line">    <span class="keyword">const</span> index = inorder.<span class="title function_">indexOf</span>(rootVal); <span class="comment">// 获取中间节点在中序遍历中的下标</span></span><br><span class="line">    <span class="keyword">const</span> root = <span class="keyword">new</span> <span class="title class_">TreeNode</span>(rootVal); <span class="comment">// 创建中间节点</span></span><br><span class="line">    root.<span class="property">left</span> = <span class="title function_">buildTree</span>(preorder.<span class="title function_">slice</span>(<span class="number">0</span>, index), inorder.<span class="title function_">slice</span>(<span class="number">0</span>, index)); <span class="comment">// 创建左节点</span></span><br><span class="line">    root.<span class="property">right</span> = <span class="title function_">buildTree</span>(preorder.<span class="title function_">slice</span>(index), inorder.<span class="title function_">slice</span>(index + <span class="number">1</span>)); <span class="comment">// 创建右节点</span></span><br><span class="line">    <span class="keyword">return</span> root;</span><br><span class="line">  &#125;;</span><br></pre></td></tr></table></figure><h2 id="654-最大二叉树"><a href="#654-最大二叉树" class="headerlink" title="654.最大二叉树"></a>654.最大二叉树</h2><p>给定一个不含重复元素的整数数组。一个以此数组构建的最大二叉树定义如下：<br>    二叉树的根是数组中的最大元素。<br>    左子树是通过数组中最大值左边部分构造出的最大二叉树。<br>    右子树是通过数组中最大值右边部分构造出的最大二叉树。<br>通过给定的数组构建最大二叉树，并且输出这个树的根节点。</p><p>示例：输入：[3,2,1,6,0,5]<br>           返回如下的二叉树：[6, 3,5, null,2,0,null, null,null,null,1,null…]</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> constructMaximumBinaryTree = <span class="keyword">function</span> (<span class="params">nums</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">BuildTree</span> = (<span class="params">arr, left, right</span>) =&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span>(left &gt; right) <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">let</span> maxValue = -<span class="number">1</span>, maxIndex = -<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = left; i &lt;= right; ++i) &#123;</span><br><span class="line">            <span class="keyword">if</span> (arr[i] &gt; maxValue) &#123;</span><br><span class="line">                maxValue = arr[i];</span><br><span class="line">                maxIndex = i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">let</span> root = <span class="keyword">new</span> <span class="title class_">TreeNode</span>(maxValue);</span><br><span class="line">        root.<span class="property">left</span> = <span class="title class_">BuildTree</span>(arr, left, maxIndex - <span class="number">1</span>);</span><br><span class="line">        root.<span class="property">right</span> = <span class="title class_">BuildTree</span>(arr, maxIndex + <span class="number">1</span>, right);</span><br><span class="line">        <span class="keyword">return</span> root;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> root = <span class="title class_">BuildTree</span>(nums, <span class="number">0</span>, nums.<span class="property">length</span> - <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> root;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="617-合并二叉树"><a href="#617-合并二叉树" class="headerlink" title="617.合并二叉树"></a>617.合并二叉树</h2><p>给定两个二叉树，想象当你将它们中的一个覆盖到另一个上时，两个二叉树的一些节点便会重叠。你需要将他们合并为一个新的二叉树。合并的规则是如果两个节点重叠，那么将他们的值相加作为节点合并后的新值，否则不为NULL 的节点将直接作为新二叉树的节点。</p><p>示例：输入：Tree1 [1, 3,2, 5,null,null,null]，Tree2 [2, 1,3, null,4,null,7]<br>           合并后的树：[3, 4,5, 5,4,null,7]</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> mergeTrees = <span class="keyword">function</span> (<span class="params">root1, root2</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">preOrder</span> = (<span class="params">root1, root2</span>) =&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span>(!root1) <span class="keyword">return</span> root2</span><br><span class="line">        <span class="keyword">if</span>(!root2) <span class="keyword">return</span> root1;</span><br><span class="line">        root1.<span class="property">val</span> += root2.<span class="property">val</span>;</span><br><span class="line">        root1.<span class="property">left</span> = <span class="title function_">preOrder</span>(root1.<span class="property">left</span>, root2.<span class="property">left</span>);</span><br><span class="line">        root1.<span class="property">right</span> = <span class="title function_">preOrder</span>(root1.<span class="property">right</span>, root2.<span class="property">right</span>);</span><br><span class="line">        <span class="keyword">return</span> root1;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">preOrder</span>(root1, root2);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 迭代法：</span></span><br><span class="line"><span class="keyword">var</span> mergeTrees = <span class="keyword">function</span>(<span class="params">root1, root2</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (root1 === <span class="literal">null</span>) <span class="keyword">return</span> root2;</span><br><span class="line">    <span class="keyword">if</span> (root2 === <span class="literal">null</span>) <span class="keyword">return</span> root1;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> queue = [];</span><br><span class="line">    queue.<span class="title function_">push</span>(root1);</span><br><span class="line">    queue.<span class="title function_">push</span>(root2);</span><br><span class="line">    <span class="keyword">while</span> (queue.<span class="property">length</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> node1 = queue.<span class="title function_">shift</span>();</span><br><span class="line">        <span class="keyword">let</span> node2 = queue.<span class="title function_">shift</span>();;</span><br><span class="line">        node1.<span class="property">val</span> += node2.<span class="property">val</span>;</span><br><span class="line">        <span class="keyword">if</span> (node1.<span class="property">left</span> !== <span class="literal">null</span> &amp;&amp; node2.<span class="property">left</span> !== <span class="literal">null</span>) &#123;</span><br><span class="line">            queue.<span class="title function_">push</span>(node1.<span class="property">left</span>);</span><br><span class="line">            queue.<span class="title function_">push</span>(node2.<span class="property">left</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (node1.<span class="property">right</span> !== <span class="literal">null</span> &amp;&amp; node2.<span class="property">right</span> !== <span class="literal">null</span>) &#123;</span><br><span class="line">            queue.<span class="title function_">push</span>(node1.<span class="property">right</span>);</span><br><span class="line">            queue.<span class="title function_">push</span>(node2.<span class="property">right</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (node1.<span class="property">left</span> === <span class="literal">null</span> &amp;&amp; node2.<span class="property">left</span> !== <span class="literal">null</span>) &#123;</span><br><span class="line">            node1.<span class="property">left</span> = node2.<span class="property">left</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (node1.<span class="property">right</span> === <span class="literal">null</span> &amp;&amp; node2.<span class="property">right</span> !== <span class="literal">null</span>) &#123;</span><br><span class="line">            node1.<span class="property">right</span> = node2.<span class="property">right</span>;</span><br><span class="line">        &#125; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> root1;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="700-二叉搜索树中的搜索"><a href="#700-二叉搜索树中的搜索" class="headerlink" title="700.二叉搜索树中的搜索"></a>700.二叉搜索树中的搜索</h2><p>给定二叉搜索树（BST）的根节点和一个值。 你需要在BST中找到节点值等于给定值的节点。<br>返回以该节点为根的子树。 如果节点不存在，则返回 NULL。</p><p>示例： 输入： [4, 2,7, 1,3,null,null], 和值：2<br>            返回：[2, 1,3]</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> searchBST = <span class="keyword">function</span> (<span class="params">root, val</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(!root &amp;&amp; root.<span class="property">val</span> === val) <span class="keyword">return</span> root</span><br><span class="line">    <span class="keyword">if</span>(root.<span class="property">val</span> &gt; val) <span class="keyword">return</span> <span class="title function_">searchBST</span>(root.<span class="property">left</span>, val)</span><br><span class="line">    <span class="keyword">if</span>(root.<span class="property">val</span> &lt; val) <span class="keyword">return</span> <span class="title function_">searchBST</span>(root.<span class="property">right</span>, val)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 迭代法：</span></span><br><span class="line"><span class="keyword">var</span> searchBST = <span class="keyword">function</span> (<span class="params">root, val</span>) &#123;</span><br><span class="line">    <span class="keyword">while</span>(root !== <span class="literal">null</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(root.<span class="property">val</span> &gt; val) root = root.<span class="property">left</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(root.<span class="property">val</span> &lt; val) root = root.<span class="property">right</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> root</span><br><span class="line">    &#125;</span><br><span class="line">    reutrn <span class="literal">null</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="98-验证二叉搜索树"><a href="#98-验证二叉搜索树" class="headerlink" title="98.验证二叉搜索树"></a>98.验证二叉搜索树</h2><p>给定一个二叉树，判断其是否是一个有效的二叉搜索树。<br>  假设一个二叉搜索树具有如下特征：<br>    节点的左子树只包含小于当前节点的数。<br>    节点的右子树只包含大于当前节点的数。<br>    所有左子树和右子树自身必须也是二叉搜索树。</p><p>示例： 输入： [5, 1,4, null,null,3,6]   输出：false<br>            输入：[2, 1,3]                        输出：true</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 辅助数组：中序递归</span></span><br><span class="line"><span class="keyword">var</span> isValidBST = <span class="keyword">function</span> (<span class="params">root</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> arr = [];</span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">buildArr</span> = (<span class="params">root</span>) =&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span> (root) &#123;</span><br><span class="line">            <span class="title function_">buildArr</span>(root.<span class="property">left</span>);</span><br><span class="line">            arr.<span class="title function_">push</span>(root.<span class="property">val</span>);</span><br><span class="line">            <span class="title function_">buildArr</span>(root.<span class="property">right</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">buildArr</span>(root);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt; arr.<span class="property">length</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(arr[i] &lt;= arr[i - <span class="number">1</span>]) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 递归中：</span></span><br><span class="line"><span class="keyword">var</span> isValidBST = <span class="keyword">function</span> (<span class="params">root</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> pre = <span class="literal">null</span>; <span class="comment">// 用于保存上一个访问的节点，用于与当前节点比较，以确保节点值按升序排列。</span></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">inOrder</span> = (<span class="params">root</span>) =&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span>(root === <span class="literal">null</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">let</span> left = <span class="title function_">inOrder</span>(root.<span class="property">left</span>); <span class="comment">// 递归遍历左子树</span></span><br><span class="line">        <span class="comment">// 检查当前节点值是否小于等于前一个节点值</span></span><br><span class="line">        <span class="keyword">if</span>(pre !== <span class="literal">null</span> &amp;&amp; pre.<span class="property">val</span> &gt;= root.<span class="property">val</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        pre = root; <span class="comment">// 更新 pre 为当前节点</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> right = <span class="title function_">inOrder</span>(root.<span class="property">right</span>); <span class="comment">// 递归遍历右子树</span></span><br><span class="line">        <span class="keyword">return</span> left &amp;&amp; right;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">inOrder</span>(root);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 迭代法：</span></span><br><span class="line"><span class="keyword">var</span> isValidBST = <span class="keyword">function</span> (<span class="params">root</span>) &#123;</span><br><span class="line"><span class="keyword">const</span> queue = [];</span><br><span class="line"><span class="keyword">let</span> cur = root, pre = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">while</span> (cur !== <span class="literal">null</span> || queue.<span class="property">length</span> !== <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (cur !== <span class="literal">null</span>) &#123;</span><br><span class="line">queue.<span class="title function_">push</span>(cur);</span><br><span class="line">cur = cur.<span class="property">left</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">cur = queue.<span class="title function_">pop</span>();</span><br><span class="line"><span class="keyword">if</span> (pre !== <span class="literal">null</span> &amp;&amp; cur.<span class="property">val</span> &lt;= pre.<span class="property">val</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">pre = cur;</span><br><span class="line">cur = cur.<span class="property">right</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="530-二叉搜索树的最小绝对差"><a href="#530-二叉搜索树的最小绝对差" class="headerlink" title="530.二叉搜索树的最小绝对差"></a>530.二叉搜索树的最小绝对差</h2><p>给你一棵所有节点为非负值的二叉搜索树，请你计算树中任意两节点的差的绝对值的最小值。</p><p>示例： 输入： [1, null,3, null,null,2,null]   输出：1</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 递归 先转换为有序数组</span></span><br><span class="line"><span class="keyword">var</span> getMinimumDifference = <span class="keyword">function</span> (<span class="params">root</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> arr = [];</span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">buildArr</span> = (<span class="params">root</span>) =&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span> (root) &#123;</span><br><span class="line">            <span class="title function_">buildArr</span>(root.<span class="property">left</span>);</span><br><span class="line">            arr.<span class="title function_">push</span>(root.<span class="property">val</span>);</span><br><span class="line">            <span class="title function_">buildArr</span>(root.<span class="property">right</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">buildArr</span>(root);</span><br><span class="line">    <span class="keyword">let</span> diff = arr[arr.<span class="property">length</span> - <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt; arr.<span class="property">length</span>; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (diff &gt; arr[i] - arr[i - <span class="number">1</span>])</span><br><span class="line">            diff = arr[i] - arr[i - <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> diff;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 递归 在递归的过程中更新最小值</span></span><br><span class="line"><span class="keyword">var</span> getMinimumDifference = <span class="keyword">function</span>(<span class="params">root</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> res = <span class="title class_">Infinity</span></span><br><span class="line">    <span class="keyword">let</span> preNode = <span class="literal">null</span></span><br><span class="line">    <span class="comment">// 中序遍历</span></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">inorder</span> = (<span class="params">node</span>) =&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span>(!node) <span class="keyword">return</span></span><br><span class="line">        <span class="title function_">inorder</span>(node.<span class="property">left</span>)</span><br><span class="line">        <span class="comment">// 更新res</span></span><br><span class="line">        <span class="keyword">if</span>(preNode) res = <span class="title class_">Math</span>.<span class="title function_">min</span>(res, node.<span class="property">val</span> - preNode.<span class="property">val</span>)</span><br><span class="line">        <span class="comment">// 记录前一个节点         </span></span><br><span class="line">        preNode = node</span><br><span class="line">        <span class="title function_">inorder</span>(node.<span class="property">right</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">inorder</span>(root)</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 迭代 中序遍历</span></span><br><span class="line"><span class="keyword">var</span> getMinimumDifference = <span class="keyword">function</span>(<span class="params">root</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> stack = []</span><br><span class="line">    <span class="keyword">let</span> cur = root</span><br><span class="line">    <span class="keyword">let</span> res = <span class="title class_">Infinity</span></span><br><span class="line">    <span class="keyword">let</span> pre = <span class="literal">null</span></span><br><span class="line">    <span class="keyword">while</span>(cur || stack.<span class="property">length</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(cur) &#123;</span><br><span class="line">            stack.<span class="title function_">push</span>(cur)</span><br><span class="line">            cur = cur.<span class="property">left</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            cur = stack.<span class="title function_">pop</span>()</span><br><span class="line">            <span class="keyword">if</span>(pre) res = <span class="title class_">Math</span>.<span class="title function_">min</span>(res, cur.<span class="property">val</span> - pre.<span class="property">val</span>)</span><br><span class="line">            pre = cur</span><br><span class="line">            cur = cur.<span class="property">right</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="501-二叉搜索树中的众数"><a href="#501-二叉搜索树中的众数" class="headerlink" title="501.二叉搜索树中的众数"></a>501.二叉搜索树中的众数</h2><p>给定一个有相同值的二叉搜索树（BST），找出 BST 中的所有众数（出现频率最高的元素）。</p><p>示例： 输入：BST [1, null,2,2],   输出：[2]</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 递归中序遍历 - 使用额外空间map的方法</span></span><br><span class="line"><span class="keyword">var</span> findMode = <span class="keyword">function</span>(<span class="params">root</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> map = <span class="keyword">new</span> <span class="title class_">Map</span>();</span><br><span class="line">    <span class="comment">// 1. 确定递归函数以及函数参数</span></span><br><span class="line">    <span class="keyword">const</span> traverTree = <span class="keyword">function</span>(<span class="params">root</span>) &#123;</span><br><span class="line">        <span class="comment">// 2. 确定递归终止条件</span></span><br><span class="line">        <span class="keyword">if</span>(root === <span class="literal">null</span>) <span class="keyword">return</span> </span><br><span class="line">        <span class="title function_">traverTree</span>(root.<span class="property">left</span>);</span><br><span class="line">        <span class="comment">// 3. 单层递归逻辑</span></span><br><span class="line">        map.<span class="title function_">set</span>(root.<span class="property">val</span>, map.<span class="title function_">has</span>(root.<span class="property">val</span>) ? map.<span class="title function_">get</span>(root.<span class="property">val</span>)+<span class="number">1</span> : <span class="number">1</span>);</span><br><span class="line">        <span class="title function_">traverTree</span>(root.<span class="property">right</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">traverTree</span>(root);</span><br><span class="line">    <span class="comment">//上面把数据都存储到map</span></span><br><span class="line">    <span class="comment">//下面开始寻找map里面的</span></span><br><span class="line">    <span class="comment">// 定义一个最大出现次数的初始值为root.val的出现次数</span></span><br><span class="line">    <span class="keyword">let</span> maxCount = map.<span class="title function_">get</span>(root.<span class="property">val</span>);</span><br><span class="line">    <span class="keyword">let</span> res = [];<span class="comment">// 定义一个存放结果的数组res</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> [key,value] <span class="keyword">of</span> map) &#123;</span><br><span class="line">        <span class="comment">// 如果当前值等于最大出现次数就直接在res增加该值</span></span><br><span class="line">        <span class="keyword">if</span>(value === maxCount) res.<span class="title function_">push</span>(key);</span><br><span class="line">        <span class="comment">// 如果value的值大于原本的maxCount就清空res的所有值，因为找到了更大的</span></span><br><span class="line">        <span class="keyword">if</span>(value &gt; maxCount) &#123;</span><br><span class="line">            res = [];</span><br><span class="line">            maxCount = value;</span><br><span class="line">            res.<span class="title function_">push</span>(key);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 不使用额外空间，利用二叉树性质，中序遍历(有序)：</span></span><br><span class="line"><span class="keyword">var</span> findMode = <span class="keyword">function</span>(<span class="params">root</span>) &#123;</span><br><span class="line">    <span class="comment">// 不使用额外空间，使用中序遍历,设置出现最大次数初始值为1</span></span><br><span class="line">    <span class="keyword">let</span> count = <span class="number">0</span>,maxCount = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">let</span> pre = root,res = [];</span><br><span class="line">    <span class="comment">// 1.确定递归函数及函数参数</span></span><br><span class="line">    <span class="keyword">const</span> travelTree = <span class="keyword">function</span>(<span class="params">cur</span>) &#123;</span><br><span class="line">        <span class="comment">// 2. 确定递归终止条件</span></span><br><span class="line">        <span class="keyword">if</span>(cur === <span class="literal">null</span>) <span class="keyword">return</span> ;</span><br><span class="line">        <span class="title function_">travelTree</span>(cur.<span class="property">left</span>);</span><br><span class="line">        <span class="comment">// 3. 单层递归逻辑</span></span><br><span class="line">        <span class="keyword">if</span>(pre.<span class="property">val</span> === cur.<span class="property">val</span>) count++;</span><br><span class="line">        <span class="keyword">else</span> count = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        pre = cur;</span><br><span class="line">        <span class="keyword">if</span>(count === maxCount) res.<span class="title function_">push</span>(cur.<span class="property">val</span>);</span><br><span class="line">        <span class="keyword">if</span>(count &gt; maxCount) &#123;</span><br><span class="line">            res = [];</span><br><span class="line">            maxCount = count;</span><br><span class="line">            res.<span class="title function_">push</span>(cur.<span class="property">val</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="title function_">travelTree</span>(cur.<span class="property">right</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">travelTree</span>(root);</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="236-二叉树的最近公共祖先"><a href="#236-二叉树的最近公共祖先" class="headerlink" title="236. 二叉树的最近公共祖先"></a>236. 二叉树的最近公共祖先</h2><p>给定一个二叉树, 找到该树中两个指定节点的最近公共祖先。</p><p>示例： 输入：root = [3, 5,1, 6,2,0,8, null,null,7,4], p = 5, q = 1<br>            输出：3  (节点 5 和节点 1 的最近公共祖先是节点 3)</p><blockquote><p>如果当前节点为空（表示到达了叶子节点的子节点）或者当前节点是 p 或 q 之一，则直接返回当前节点。<br>递归调用 travelTree 遍历左子树和右子树。<br>如果左子树和右子树都找到节点，则说明当前节点 root 是最近公共祖先。<br>如果左子树没有找到节点，则返回右子树的结果。<br>如果右子树没有找到节点，则返回左子树的结果。</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 递归:需要从下到上，所以使用后序遍历</span></span><br><span class="line"><span class="keyword">var</span> lowestCommonAncestor = <span class="keyword">function</span>(<span class="params">root, p, q</span>) &#123;</span><br><span class="line">    <span class="comment">// 1. 确定递归的函数</span></span><br><span class="line">    <span class="keyword">const</span> travelTree = <span class="keyword">function</span>(<span class="params">root,p,q</span>) &#123;</span><br><span class="line">        <span class="comment">// 2. 确定递归终止条件</span></span><br><span class="line">        <span class="keyword">if</span>(root === <span class="literal">null</span> || root === p || root === q) <span class="keyword">return</span> root;</span><br><span class="line">        <span class="comment">// 3. 确定递归单层逻辑</span></span><br><span class="line">        <span class="keyword">let</span> left = <span class="title function_">travelTree</span>(root.<span class="property">left</span>, p, q);</span><br><span class="line">        <span class="keyword">let</span> right = <span class="title function_">travelTree</span>(root.<span class="property">right</span>, p, q);</span><br><span class="line">        <span class="keyword">if</span>(left !== <span class="literal">null</span> &amp;&amp; right !== <span class="literal">null</span>) <span class="keyword">return</span> root;</span><br><span class="line">        <span class="keyword">if</span>(left === <span class="literal">null</span>) <span class="keyword">return</span> right;</span><br><span class="line">        <span class="keyword">return</span> left;</span><br><span class="line">    &#125;</span><br><span class="line">   <span class="keyword">return</span> <span class="title function_">travelTree</span>(root, p, q);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="235-二叉搜索树的最近公共祖先"><a href="#235-二叉搜索树的最近公共祖先" class="headerlink" title="235. 二叉搜索树的最近公共祖先"></a>235. 二叉搜索树的最近公共祖先</h2><p>给定一个二叉搜索树, 找到该树中两个指定节点的最近公共祖先。</p><p>示例： 输入：root = [6, 2,8, 0,4,7,9, null,null,3,5], p = 2, q = 8<br>            输出：6  (节点 2 和节点 8 的最近公共祖先是 6)</p><blockquote><p>在BST中，左子树节点的值都小于根节点的值，右子树节点的值都大于根节点的值。<br>如果当前节点的值大于 p 和 q 的值，说明 p 和 q 都在左子树，所以递归左子树。<br>如果当前节点的值小于 p 和 q 的值，说明 p 和 q 都在右子树，所以递归右子树。<br>如果当前节点的值介于 p 和 q 之间（包括等于），说明当前节点就是LCA。</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 递归: 1. 使用给定的递归函数lowestCommonAncestor</span></span><br><span class="line"><span class="keyword">var</span> lowestCommonAncestor = <span class="keyword">function</span>(<span class="params">root, p, q</span>) &#123;</span><br><span class="line">    <span class="comment">// 2. 确定递归终止条件</span></span><br><span class="line">    <span class="keyword">if</span>(root === <span class="literal">null</span>) <span class="keyword">return</span> root;</span><br><span class="line">    <span class="keyword">if</span>(root.<span class="property">val</span> &gt; p.<span class="property">val</span> &amp;&amp; root.<span class="property">val</span> &gt; q.<span class="property">val</span>) &#123;</span><br><span class="line">        <span class="comment">// 向左子树查询</span></span><br><span class="line">        <span class="keyword">return</span> root.<span class="property">left</span> = <span class="title function_">lowestCommonAncestor</span>(root.<span class="property">left</span>,p,q);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(root.<span class="property">val</span> &lt; p.<span class="property">val</span> &amp;&amp; root.<span class="property">val</span> &lt; q.<span class="property">val</span>) &#123;</span><br><span class="line">        <span class="comment">// 向右子树查询</span></span><br><span class="line">        <span class="keyword">return</span> root.<span class="property">right</span> = <span class="title function_">lowestCommonAncestor</span>(root.<span class="property">right</span>,p,q);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> root;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 迭代法</span></span><br><span class="line"><span class="keyword">var</span> lowestCommonAncestor = <span class="keyword">function</span>(<span class="params">root, p, q</span>) &#123;</span><br><span class="line">    <span class="keyword">while</span>(root) &#123;</span><br><span class="line">        <span class="keyword">if</span>(root.<span class="property">val</span> &gt; p.<span class="property">val</span> &amp;&amp; root.<span class="property">val</span> &gt; q.<span class="property">val</span>) &#123;</span><br><span class="line">            root = root.<span class="property">left</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(root.<span class="property">val</span> &lt; p.<span class="property">val</span> &amp;&amp; root.<span class="property">val</span> &lt; q.<span class="property">val</span>) &#123;</span><br><span class="line">            root = root.<span class="property">right</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> root;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="701-二叉搜索树中的插入操作"><a href="#701-二叉搜索树中的插入操作" class="headerlink" title="701.二叉搜索树中的插入操作"></a>701.二叉搜索树中的插入操作</h2><p>给定二叉搜索树（BST）的根节点和要插入树中的值，将值插入二叉搜索树。返回插入后二叉搜索树的根节点。<br>输入数据保证，新值和原始二叉搜索树中的任意节点值都不同。</p><p>示例： 输入：root = [4, 2,7, 1,3,null,null], 插入的值：5<br>            输出：[4, 2, 7, 1,3,5,null] 或者 [5, 2,7, 1,3,null,null, null,null,null,4]</p><blockquote><p>如果当前节点为空，创建一个新的节点并返回它，这意味着找到了插入位置。<br>如果当前节点的值大于要插入的值，则递归地将值插入到左子树。<br>如果当前节点的值小于要插入的值，则递归地将值插入到右子树。</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 递归：有返回值</span></span><br><span class="line"><span class="keyword">var</span> insertIntoBST = <span class="keyword">function</span> (<span class="params">root, val</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">setInOrder</span> = (<span class="params">root, val</span>) =&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span> (root === <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">let</span> node = <span class="keyword">new</span> <span class="title class_">TreeNode</span>(val);</span><br><span class="line">            <span class="keyword">return</span> node;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (root.<span class="property">val</span> &gt; val)</span><br><span class="line">            root.<span class="property">left</span> = <span class="title function_">setInOrder</span>(root.<span class="property">left</span>, val);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (root.<span class="property">val</span> &lt; val)</span><br><span class="line">            root.<span class="property">right</span> = <span class="title function_">setInOrder</span>(root.<span class="property">right</span>, val);</span><br><span class="line">        <span class="keyword">return</span> root;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">setInOrder</span>(root, val);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 递归：无返回值</span></span><br><span class="line"><span class="keyword">var</span> insertIntoBST = <span class="keyword">function</span> (<span class="params">root, val</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> parent = <span class="keyword">new</span> <span class="title class_">TreeNode</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">preOrder</span> = (<span class="params">cur, val</span>) =&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span> (cur === <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">let</span> node = <span class="keyword">new</span> <span class="title class_">TreeNode</span>(val);</span><br><span class="line">            <span class="keyword">if</span> (parent.<span class="property">val</span> &gt; val)</span><br><span class="line">                parent.<span class="property">left</span> = node;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                parent.<span class="property">right</span> = node;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        parent = cur;</span><br><span class="line">        <span class="keyword">if</span> (cur.<span class="property">val</span> &gt; val)</span><br><span class="line">            <span class="title function_">preOrder</span>(cur.<span class="property">left</span>, val);</span><br><span class="line">        <span class="keyword">if</span> (cur.<span class="property">val</span> &lt; val)</span><br><span class="line">            <span class="title function_">preOrder</span>(cur.<span class="property">right</span>, val);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (root === <span class="literal">null</span>)</span><br><span class="line">        root = <span class="keyword">new</span> <span class="title class_">TreeNode</span>(val);</span><br><span class="line">    <span class="title function_">preOrder</span>(root, val);</span><br><span class="line">    <span class="keyword">return</span> root;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 迭代：</span></span><br><span class="line"><span class="keyword">var</span> insertIntoBST = <span class="keyword">function</span> (<span class="params">root, val</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (root === <span class="literal">null</span>) &#123;</span><br><span class="line">        root = <span class="keyword">new</span> <span class="title class_">TreeNode</span>(val);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> parent = <span class="keyword">new</span> <span class="title class_">TreeNode</span>(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">let</span> cur = root;</span><br><span class="line">        <span class="keyword">while</span> (cur) &#123;</span><br><span class="line">            parent = cur;</span><br><span class="line">            <span class="keyword">if</span>(cur.<span class="property">val</span> &gt; val) cur = cur.<span class="property">left</span>;</span><br><span class="line">            <span class="keyword">else</span> cur = cur.<span class="property">right</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">let</span> node = <span class="keyword">new</span> <span class="title class_">TreeNode</span>(val);</span><br><span class="line">        <span class="keyword">if</span>(parent.<span class="property">val</span> &gt; val) parent.<span class="property">left</span> = node;</span><br><span class="line">        <span class="keyword">else</span> parent.<span class="property">right</span> = node;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> root;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="450-删除二叉搜索树中的节点"><a href="#450-删除二叉搜索树中的节点" class="headerlink" title="450.删除二叉搜索树中的节点"></a>450.删除二叉搜索树中的节点</h2><p>给定一个二叉搜索树的根节点 root 和一个值 key，删除二叉搜索树中的 key 对应的节点，并保证二叉搜索树的性质不变。返回二叉搜索树（有可能被更新）的根节点的引用。</p><p>示例： 输入：root = [5, 3,6, 2,4,null,7], key = 3<br>            输出：[5, 4,6, 2,null,null,7] 或者 [5, 2,6, null,4,null,7]</p><p>代码实现思路：</p><blockquote><ol><li><p>递归查找节点：<br>函数 deleteNode(root, key) 的目标是从二叉搜索树中删除值为 key 的节点。<br>首先，检查树的根节点 root 是否为 null，如果是，则返回 null，表明树为空。<br>然后，根据二叉搜索树的性质，如果 key 大于当前节点的值 root.val，那么 key 只能在当前节点的右子树中，于是递归调用 deleteNode(root.right, key)。<br>如果 key 小于 root.val，则继续在左子树中查找，调用 deleteNode(root.left, key)。</p></li><li><p>当找到匹配的节点（即 key 等于 root.val）时，进入处理节点删除的逻辑：<br>场景1：若该节点是一个叶节点（没有子节点），直接返回 null。<br>场景2：若该节点只有一个子节点（要么左子节点存在，要么右子节点存在），则返回该子节点，从而将其替代当前节点。<br>场景3：若该节点有两个子节点，需找到其右子树中最小的节点（即后继节点），将当前节点的值替换为后继节点的值，然后递归删除右子树中的后继节点。</p></li><li><p>获取最小值节点：<br>getMinNode(root) 函数通过不断向左子树遍历，直到找到最左边的节点，即为当前子树最小的节点。</p></li></ol></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> deleteNode = <span class="keyword">function</span>(<span class="params">root, key</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!root) <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">if</span> (key &gt; root.<span class="property">val</span>) &#123;</span><br><span class="line">        root.<span class="property">right</span> = <span class="title function_">deleteNode</span>(root.<span class="property">right</span>, key);</span><br><span class="line">        <span class="keyword">return</span> root;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (key &lt; root.<span class="property">val</span>) &#123;</span><br><span class="line">        root.<span class="property">left</span> = <span class="title function_">deleteNode</span>(root.<span class="property">left</span>, key);</span><br><span class="line">        <span class="keyword">return</span> root;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 场景1: 该节点是叶节点</span></span><br><span class="line">        <span class="keyword">if</span> (!root.<span class="property">left</span> &amp;&amp; !root.<span class="property">right</span>) <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">        <span class="comment">// 场景2: 有一个孩子节点不存在</span></span><br><span class="line">        <span class="keyword">if</span> (root.<span class="property">left</span> &amp;&amp; !root.<span class="property">right</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> root.<span class="property">left</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (root.<span class="property">right</span> &amp;&amp; !root.<span class="property">left</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> root.<span class="property">right</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 场景3: 左右节点都存在</span></span><br><span class="line">        <span class="keyword">const</span> rightNode = root.<span class="property">right</span>;</span><br><span class="line">        <span class="comment">// 获取最小值节点</span></span><br><span class="line">        <span class="keyword">const</span> minNode = <span class="title function_">getMinNode</span>(rightNode);</span><br><span class="line">        <span class="comment">// 将待删除节点的值替换为最小值节点值</span></span><br><span class="line">        root.<span class="property">val</span> = minNode.<span class="property">val</span>;</span><br><span class="line">        <span class="comment">// 删除最小值节点</span></span><br><span class="line">        root.<span class="property">right</span> = <span class="title function_">deleteNode</span>(root.<span class="property">right</span>, minNode.<span class="property">val</span>);</span><br><span class="line">        <span class="keyword">return</span> root;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getMinNode</span>(<span class="params">root</span>) &#123;</span><br><span class="line">    <span class="keyword">while</span> (root.<span class="property">left</span>) &#123;</span><br><span class="line">        root = root.<span class="property">left</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> root;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 迭代法：</span></span><br><span class="line"><span class="keyword">var</span> deleteNode = <span class="keyword">function</span> (<span class="params">root, key</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">deleteOneNode</span> = target =&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span> (!target) <span class="keyword">return</span> target</span><br><span class="line">        <span class="keyword">if</span> (!target.<span class="property">right</span>) <span class="keyword">return</span> target.<span class="property">left</span></span><br><span class="line">        <span class="keyword">let</span> cur = target.<span class="property">right</span></span><br><span class="line">        <span class="keyword">while</span> (cur.<span class="property">left</span>) &#123;</span><br><span class="line">            cur = cur.<span class="property">left</span></span><br><span class="line">        &#125;</span><br><span class="line">        cur.<span class="property">left</span> = target.<span class="property">left</span></span><br><span class="line">        <span class="keyword">return</span> target.<span class="property">right</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!root) <span class="keyword">return</span> root</span><br><span class="line">    <span class="keyword">let</span> cur = root, pre = <span class="literal">null</span></span><br><span class="line">    <span class="keyword">while</span> (cur) &#123;</span><br><span class="line">        <span class="keyword">if</span> (cur.<span class="property">val</span> === key) <span class="keyword">break</span></span><br><span class="line">        pre = cur</span><br><span class="line">        cur.<span class="property">val</span> &gt; key ? cur = cur.<span class="property">left</span> : cur = cur.<span class="property">right</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!pre) <span class="keyword">return</span> <span class="title function_">deleteOneNode</span>(cur)</span><br><span class="line">    <span class="keyword">if</span>(pre.<span class="property">left</span> &amp;&amp; pre.<span class="property">left</span>.<span class="property">val</span> === key) pre.<span class="property">left</span> = <span class="title function_">deleteOneNode</span>(cur)</span><br><span class="line">    <span class="keyword">if</span>(pre.<span class="property">right</span> &amp;&amp; pre.<span class="property">right</span>.<span class="property">val</span> === key) pre.<span class="property">right</span> = <span class="title function_">deleteOneNode</span>(cur)</span><br><span class="line">    <span class="keyword">return</span> root</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="669-修剪二叉搜索树"><a href="#669-修剪二叉搜索树" class="headerlink" title="669. 修剪二叉搜索树"></a>669. 修剪二叉搜索树</h2><p>给定一个二叉搜索树，同时给定最小边界L 和最大边界 R。通过修剪二叉搜索树，使得所有节点的值在[L, R]中 (R&gt;=L) 。你可能需要改变树的根节点，所以结果应当返回修剪好的二叉搜索树的新的根节点。</p><p>示例: 输入：root = [1, 0,2], L = 1, R = 2  输出：[1, null,2]  </p><p>递归代码实现思路：</p><blockquote><p>首先判断root.val：<br>    如果节点值小于 low：则该节点及其所有左子树的元素都不符合条件，需要修剪掉这个节点，直接递归调用修剪右子树，并返回结果（即右子树的根）。<br>     如果节点值大于 high：则该节点及其所有右子树的元素都不符合条件，需要修剪掉这个节点，递归调用修剪左子树，并返回左子树的根。</p><p>如果 root 的值在 [low, high] 范围内：<br>    递归地修剪左子树：root.left = trimBST(root.left, low, high)。<br>    递归地修剪右子树：root.right = trimBST(root.right, low, high)。<br>    最后返回当前节点 root。</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 递归</span></span><br><span class="line"><span class="keyword">var</span> trimBST = <span class="keyword">function</span> (<span class="params">root,low,high</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(root === <span class="literal">null</span>) <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">if</span>(root.<span class="property">val</span> &lt; low) &#123;</span><br><span class="line">        <span class="keyword">let</span> right = <span class="title function_">trimBST</span>(root.<span class="property">right</span>, low, high);</span><br><span class="line">        <span class="keyword">return</span> right;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(root.<span class="property">val</span> &gt; high) &#123;</span><br><span class="line">        <span class="keyword">let</span> left = <span class="title function_">trimBST</span>(root.<span class="property">left</span>, low, high);</span><br><span class="line">        <span class="keyword">return</span> left;</span><br><span class="line">    &#125;</span><br><span class="line">    root.<span class="property">left</span> = <span class="title function_">trimBST</span>(root.<span class="property">left</span>, low, high);</span><br><span class="line">    root.<span class="property">right</span> = <span class="title function_">trimBST</span>(root.<span class="property">right</span>, low, high);</span><br><span class="line">    <span class="keyword">return</span> root;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">// 迭代</span></span><br><span class="line"><span class="keyword">var</span> trimBST = <span class="keyword">function</span>(<span class="params">root, low, high</span>) &#123;</span><br><span class="line">   <span class="keyword">if</span>(root === <span class="literal">null</span>) <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">   <span class="keyword">while</span>(root !== <span class="literal">null</span> &amp;&amp; (root.<span class="property">val</span> &lt; low || root.<span class="property">val</span> &gt; high)) &#123;</span><br><span class="line">       <span class="keyword">if</span>(root.<span class="property">val</span> &lt; low) root = root.<span class="property">right</span>;</span><br><span class="line">       <span class="keyword">else</span> root = root.<span class="property">left</span></span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">let</span> cur = root;</span><br><span class="line">   <span class="keyword">while</span>(cur !== <span class="literal">null</span>) &#123;</span><br><span class="line">       <span class="keyword">while</span>(cur.<span class="property">left</span> &amp;&amp; cur.<span class="property">left</span>.<span class="property">val</span> &lt; low) &#123;</span><br><span class="line">           cur.<span class="property">left</span> = cur.<span class="property">left</span>.<span class="property">right</span>;</span><br><span class="line">       &#125;</span><br><span class="line">       cur = cur.<span class="property">left</span>;</span><br><span class="line">   &#125;</span><br><span class="line">   cur =  root;</span><br><span class="line">   <span class="comment">//判断右子树大于high的情况</span></span><br><span class="line">   <span class="keyword">while</span>(cur !== <span class="literal">null</span>) &#123;</span><br><span class="line">       <span class="keyword">while</span>(cur.<span class="property">right</span> &amp;&amp; cur.<span class="property">right</span>.<span class="property">val</span> &gt; high) &#123;</span><br><span class="line">           cur.<span class="property">right</span> = cur.<span class="property">right</span>.<span class="property">left</span>;</span><br><span class="line">       &#125;</span><br><span class="line">       cur = cur.<span class="property">right</span>;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> root;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="108-将有序数组转换为二叉搜索树"><a href="#108-将有序数组转换为二叉搜索树" class="headerlink" title="108.将有序数组转换为二叉搜索树"></a>108.将有序数组转换为二叉搜索树</h2><p>将一个按照升序排列的有序数组，转换为一棵高度平衡二叉搜索树。</p><ul><li><strong>高度平衡二叉树</strong>是指一个二叉树每个节点 的左右两个子树的高度差的绝对值不超过 1。</li></ul><p>示例：<img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022117837.png" alt="photo"></p><p><strong>递归</strong>代码实现思路：</p><blockquote><ol><li>定义辅助函数 buildTree，负责递归构建树的节点。首先检查当前的左右索引，即 left 和 right。如果 left 大于 right，这意味着当前子数组为空，因此返回 null。</li><li>选择根节点：计算当前子数组的中间索引 mid，用它的值来创建当前子树的根节点。这样可以确保树的平衡，因为每次都选择中间节点作为根节点，从而使左子树和右子树的节点数尽量相等。</li><li>递归调用 buildTree 函数，分别构建左子树和右子树：<br> 左子树的范围是从 left 到 mid - 1。<br> 右子树的范围是从 mid + 1 到 right。</li><li>返回当前的根节点 root。</li><li>调用 buildTree 函数来开始构建树，传入整个数组的索引范围（0 到 nums.length - 1）。</li></ol></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 递归</span></span><br><span class="line"><span class="keyword">var</span> sortedArrayToBST = <span class="keyword">function</span> (<span class="params">nums</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">buildTree</span> = (<span class="params">nums, left, right</span>) =&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span> (left &gt; right) <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">        <span class="keyword">let</span> mid = <span class="title class_">Math</span>.<span class="title function_">floor</span>(left + (right - left) / <span class="number">2</span>)</span><br><span class="line">        <span class="keyword">let</span> root = <span class="keyword">new</span> <span class="title class_">TreeNode</span>(nums[mid])</span><br><span class="line">        root.<span class="property">left</span> = <span class="title function_">buildTree</span>(nums, left, mid - <span class="number">1</span>) <span class="comment">//</span></span><br><span class="line">        root.<span class="property">right</span> = <span class="title function_">buildTree</span>(nums, mid + <span class="number">1</span>, right) <span class="comment">//</span></span><br><span class="line">        <span class="keyword">return</span> root</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">buildTree</span>(nums, <span class="number">0</span>, nums.<span class="property">length</span> - <span class="number">1</span>)</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 迭代</span></span><br><span class="line"><span class="keyword">var</span> sortedArrayToBST = <span class="keyword">function</span>(<span class="params">nums</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(nums.<span class="property">length</span>===<span class="number">0</span>) <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">let</span> root = <span class="keyword">new</span> <span class="title class_">TreeNode</span>(<span class="number">0</span>);       <span class="comment">// 初始根节点</span></span><br><span class="line">    <span class="keyword">let</span> nodeQue = [root];             <span class="comment">// 放遍历的节点,并初始化</span></span><br><span class="line">    <span class="keyword">let</span> leftQue = [<span class="number">0</span>];                <span class="comment">// 放左区间的下标,初始化</span></span><br><span class="line">    <span class="keyword">let</span> rightQue = [nums.<span class="property">length</span>-<span class="number">1</span>];   <span class="comment">// 放右区间的下标</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(nodeQue.<span class="property">length</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> curNode = nodeQue.<span class="title function_">pop</span>();</span><br><span class="line">        <span class="keyword">let</span> left = leftQue.<span class="title function_">pop</span>();</span><br><span class="line">        <span class="keyword">let</span> right = rightQue.<span class="title function_">pop</span>();</span><br><span class="line">        <span class="keyword">let</span> mid = left + <span class="title class_">Math</span>.<span class="title function_">floor</span>((right-left)/<span class="number">2</span>);</span><br><span class="line">        </span><br><span class="line">        curNode.<span class="property">val</span> = nums[mid];      <span class="comment">// 将下标为mid的元素给中间节点</span></span><br><span class="line">        </span><br><span class="line">    <span class="comment">//    处理左区间</span></span><br><span class="line">        <span class="keyword">if</span>(left &lt;= mid-<span class="number">1</span>) &#123;</span><br><span class="line">            curNode.<span class="property">left</span> = <span class="keyword">new</span> <span class="title class_">TreeNode</span>(<span class="number">0</span>);</span><br><span class="line">            nodeQue.<span class="title function_">push</span>(curNode.<span class="property">left</span>);</span><br><span class="line">            leftQue.<span class="title function_">push</span>(left);</span><br><span class="line">            rightQue.<span class="title function_">push</span>(mid-<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    <span class="comment">//     处理右区间</span></span><br><span class="line">        <span class="keyword">if</span>(right &gt;= mid+<span class="number">1</span>) &#123;</span><br><span class="line">            curNode.<span class="property">right</span> = <span class="keyword">new</span> <span class="title class_">TreeNode</span>(<span class="number">0</span>);</span><br><span class="line">            nodeQue.<span class="title function_">push</span>(curNode.<span class="property">right</span>);</span><br><span class="line">            leftQue.<span class="title function_">push</span>(mid+<span class="number">1</span>);</span><br><span class="line">            rightQue.<span class="title function_">push</span>(right);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> root;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="538-把二叉搜索树转换为累加树"><a href="#538-把二叉搜索树转换为累加树" class="headerlink" title="538.把二叉搜索树转换为累加树"></a>538.把二叉搜索树转换为累加树</h2><p>给出二叉 搜索 树的根节点，该树的节点值各不相同，请你将其转换为累加树（Greater Sum Tree），使每个节点 node 的新值等于原树中大于或等于 node.val 的值之和。</p><p>示例：输入：[4, 1,6, 0,2,5,7, null,null,null,3,null,null,null,8]<br>           输出：[30, 36,21, 36,35,26,15, null,null,null,33,null,null,null,8]</p><p>递归代码实现思路：</p><blockquote><p>反向中序遍历：<br>    在 BST 中，中序遍历（左-中-右）会得到一个递增序列。反向中序遍历（右-中-左）会得到一个递减序列。<br>    通过反向中序遍历，先处理较大的节点，然后逐渐处理较小的节点。<br>    对于每个节点，首先处理右子树，累加值加到当前节点，然后更新累加值为当前节点的值，最后处理左子树。</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 递归</span></span><br><span class="line"><span class="keyword">var</span> convertBST = <span class="keyword">function</span>(<span class="params">root</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> pre = <span class="number">0</span>; <span class="comment">// 存储当前节点处理后累加的值</span></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">ReverseInOrder</span> = (<span class="params">cur</span>) =&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span>(cur) &#123;</span><br><span class="line">            <span class="title class_">ReverseInOrder</span>(cur.<span class="property">right</span>);</span><br><span class="line">            cur.<span class="property">val</span> += pre;</span><br><span class="line">            pre = cur.<span class="property">val</span>;</span><br><span class="line">            <span class="title class_">ReverseInOrder</span>(cur.<span class="property">left</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title class_">ReverseInOrder</span>(root);</span><br><span class="line">    <span class="keyword">return</span> root;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 迭代</span></span><br><span class="line"><span class="keyword">var</span> convertBST = <span class="keyword">function</span> (<span class="params">root</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> pre = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">let</span> cur = root;</span><br><span class="line">    <span class="keyword">let</span> stack = [];</span><br><span class="line">    <span class="keyword">while</span> (cur !== <span class="literal">null</span> || stack.<span class="property">length</span> !== <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">while</span> (cur !== <span class="literal">null</span>) &#123;</span><br><span class="line">            stack.<span class="title function_">push</span>(cur);</span><br><span class="line">            cur = cur.<span class="property">right</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cur = stack.<span class="title function_">pop</span>();</span><br><span class="line">        cur.<span class="property">val</span> += pre;</span><br><span class="line">        pre = cur.<span class="property">val</span>;</span><br><span class="line">        cur = cur.<span class="property">left</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> root;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>hot100</title>
      <link href="/2024/08/02/algorithm-hot100/"/>
      <url>/2024/08/02/algorithm-hot100/</url>
      
        <content type="html"><![CDATA[<h1 id="hot100"><a href="#hot100" class="headerlink" title="hot100"></a>hot100</h1><h2 id="简单题"><a href="#简单题" class="headerlink" title="简单题"></a>简单题</h2><h3 id="160-相交链表"><a href="#160-相交链表" class="headerlink" title="160. 相交链表"></a><a href="https://leetcode.cn/problems/intersection-of-two-linked-lists/">160. 相交链表</a></h3><p>给你两个单链表的头节点 headA 和 headB ，请你找出并返回两个单链表相交的起始节点。如果两个链表不存在相交节点，返回 null 。</p><p>示例：输入：intersectVal = 8, listA = [4,1,8,4,5], listB = [5,6,1,8,4,5], skipA = 2, skipB = 3<br>           输出：Intersected at ‘8’</p><p>代码实现思路：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * function ListNode(val) &#123;</span></span><br><span class="line"><span class="comment"> *     this.val = val;</span></span><br><span class="line"><span class="comment"> *     this.next = null;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// 哈希表：先遍历一遍链表 A，用哈希表把每个节点都记录下来(注意要存节点引用而不是节点值)。</span></span><br><span class="line"><span class="comment">//        再去遍历链表 B，找到在哈希表中出现过的节点即为两个链表的交点。</span></span><br><span class="line"><span class="keyword">var</span> getIntersectionNode = <span class="keyword">function</span> (<span class="params">headA, headB</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!headA || !headB) <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">const</span> hashmap = <span class="keyword">new</span> <span class="title class_">Map</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (headA) &#123;</span><br><span class="line">        hashmap.<span class="title function_">set</span>(headA, <span class="number">1</span>);</span><br><span class="line">        headA = headA.<span class="property">next</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (headB) &#123;</span><br><span class="line">        <span class="keyword">if</span> (hashmap.<span class="title function_">has</span>(headB)) <span class="keyword">return</span> headB;</span><br><span class="line">        headB = headB.<span class="property">next</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 双指针法</span></span><br><span class="line"><span class="keyword">var</span> getIntersectionNode = <span class="keyword">function</span> (<span class="params">headA, headB</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!headA || !headB) <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (headA !== headB) &#123;</span><br><span class="line">        headA = headA === <span class="literal">null</span> ? headB : headA.<span class="property">next</span>;</span><br><span class="line">        headB = headB === <span class="literal">null</span> ? headA : headB.<span class="property">next</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> headA;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 暴力：对于链表 A 的每个节点，都去链表 B 中遍历一遍找看看有没有相同的节点。</span></span><br><span class="line"><span class="keyword">var</span> getIntersectionNode = <span class="keyword">function</span> (<span class="params">headA, headB</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!headA || !headB) <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">while</span> (headA) &#123;</span><br><span class="line">        <span class="keyword">while</span> (headB) &#123;</span><br><span class="line">            <span class="keyword">if</span> (pA === headB) <span class="keyword">return</span> headA;</span><br><span class="line">            headB = headB.<span class="property">next</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        headA = headA.<span class="property">next</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="206-反转链表"><a href="#206-反转链表" class="headerlink" title="206. 反转链表"></a><a href="https://leetcode.cn/problems/reverse-linked-list/">206. 反转链表</a></h3><p>给你单链表的头节点 head ，请你反转链表，并返回反转后的链表。</p><p>示例:  输入：head = [1,2,3,4,5]   输出：[5,4,3,2,1]<br>          输入：head = [1,2]            输出：[2,1]</p><ul><li><strong>双指针法</strong>：</li></ul><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408031905179.png" alt="photo"></p><blockquote><p>while 循环遍历链表当前节点 在反转指针前，先将当前节点的指针cur.next存储到 temp 中。</p><p>将当前节点 cur 的 next 指针指向 pre，</p><p>将 pre 更新为当前节点 cur（为下一个节点准备），然后将 cur 更新为 temp（继续遍历下一个节点)。</p><p>最后返回 pre。</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reverseList = <span class="keyword">function</span>(<span class="params">head</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(!head || !head.<span class="property">next</span>) <span class="keyword">return</span> head</span><br><span class="line">    <span class="keyword">let</span> pre = <span class="literal">null</span>, cur = head</span><br><span class="line">    <span class="keyword">while</span>(cur)&#123;</span><br><span class="line">        <span class="keyword">let</span> temp = <span class="literal">null</span> </span><br><span class="line">        temp = cur.<span class="property">next</span> <span class="comment">// 暂存当前指针cur.next</span></span><br><span class="line">        cur.<span class="property">next</span> = pre <span class="comment">// 反转链表：改变 cur-&gt;next 的指向</span></span><br><span class="line">        <span class="comment">// 更新pre和cur指针</span></span><br><span class="line">        pre = cur </span><br><span class="line">        cur = temp</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> pre</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ul><li><strong>递归法</strong>：从前往后反转</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">reverseList</span>(<span class="params">head</span>) &#123;  </span><br><span class="line">    <span class="comment">// 基础情况：如果链表为空或只有一个节点，则直接返回头节点  </span></span><br><span class="line">    <span class="keyword">if</span>(head === <span class="literal">null</span> || head.<span class="property">next</span> === <span class="literal">null</span>) <span class="keyword">return</span> head</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 递归反转剩余链表  </span></span><br><span class="line">    <span class="keyword">const</span> newHead = <span class="title function_">reverseList</span>(head.<span class="property">next</span>);  </span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 将当前节点的下一个节点指向当前节点  </span></span><br><span class="line">    head.<span class="property">next</span>.<span class="property">next</span> = head;  </span><br><span class="line">    <span class="comment">// 断开链表，当前节点的下一个指向 null  </span></span><br><span class="line">    head.<span class="property">next</span> = <span class="literal">null</span>;  </span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> newHead;  </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h3 id="234-回文链表"><a href="#234-回文链表" class="headerlink" title="234. 回文链表"></a><a href="https://leetcode.cn/problems/palindrome-linked-list/">234. 回文链表</a></h3><p>给你一个单链表的头节点 head ，请你判断该链表是否为回文链表。如果是，返回 true ；否则，返回 false 。</p><p>示例：输入：head = [1,2,2,1]  输出：true<br>           输入：head = [1,2]        输出：false</p><p>代码实现思路：<strong>双指针法</strong>：O(n)+O(1)<br> <img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408031905185.png" alt="photo"></p><ol><li><p>找到链表的中间节点，从而把链表分成前半段和后半段。</p></li><li><p>反转后半段链表</p></li><li><p>把前半段链表的值和后半段链表的值进行比较，保持一致说明是回文链表。否则，就不是。</p></li></ol><blockquote><p>先通过快慢指针遍历，当 fast &amp;&amp; fast.next 为 false 时，说明遍历完成：</p><p>此时若是奇数 ，slow 在链表中间；若是偶数，slow 在中间 n/2 + 1 那里，即如果是 6 个，那么在第四个；</p><p>在上面的过程中，slow 指针同时配合 q 和 newHead 指针进行反转链表的记录；<br>遍历完成后，通过判断 fast 是否为空，来判断是不是奇数，如果 fast 还在链表内，说明是奇数</p><p>如果偶数，不用做动作，因为以 slow 和 newHead 分别为头部的两个准备要比较的链表个数相同<br>如果奇数， slow 即后半部分链表会比 newHead 即前半部分链表多一个，所以往后移动一位 slow = slow.next</p><p>然后同时遍历两个链表看看是否相同即可，不同直接返回，说明不是回文链表</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list. </span></span><br><span class="line"><span class="comment"> * function ListNode(val, next) &#123; </span></span><br><span class="line"><span class="comment"> *     this.val = (val===undefined ? 0 : val) </span></span><br><span class="line"><span class="comment"> *     this.next = (next===undefined ? null : next) </span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span> </span><br><span class="line"><span class="keyword">var</span> isPalindrome = <span class="keyword">function</span>(<span class="params">head</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> q, newHead; <span class="comment">// 记录翻转后的前半段链表</span></span><br><span class="line">    <span class="keyword">let</span> slow = head, fast = head; <span class="comment">// 快慢指针对原链表进行遍历</span></span><br><span class="line">    <span class="keyword">while</span>(fast &amp;&amp; fast.<span class="property">next</span>) &#123;</span><br><span class="line">        q = slow; <span class="comment">// 准备开始下一次翻转，先记录准备要翻转的结点</span></span><br><span class="line">        slow = slow.<span class="property">next</span>; <span class="comment">// 往后指</span></span><br><span class="line">        fast = fast.<span class="property">next</span>.<span class="property">next</span>;</span><br><span class="line">        q.<span class="property">next</span> = newHead; <span class="comment">// 要翻转的新结点记录过来</span></span><br><span class="line">        newHead = q; <span class="comment">// 赋值</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 如果上个循环 fast.next.next 还在链表内，说明是奇数</span></span><br><span class="line">    <span class="comment">// 奇数的话，前半部分 比 后半部分少一个，所以后半部分的 slow 指针要先往后指一位，才能开始下面的遍历</span></span><br><span class="line">    <span class="keyword">if</span>(fast) slow = slow.<span class="property">next</span>; </span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(slow &amp;&amp; newHead) &#123;</span><br><span class="line">        <span class="comment">// 不同直接返回</span></span><br><span class="line">        <span class="keyword">if</span>(slow.<span class="property">val</span> !== newHead.<span class="property">val</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        slow = slow.<span class="property">next</span>;</span><br><span class="line">        newHead = newHead.<span class="property">next</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 遍历字符串解决：O(n)+O(n)</span></span><br><span class="line"><span class="comment">// 遍历记录链表中所有结点值，记录成一个字符串即可，然后通过字符串翻转后是否等于原字符串即可</span></span><br><span class="line"><span class="keyword">var</span> isPalindrome = <span class="keyword">function</span>(<span class="params">head</span>) &#123; </span><br><span class="line">    <span class="keyword">if</span>(!head) <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    <span class="keyword">let</span> s = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">while</span>(head) &#123; </span><br><span class="line">        s += head.<span class="property">val</span>; </span><br><span class="line">        head = head.<span class="property">next</span>; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(s.<span class="title function_">split</span>(<span class="string">&#x27;&#x27;</span>).<span class="title function_">reverse</span>().<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span>) === s) <span class="keyword">return</span> <span class="literal">true</span>; </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">false</span>; </span><br><span class="line">&#125;; </span><br></pre></td></tr></table></figure><h3 id="226-翻转二叉树"><a href="#226-翻转二叉树" class="headerlink" title="226. 翻转二叉树"></a><a href="https://leetcode.cn/problems/invert-binary-tree/">226. 翻转二叉树</a></h3><p>给你一棵二叉树的根节点 <code>root</code> ，翻转这棵二叉树，并返回其根节点。</p><p>示例：输入：root = [4, 2,7, 1,3,6,9]，输出：[4, 7,2, 9,6,3,1]<br>           输入：root = [2, 1,3] ,               输出：[2, 3,1]</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * function TreeNode(val, left, right) &#123;</span></span><br><span class="line"><span class="comment"> *     this.val = (val===undefined ? 0 : val)</span></span><br><span class="line"><span class="comment"> *     this.left = (left===undefined ? null : left)</span></span><br><span class="line"><span class="comment"> *     this.right = (right===undefined ? null : right)</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// 使用递归版本的前序遍历</span></span><br><span class="line"><span class="keyword">var</span> invertTree = <span class="keyword">function</span>(<span class="params">root</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!root) <span class="keyword">return</span> <span class="literal">null</span>;<span class="comment">// 终止条件</span></span><br><span class="line">    <span class="comment">// 交换左右节点</span></span><br><span class="line">    <span class="keyword">const</span> rightNode = root.<span class="property">right</span>; <span class="comment">//先保留当前节点的右子树。</span></span><br><span class="line">    root.<span class="property">right</span> = <span class="title function_">invertTree</span>(root.<span class="property">left</span>);</span><br><span class="line">    root.<span class="property">left</span> = <span class="title function_">invertTree</span>(rightNode);</span><br><span class="line">    <span class="keyword">return</span> root;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//使用层序遍历</span></span><br><span class="line"><span class="keyword">var</span> invertTree = <span class="keyword">function</span>(<span class="params">root</span>) &#123;</span><br><span class="line">    <span class="comment">//先定义节点交换函数</span></span><br><span class="line">    <span class="keyword">const</span> invertNode = <span class="keyword">function</span>(<span class="params">root, left, right</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> temp = left;</span><br><span class="line">        left = right;</span><br><span class="line">        right = temp;</span><br><span class="line">        root.<span class="property">left</span> = left;</span><br><span class="line">        root.<span class="property">right</span> = right;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">let</span> queue = [];</span><br><span class="line">    <span class="keyword">if</span>(root === <span class="literal">null</span>) <span class="keyword">return</span> root;</span><br><span class="line">    queue.<span class="title function_">push</span>(root);</span><br><span class="line">    <span class="keyword">while</span>(queue.<span class="property">length</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> length = queue.<span class="property">length</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>;i &lt; length; i++) &#123;</span><br><span class="line">            <span class="keyword">let</span> node = queue.<span class="title function_">shift</span>();</span><br><span class="line">            <span class="comment">//节点处理逻辑</span></span><br><span class="line">            <span class="title function_">invertNode</span>(node, node.<span class="property">left</span>, node.<span class="property">right</span>);</span><br><span class="line">            node.<span class="property">left</span> &amp;&amp; queue.<span class="title function_">push</span>(node.<span class="property">left</span>);</span><br><span class="line">            node.<span class="property">right</span> &amp;&amp; queue.<span class="title function_">push</span>(node.<span class="property">right</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> root;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="169-多数元素"><a href="#169-多数元素" class="headerlink" title="169. 多数元素"></a><a href="https://leetcode.cn/problems/majority-element/">169. 多数元素</a></h3><p>给定一个大小为 <code>n</code> 的数组 <code>nums</code> ，返回其中的多数元素。多数元素是指在数组中出现次数 <strong>大于</strong> <code>⌊ n/2 ⌋</code> 的元素。</p><p>示例：输入：nums = [3,2,3]，             输出：3<br>           输入：nums = [2,2,1,1,1,2,2],    输出：2</p><p><strong>进阶：</strong>尝试设计时间复杂度为 O(n)、空间复杂度为 O(1) 的算法解决此问题。</p><p><strong>代码实现思路</strong>：摩尔投票法：O(n)+O(1)</p><blockquote><p>维护一个候选众数 candidate 和它出现的次教 count，初始时 candidate 可以为任意值，count 为 0；</p><p>遍历数组 nums 中的所有元素，对于每个元素x，在判断 x之前，如果 count 的值为 0，先将 x 的值赋予<br>candidate，随后判断x：<br>    i. 如果x与 candidate 相等，那么计数器 count 的值增加 1；<br>    ii. 如果x与 candidate 不等，那么计数器 count 的值减少 1，当减少为 0 时，将下一个数赋予 candidate；</p><p>在遍历完成后，candidate 即为整个数组的众数；</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number[]</span>&#125; <span class="variable">nums</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">number</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// 摩尔投票法</span></span><br><span class="line"><span class="keyword">var</span> majorityElement = <span class="keyword">function</span>(<span class="params">nums</span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> count = <span class="number">1</span></span><br><span class="line">  <span class="keyword">let</span> majority = nums[<span class="number">0</span>]</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">1</span>; i &lt; nums.<span class="property">length</span>; i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(count === <span class="number">0</span>) majority = nums[i]</span><br><span class="line">    <span class="keyword">if</span>(nums[i] === majority) count++</span><br><span class="line">    <span class="keyword">else</span> count--</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> majority</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用哈希Map：O(n)+O(n)  用哈希表存储数组元素和对应的个数，如果数字出现的个数大于n/2则返回这个数</span></span><br><span class="line"><span class="keyword">var</span> majorityElement = <span class="keyword">function</span>(<span class="params">nums</span>) &#123;</span><br><span class="line"><span class="keyword">let</span> hashMap = <span class="keyword">new</span> <span class="title class_">Map</span>()</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i <span class="keyword">of</span> nums)&#123;</span><br><span class="line">        hashMap.<span class="title function_">set</span>(i, (hashMap.<span class="title function_">get</span>(i) || <span class="number">0</span>) + <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">if</span>(hashMap.<span class="title function_">get</span>(i) &gt; nums.<span class="property">length</span>/<span class="number">2</span>) <span class="keyword">return</span> i</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 排序数组：O(nlogn)+O(logn) 如果有一个数宇出现的频率大于 n/2，则在数组 nums.length/2的位置就是这个数</span></span><br><span class="line"><span class="keyword">var</span> majorityElement = <span class="keyword">function</span>(<span class="params">nums</span>) &#123;</span><br><span class="line">nums.<span class="title function_">sort</span>(<span class="function">(<span class="params">a, b</span>) =&gt;</span> a - b)</span><br><span class="line">  <span class="keyword">return</span> nums[<span class="title class_">Math</span>.<span class="title function_">floor</span>(nums.<span class="property">length</span>/<span class="number">2</span>)]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="141-环形链表"><a href="#141-环形链表" class="headerlink" title="141. 环形链表"></a><a href="https://leetcode.cn/problems/linked-list-cycle/">141. 环形链表</a></h3><p>给你一个链表的头节点 <code>head</code> ，判断链表中是否有环。</p><p>如果链表中有某个节点，可以通过连续跟踪 <code>next</code> 指针再次到达，则链表中存在环。 为了表示给定链表中的环，评测系统内部使用整数 <code>pos</code> 来表示链表尾连接到链表中的位置（索引从 0 开始）。<strong>注意：<code>pos</code> 不作为参数进行传递</strong> 。仅仅是为了标识链表的实际情况。</p><p><em>如果链表中存在环</em> ，则返回 <code>true</code> 。 否则，返回 <code>false</code> 。</p><p>示例：输入：head = [3,2,0,-4], pos = 1，      输出：true<br>           输入：head = [1,2], pos = 0,                输出：false</p><p><strong>进阶：</strong>你能用 <code>O(1)</code>（即，常量）内存解决此问题吗？</p><p><strong>代码实现思路</strong>：</p><blockquote><p>双指针<br>使用两个不同速度的快、慢指针遍历链表，慢指针每次移动一步，快指针每次移动两步，如果链表中存在环，最终快慢指针会指向同一个节点，遍历结束，返回true；如链表中没有环，最终快指针会先到达链尾，此时，返回false。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> hasCycle = <span class="keyword">function</span>(<span class="params">head</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span>(head === <span class="literal">null</span> || head.<span class="property">next</span> === <span class="literal">null</span>) <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">  <span class="keyword">let</span> slow = head, fast = head</span><br><span class="line">  <span class="keyword">while</span>(fast &amp;&amp; fast.<span class="property">next</span>)&#123;</span><br><span class="line">    slow = slow.<span class="property">next</span></span><br><span class="line">    fast = fast.<span class="property">next</span>.<span class="property">next</span></span><br><span class="line">    <span class="keyword">if</span>(slow === fast) <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="136-只出现一次的数字"><a href="#136-只出现一次的数字" class="headerlink" title="136. 只出现一次的数字"></a><a href="https://leetcode.cn/problems/single-number/">136. 只出现一次的数字</a></h3><p>给你一个 <strong>非空</strong> 整数数组 <code>nums</code> ，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。</p><p>示例：输入：nums = [2,2,1]，           输出：1<br>           输入：nums = [4,1,2,1,2],        输出：4</p><p><strong>代码实现思路</strong>：</p><blockquote><p>异或运算的特点是：相同的数异或结果为0，而任意数与0异或结果为其本身。</p><p>当对整个数组进行异或操作时，成对的数字会相互抵消，最终只剩下那个只出现一次的数字。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> singleNumber = <span class="keyword">function</span>(<span class="params">nums</span>) &#123;</span><br><span class="line">    <span class="comment">// 异或运算：相同的数异或结果为0，任何数与0异或结果为其本身</span></span><br><span class="line">    <span class="keyword">let</span> result = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> n <span class="keyword">of</span> nums)&#123;</span><br><span class="line">        result ^= n</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="461-汉明距离"><a href="#461-汉明距离" class="headerlink" title="461. 汉明距离"></a><a href="https://leetcode.cn/problems/hamming-distance/">461. 汉明距离</a></h3><p>两个整数之间的 <a href="https://baike.baidu.com/item/汉明距离">汉明距离</a> 指的是这两个数字对应二进制位不同的位置的数目。给你两个整数 <code>x</code> 和 <code>y</code>，计算并返回它们之间的汉明距离。</p><p>示例：输入：x = 1, y = 4，       输出：2            001   100<br>           输入：x = 3, y = 1,          输出：1           011    001</p><p><strong>代码实现思路</strong>：</p><blockquote><p>异或运算的特点是：如果两个对应位相同，结果为0；如果不同，结果为1。</p><p>因此，将 <code>x</code> 和 <code>y</code> 进行异或运算（^），<code>xor</code> 的每一位为1的地方恰好是 <code>x</code> 和 <code>y</code> 在该位上不同的地方。循环<code>xor</code> 不为0的情况，使用位与运算符（&amp;）检查 <code>xor</code> 的最低位是否为1。如果是，则汉明距离加1。并将 <code>xor</code> 右移一位，准备检查下一个二进制位。返回最终的汉明距离。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> hammingDistance = <span class="keyword">function</span>(<span class="params">x, y</span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> xor = x ^ y;  <span class="comment">// 计算 x 和 y 的异或值 </span></span><br><span class="line">  <span class="keyword">let</span> distance = <span class="number">0</span>;  <span class="comment">// 统计异或结果中 1 的数量  </span></span><br><span class="line">  <span class="keyword">while</span> (xor &gt; <span class="number">0</span>) &#123;  </span><br><span class="line">    distance += xor &amp; <span class="number">1</span>;  <span class="comment">// 检查最低位是否为 1  </span></span><br><span class="line">    xor &gt;&gt;= <span class="number">1</span>;            <span class="comment">// 右移一位  </span></span><br><span class="line">  &#125;  </span><br><span class="line">  <span class="keyword">return</span> distance;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">hammingDistance</span>(<span class="params">x, y</span>) &#123;  </span><br><span class="line">  <span class="keyword">let</span> distance = <span class="number">0</span>; </span><br><span class="line">  <span class="keyword">while</span> (x &gt; <span class="number">0</span> || y &gt; <span class="number">0</span>) &#123;  <span class="comment">// 逐位比较，直到两个数都为0  </span></span><br><span class="line">     <span class="comment">// 比较最低位的二进制位  </span></span><br><span class="line">     <span class="keyword">const</span> bitX = x &amp; <span class="number">1</span>; <span class="comment">// 取出 x 的最低位  </span></span><br><span class="line">     <span class="keyword">const</span> bitY = y &amp; <span class="number">1</span>; <span class="comment">// 取出 y 的最低位  </span></span><br><span class="line">        </span><br><span class="line">     <span class="comment">// 如果二者不同，汉明距离加一  </span></span><br><span class="line">     <span class="keyword">if</span> (bitX !== bitY) distance++;  </span><br><span class="line">        </span><br><span class="line">     <span class="comment">// 右移一位，继续比较下一个二进制位  </span></span><br><span class="line">     x &gt;&gt;= <span class="number">1</span>;  </span><br><span class="line">     y &gt;&gt;= <span class="number">1</span>;  </span><br><span class="line">  &#125; </span><br><span class="line">  <span class="keyword">return</span> distance;  </span><br><span class="line">&#125;   </span><br></pre></td></tr></table></figure><h3 id="448-找到所有数组中消失的数字"><a href="#448-找到所有数组中消失的数字" class="headerlink" title="448. 找到所有数组中消失的数字"></a><a href="https://leetcode.cn/problems/find-all-numbers-disappeared-in-an-array/">448. 找到所有数组中消失的数字</a></h3><p>给你一个含 <code>n</code> 个整数的数组 <code>nums</code> ，其中 <code>nums[i]</code> 在区间 <code>[1, n]</code> 内。请你找出所有在 <code>[1, n]</code> 范围内但没有出现在 <code>nums</code> 中的数字，并以数组的形式返回结果。</p><p>示例：输入：nums = [4,3,2,7,8,2,3,1]，       输出：[5,6]<br>           输入：nums = [1,1],                            输出：[2]</p><p><strong>进阶：</strong>在不使用额外空间且时间复杂度为 <code>O(n)</code> 的情况下解决这个问题。可以假定返回的数组不算在额外空间内。</p><p><strong>代码实现思路</strong>：</p><p>利用数组本身来标记出现的数字。具体思路是将每个数字放到它应该在的位置上（即 <code>nums[i]</code> 应该放在 <code>nums[nums[i] - 1]</code> 的位置）。这样，我们可以通过遍历数组来找出缺失的数字。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> findDisappearedNumbers = <span class="keyword">function</span>(<span class="params">nums</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> n = nums.<span class="property">length</span>;  </span><br><span class="line"></span><br><span class="line">  <span class="comment">// 将每个数字放到它应该在的位置上  </span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;  </span><br><span class="line">    <span class="keyword">while</span> (nums[i] !== i + <span class="number">1</span>) &#123;  </span><br><span class="line">      <span class="keyword">const</span> correctIndex = nums[i] - <span class="number">1</span>;  </span><br><span class="line">      <span class="comment">// 交换 nums[i] 和 nums[correctIndex]  </span></span><br><span class="line">      [nums[i], nums[correctIndex]] = [nums[correctIndex], nums[i]];  </span><br><span class="line">    &#125;  </span><br><span class="line">  &#125;  </span><br><span class="line"></span><br><span class="line">  <span class="comment">// 找出缺失的数字  </span></span><br><span class="line">  <span class="keyword">const</span> missingNumbers = [];  </span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;  </span><br><span class="line">    <span class="keyword">if</span> (nums[i] !== i + <span class="number">1</span>) &#123;  </span><br><span class="line">      missingNumbers.<span class="title function_">push</span>(i + <span class="number">1</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line">  &#125;  </span><br><span class="line">  <span class="keyword">return</span> missingNumbers; </span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="中等题"><a href="#中等题" class="headerlink" title="中等题"></a>中等题</h2><h3 id=""><a href="#" class="headerlink" title=" "></a> </h3>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>笔试</title>
      <link href="/2024/08/01/interview-%E9%9D%A2%E8%AF%95/"/>
      <url>/2024/08/01/interview-%E9%9D%A2%E8%AF%95/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 面试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>黑马人力资源项目</title>
      <link href="/2024/08/01/vue-Vue2%E4%BA%BA%E5%8A%9B%E8%B5%84%E6%BA%90%E9%A1%B9%E7%9B%AE%E7%AC%94%E8%AE%B0/"/>
      <url>/2024/08/01/vue-Vue2%E4%BA%BA%E5%8A%9B%E8%B5%84%E6%BA%90%E9%A1%B9%E7%9B%AE%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="一、项目介绍及初始化"><a href="#一、项目介绍及初始化" class="headerlink" title="一、项目介绍及初始化"></a>一、项目介绍及初始化</h1><h2 id="1-项目架构"><a href="#1-项目架构" class="headerlink" title="1.项目架构"></a>1.项目架构</h2><h3 id="1-1-项目架构和解决方案"><a href="#1-1-项目架构和解决方案" class="headerlink" title="1.1 项目架构和解决方案"></a>1.1 项目架构和解决方案</h3><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022005490.png" alt="image.png"></p><h3 id="1-2-课程安排"><a href="#1-2-课程安排" class="headerlink" title="1.2 课程安排"></a>1.2 课程安排</h3><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022005017.png" alt="image.png"></p><h3 id="1-3-课程具备能力"><a href="#1-3-课程具备能力" class="headerlink" title="1.3 课程具备能力"></a>1.3 课程具备能力</h3><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022005317.png" alt="image.png"></p><h2 id="2-基础代码拉取"><a href="#2-基础代码拉取" class="headerlink" title="2. 基础代码拉取"></a>2. 基础代码拉取</h2><ul><li><p>拉取命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span>  https://github.com/PanJiaChen/vue-admin-template.git</span><br></pre></td></tr></table></figure></li><li><p>升级core-js版本到<strong>3.25.5</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm i core-js@3.25.5 <span class="comment"># npm</span></span><br></pre></td></tr></table></figure></li><li><p>安装完整依赖</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm i <span class="comment"># npm</span></span><br></pre></td></tr></table></figure></li><li><p>启动命令在package.json中查看</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm run dev</span><br></pre></td></tr></table></figure></li><li><p>需要检查VsCode本身的插件ESLint 和 Vutur</p></li></ul><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022005304.png" alt="image.png"></p><h2 id="3-项目目录和入口文件介绍"><a href="#3-项目目录和入口文件介绍" class="headerlink" title="3.项目目录和入口文件介绍"></a>3.项目目录和入口文件介绍</h2><ul><li><p>项目目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">├── src                        <span class="comment"># 源代码目录</span></span><br><span class="line">│   ├── api                    <span class="comment"># 所有请求</span></span><br><span class="line">│   ├── assets                 <span class="comment"># 主题 字体等静态资源</span></span><br><span class="line">│   ├── components             <span class="comment"># 全局公用组件</span></span><br><span class="line">│   ├── icons                  <span class="comment"># 项目所有 svg icons</span></span><br><span class="line">│   ├── layout                 <span class="comment"># 全局 layout</span></span><br><span class="line">│   ├── router                 <span class="comment"># 路由</span></span><br><span class="line">│   ├── store                  <span class="comment"># 全局 store管理</span></span><br><span class="line">│   ├── styles                 <span class="comment"># 全局样式</span></span><br><span class="line">│   ├── utils                  <span class="comment"># 全局公用方法</span></span><br><span class="line">│   ├── views                  <span class="comment"># views 所有页面</span></span><br><span class="line">│   ├── App.vue                <span class="comment"># 入口页面</span></span><br><span class="line">│   ├── main.js                <span class="comment"># 入口文件 加载组件 初始化等</span></span><br><span class="line">│   └── permission.js          <span class="comment"># 权限管理</span></span><br><span class="line">│   └── settings.js            <span class="comment"># 配置文件</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>入口文件</p></li></ul><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022006806.png" alt="image.png"></p><h2 id="4-App-vue根组件解析"><a href="#4-App-vue根组件解析" class="headerlink" title="4.App.vue根组件解析"></a>4.App.vue根组件解析</h2><ul><li>App.vue组件</li></ul><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022006600.png" alt="image.png"></p><ul><li>layout布局</li></ul><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022006071.png" alt="image.png"></p><h2 id="5-基础设置settings-js和导航守卫permission-js"><a href="#5-基础设置settings-js和导航守卫permission-js" class="headerlink" title="5.基础设置settings.js和导航守卫permission.js"></a>5.基础设置settings.js和导航守卫permission.js</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022006253.png" alt="image.png"></p><blockquote><p>settings.js导出网站基础配置，包括：网站标题、固定header、显示logo<br>permission.js(权限)，主要负责路由导航守卫</p></blockquote><h2 id="6-Vuex的结构"><a href="#6-Vuex的结构" class="headerlink" title="6.Vuex的结构"></a>6.Vuex的结构</h2><h4 id="模板中的结构"><a href="#模板中的结构" class="headerlink" title="模板中的结构"></a>模板中的结构</h4><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022006219.png" alt="image.png"></p><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022006517.png" alt="image.png"></p><p>注意：人资资源项目主要针对<strong>用户模块user </strong>进行改造和重写</p><h4 id="Vuex的设计思想"><a href="#Vuex的设计思想" class="headerlink" title="Vuex的设计思想"></a>Vuex的设计思想</h4><ul><li>1.页面交互状态（折叠侧边栏-固定头部）</li></ul><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022006764.png" alt="image.png"></p><ul><li>2.使用全局状态Vuex根据功能拆分成不同的模块（modules）</li></ul><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022006576.png" alt="image.png"> </p><ul><li>3.进行状态管理通过getters建立对于模块中属性的快捷访问</li></ul><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022006497.png" alt="image.png"></p><h2 id="7-使用模板中的Icon图标"><a href="#7-使用模板中的Icon图标" class="headerlink" title="7.使用模板中的Icon图标"></a>7.使用模板中的Icon图标</h2><ul><li>src/icons/svg目录下的图标都可以使用</li></ul><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022006284.png" alt="image.png"> </p><ul><li>图标文件名直接设置为svg-icon组件的iconClass属性</li></ul><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022007147.png" alt="image.png"></p><h2 id="8-扩展—解析Icon图标的实现思路"><a href="#8-扩展—解析Icon图标的实现思路" class="headerlink" title="8.扩展—解析Icon图标的实现思路"></a>8.扩展—解析Icon图标的实现思路</h2><ul><li>引入目录所有的svg</li></ul><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022007223.png" alt="image.png"></p><ul><li>全局注册svg-icon组件</li></ul><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022007332.png" alt="image.png"></p><ul><li>loader插件打包svg</li></ul><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022007842.png" alt="image.png"> </p><ul><li>svg-icon引用svg的链接</li></ul><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022007387.png" alt="image.png"></p><ul><li>知识扩展</li></ul><p>1.了解：require.context(路径，是否扫描子目录， 正则匹配) 可以引入某个目录下的内容<br>2.了解：svg-sprite-loader打包了所有svg到一个svg标签上，将svg名称作为symbol标签的id属性<br>3.了解：svg-icon使用iconClass属性引用了symbol的id</p><h2 id="9-导入样式资源并使用git管理"><a href="#9-导入样式资源并使用git管理" class="headerlink" title="9.导入样式资源并使用git管理"></a>9.导入样式资源并使用git管理</h2><ul><li>将教学资源中的初始化<strong>图片-样式-svg </strong>拷贝到src目录下</li></ul><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022007308.png" alt="image.png"></p><blockquote><p>因为项目是从github上拉取下来的，所以git记录了之前模版的信息，所以删除需要建立git</p></blockquote><ul><li>删除原有的.git文件</li><li><p>初始化仓库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git init <span class="comment"># 初始化仓库</span></span><br></pre></td></tr></table></figure></li><li><p>添加到暂存区</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git add . <span class="comment"># 添加到暂存区</span></span><br></pre></td></tr></table></figure></li><li><p>提交本地仓库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git commit -m <span class="string">&quot;初始化人力资源项目&quot;</span> <span class="comment"># 提交本地仓库</span></span><br></pre></td></tr></table></figure><blockquote><p>接下来，同学们需要在gitee上新建一个自己的远程仓库，然后将本地的仓库推送到远程仓库托管</p></blockquote></li><li><p>本地仓库配置远程仓库地址</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote add origin &lt;你的远程仓库地址&gt;  <span class="comment"># 本地仓库配置远程仓库地址</span></span><br></pre></td></tr></table></figure></li><li><p>推送到远程仓库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push -u origin master <span class="comment"># 推送到远程仓库</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="二、登录模块"><a href="#二、登录模块" class="headerlink" title="二、登录模块"></a>二、登录模块</h1><h2 id="1-登录页的结构和表单"><a href="#1-登录页的结构和表单" class="headerlink" title="1.登录页的结构和表单"></a>1.登录页的结构和表单</h2><blockquote><p>接下来需要实现登录页的表单结构和表单内容</p></blockquote><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022007413.png" alt="image.png"></p><ul><li>拷贝登录页的基本结构布局-代码位置(<strong>src/views/login/index.vue)</strong><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;login-container&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;logo&quot; /&gt;</span><br><span class="line">    &lt;div class=&quot;form&quot;&gt;</span><br><span class="line">      &lt;h1&gt;登录&lt;/h1&gt;</span><br><span class="line">      &lt;el-card shadow=&quot;never&quot; class=&quot;login-card&quot;&gt;</span><br><span class="line">        &lt;!--登录表单--&gt;</span><br><span class="line">      &lt;/el-card&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name : &quot;Login&quot;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style lang=&quot;scss&quot;&gt;</span><br><span class="line">.login-container &#123;</span><br><span class="line">  display: flex;</span><br><span class="line">  align-items: stretch;</span><br><span class="line">  height: 100vh;</span><br><span class="line">  .logo &#123;</span><br><span class="line">    flex: 3;</span><br><span class="line">    background: rgba(38, 72, 176) url(../../assets/common/login_back.png)</span><br><span class="line">      no-repeat center / cover;</span><br><span class="line">    border-top-right-radius: 60px;</span><br><span class="line">    display: flex;</span><br><span class="line">    flex-direction: column;</span><br><span class="line">    align-items: flex-end;</span><br><span class="line">    justify-content: center;</span><br><span class="line">    padding: 0 100px;</span><br><span class="line">    .icon &#123;</span><br><span class="line">      background: url(../../assets/common/logo.png) no-repeat 70px center /</span><br><span class="line">        contain;</span><br><span class="line">      width: 300px;</span><br><span class="line">      height: 50px;</span><br><span class="line">      margin-bottom: 50px;</span><br><span class="line">    &#125;</span><br><span class="line">    p &#123;</span><br><span class="line">      color: #fff;</span><br><span class="line">      font-size: 18px;</span><br><span class="line">      margin-top: 20px;</span><br><span class="line">      width: 300px;</span><br><span class="line">      text-align: center;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  .form &#123;</span><br><span class="line">    flex: 2;</span><br><span class="line">    display: flex;</span><br><span class="line">    flex-direction: column;</span><br><span class="line">    justify-content: center;</span><br><span class="line">    padding-left: 176px;</span><br><span class="line">    .el-card &#123;</span><br><span class="line">      border: none;</span><br><span class="line">      padding: 0;</span><br><span class="line">    &#125;</span><br><span class="line">    h1 &#123;</span><br><span class="line">      padding-left: 20px;</span><br><span class="line">      font-size: 24px;</span><br><span class="line">    &#125;</span><br><span class="line">    .el-input &#123;</span><br><span class="line">      width: 350px;</span><br><span class="line">      height: 44px;</span><br><span class="line">      .el-input__inner &#123;</span><br><span class="line">        background: #f4f5fb;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    .el-checkbox &#123;</span><br><span class="line">      color:#606266;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>实现登录表单的结构</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-card</span> <span class="attr">shadow</span>=<span class="string">&quot;never&quot;</span> <span class="attr">class</span>=<span class="string">&quot;login-card&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--登录表单--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- el-form &gt; el-form-item &gt; el-input --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-form</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入手机号&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入密码&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-checkbox</span>&gt;</span></span><br><span class="line">          用户平台使用协议</span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">style</span>=<span class="string">&quot;width:350px&quot;</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>提交代码</p></li></ul><h2 id="2-登录表单校验-实现"><a href="#2-登录表单校验-实现" class="headerlink" title="2.登录表单校验-实现"></a>2.登录表单校验-实现</h2><ol><li><p>定义数据和校验规则</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;Login&#x27;</span></span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;Login&#x27;</span>,</span><br><span class="line">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">loginForm</span>: &#123;</span><br><span class="line">        <span class="attr">mobile</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        <span class="attr">password</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        <span class="attr">isAgree</span>: <span class="literal">false</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">loginRules</span>: &#123;</span><br><span class="line">        <span class="attr">mobile</span>: [&#123;</span><br><span class="line">          <span class="attr">required</span>: <span class="literal">true</span>,</span><br><span class="line">          <span class="attr">message</span>: <span class="string">&#x27;请输入手机号&#x27;</span>,</span><br><span class="line">          <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span></span><br><span class="line">        &#125;, &#123;</span><br><span class="line">          <span class="attr">pattern</span>: <span class="regexp">/^1[3-9]\d&#123;9&#125;$/</span>,</span><br><span class="line">          <span class="attr">message</span>: <span class="string">&#x27;手机号格式不正确&#x27;</span>,</span><br><span class="line">          <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span></span><br><span class="line"></span><br><span class="line">        &#125;],</span><br><span class="line">        <span class="attr">password</span>: [&#123;</span><br><span class="line">          <span class="attr">required</span>: <span class="literal">true</span>,</span><br><span class="line">          <span class="attr">message</span>: <span class="string">&#x27;请输入密码&#x27;</span>,</span><br><span class="line">          <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span></span><br><span class="line">        &#125;, &#123;</span><br><span class="line">          <span class="attr">min</span>: <span class="number">6</span>,</span><br><span class="line">          <span class="attr">max</span>: <span class="number">16</span>,</span><br><span class="line">          <span class="attr">message</span>: <span class="string">&#x27;密码长度应该为6-16位之间&#x27;</span>,</span><br><span class="line">          <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span></span><br><span class="line"></span><br><span class="line">        &#125;],</span><br><span class="line">        <span class="comment">// required只能检查 null &quot;&quot; undefined</span></span><br><span class="line">        <span class="attr">isAgree</span>: [&#123;</span><br><span class="line">          <span class="attr">validator</span>: <span class="function">(<span class="params">rule, value, callback</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="comment">// rule规则</span></span><br><span class="line">            <span class="comment">// value检查的数据 true/false</span></span><br><span class="line">            <span class="comment">// callback 函数 执行这个函数</span></span><br><span class="line">            <span class="comment">// 成功执行callback 失败也执行callback(错误对象 new Error(错误信息))</span></span><br><span class="line">            value ? <span class="title function_">callback</span>() : <span class="title function_">callback</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;没有勾选用户平台协议&#x27;</span>))</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">methods</span>: &#123;</span><br><span class="line">    <span class="title function_">login</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">$refs</span>.<span class="property">form</span>.<span class="title function_">validate</span>(<span class="function">(<span class="params">isOK</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (isOK) &#123;</span><br><span class="line">          <span class="title function_">alert</span>(<span class="string">&#x27;校验通过&#x27;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p>绑定组件的对应属性</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"> &lt;el-form ref=&quot;form&quot; :model=&quot;loginForm&quot; :rules=&quot;loginRules&quot;&gt;</span><br><span class="line">      &lt;el-form-item prop=&quot;mobile&quot;&gt;</span><br><span class="line">            &lt;el-input v-model=&quot;loginForm.mobile&quot; placeholder=&quot;请输入手机号&quot; /&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line">      &lt;el-form-item prop=&quot;password&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;loginForm.password&quot; show-password placeholder=&quot;请输入密码&quot; /&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line">      &lt;el-form-item prop=&quot;isAgree&quot;&gt;</span><br><span class="line">          &lt;el-checkbox v-model=&quot;loginForm.isAgree&quot;&gt;</span><br><span class="line">              用户平台使用协议</span><br><span class="line">          &lt;/el-checkbox&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line">      &lt;el-form-item&gt;</span><br><span class="line">          &lt;el-button style=&quot;width:350px&quot; type=&quot;primary&quot; @click=&quot;login&quot;&gt;登录&lt;/el-button&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line">&lt;/el-form&gt;</span><br></pre></td></tr></table></figure></li></ol><h2 id="3-分析登录流程"><a href="#3-分析登录流程" class="headerlink" title="3. 分析登录流程"></a>3. 分析登录流程</h2><p><img src="https://cdn.nlark.com/yuque/0/2023/png/8435673/1677660537041-ce27cc25-b47f-44f0-8658-7c86a29d426a.png#clientId=u60b73d67-62d7-4&amp;from=paste&amp;height=459&amp;id=u6da3ee15&amp;name=image.png&amp;originHeight=918&amp;originWidth=1994&amp;originalType=binary&amp;ratio=2&amp;rotation=0&amp;showTitle=false&amp;size=110407&amp;status=done&amp;style=none&amp;taskId=uc92adc89-73eb-4124-aaac-39d1fc4ac34&amp;title=&amp;width=997" alt="image.png"></p><blockquote><p>传统思路都是登录校验通过之后，直接调用接口，获取token之后，跳转到主页。</p></blockquote><ul><li>vue-element-admin的登录思路：</li></ul><ol><li>登录表单校验通过</li><li>调用Vuex提供的登录的action</li><li>登录的Action中会调用接口</li><li>登录接口如果成功执行，会返回token</li><li>利用Vuex的特性，将token共享的到Vuex中，这样Vuex就统一管理了token,别的地方想要使用，直接通过Vuex就可以</li><li>登录接口会调用单独封装的请求模块(api)</li><li>请求模块中又会使用用到axios封装的请求工具</li><li>而请求工具又要考虑区分 开发环境和生产环境的问题</li><li>请求时还要考虑前后分离项目产生的跨域问题，要使用代理解决跨域</li></ol><h2 id="4-Vuex中用户模块的实现"><a href="#4-Vuex中用户模块的实现" class="headerlink" title="4. Vuex中用户模块的实现"></a>4. Vuex中用户模块的实现</h2><blockquote><p>登录流程中最核心的是用户模块，所以这部分我们单独拿出来进行重写。</p></blockquote><p>代码位置(<strong>src/store/modules/user.js</strong>)</p><ul><li>删除原有模板中用户模块中的内容</li><li>导出Vuex子模块-声明一个状态token</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> state = &#123;</span><br><span class="line">  <span class="attr">token</span>: <span class="literal">null</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> mutations = &#123;&#125;</span><br><span class="line"><span class="keyword">const</span> actions = &#123;&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">   <span class="attr">namespaced</span>: <span class="literal">true</span>,</span><br><span class="line">   state,</span><br><span class="line">   mutations,</span><br><span class="line">   actions</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>实现token的Vue数据持久化</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; getToken, setToken, removeToken &#125; <span class="keyword">from</span> <span class="string">&#x27;@/utils/auth&#x27;</span></span><br><span class="line"><span class="keyword">const</span> state = &#123;</span><br><span class="line">  <span class="attr">token</span>: <span class="title function_">getToken</span>(), <span class="comment">// 从缓存中读取初始值</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> mutations = &#123;</span><br><span class="line">  <span class="title function_">setToken</span>(<span class="params">state, token</span>) &#123;</span><br><span class="line">    state.<span class="property">token</span> = token</span><br><span class="line">    <span class="comment">// 同步到缓存</span></span><br><span class="line">    <span class="title function_">setToken</span>(token)</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">removeToken</span>(<span class="params">state</span>) &#123;</span><br><span class="line">    <span class="comment">// 删除Vuex的token</span></span><br><span class="line">    state.<span class="property">token</span> = <span class="literal">null</span></span><br><span class="line">    <span class="title function_">removeToken</span>()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">namespaced</span>: <span class="literal">true</span>, <span class="comment">// 开启命名空间</span></span><br><span class="line">  state,</span><br><span class="line">  mutations,</span><br><span class="line">  actions</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>实现登录的action方法</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> actions = &#123;</span><br><span class="line">  <span class="comment">// context上下文，传入参数</span></span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">login</span>(<span class="params">context, data</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(data)</span><br><span class="line">    <span class="comment">// todo: 调用登录接口</span></span><br><span class="line">    <span class="keyword">const</span> token = <span class="keyword">await</span> <span class="title function_">login</span>(data)</span><br><span class="line">    <span class="comment">// 返回一个token 123456</span></span><br><span class="line">    context.<span class="title function_">commit</span>(<span class="string">&#x27;setToken&#x27;</span>, token)</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>在登录组件中调用该action方法-代码位置(<strong>src/views/login/index.vue</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">methods</span>: &#123;</span><br><span class="line">    <span class="title function_">login</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">$refs</span>.<span class="property">form</span>.<span class="title function_">validate</span>(<span class="function">(<span class="params">isOK</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (isOK) &#123;</span><br><span class="line">          <span class="variable language_">this</span>.<span class="property">$store</span>.<span class="title function_">dispatch</span>(<span class="string">&quot;user/login&quot;</span>, <span class="variable language_">this</span>.<span class="property">loginForm</span>)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意： 因为user模块导出的时候<strong>namespaced为true</strong>，所以我们调用action的时候要加上模块名称如<strong>user/login</strong></p><h2 id="5-Vue-cli代理解决跨域"><a href="#5-Vue-cli代理解决跨域" class="headerlink" title="5.Vue-cli代理解决跨域"></a>5.Vue-cli代理解决跨域</h2><blockquote><p>上个小节，完成了Vuex用户模块的创建和持久化管理，现在已经调通了 <strong>登录页面- action，</strong>继续往下需要处理<br><strong>请求模块-axios封装-跨域-区分环境</strong></p></blockquote><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022008343.png" alt="image.png"></p><blockquote><p>我们要先把跨域问题解决才能考虑其他内容的开发</p></blockquote><ul><li>首先为什么会有跨域？</li></ul><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022008548.png" alt="image.png"></p><blockquote><p>在后端没有开启cors的情况下，浏览器的同源策略会直接限制后端返回的数据给到前端。这是因为我们目前所有的项目都是前后分离，前端一个服务， 后端一个服务，后端不开cors只能前端自己想办法。</p></blockquote><ul><li>代理是怎么解决跨域的？</li></ul><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022008178.png" alt="image.png"></p><blockquote><p>既然前端不能直接请求后端服务，那就搞个中间服务，中间服务刚好和我们的前端服务同源，前端和中间服务可以通信，而中间服务是node, node后台向后端发请求是不受同源策略影响的，因为<strong>同源策略只针对浏览器！！！</strong>， 这样就是代理，中间层的服务将前端的请求代理给了后端接口。</p></blockquote><ul><li>具体怎么做呢？</li></ul><blockquote><p>跨域有开发环境跨域和生产环境跨域，我们最后上线的时候要考虑生产环境跨域，目前只需要考虑开发环境。</p></blockquote><ul><li>配置文件可以直接配置代理 vue.config.js</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">devServer</span>: &#123;</span><br><span class="line">  <span class="attr">port</span>: port,</span><br><span class="line">  <span class="attr">open</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">overlay</span>: &#123;</span><br><span class="line">    <span class="attr">warnings</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">errors</span>: <span class="literal">true</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">proxy</span>: &#123;</span><br><span class="line">    <span class="string">&#x27;/api&#x27;</span>: &#123;</span><br><span class="line">      <span class="attr">target</span>: <span class="string">&#x27;https://heimahr.itheima.net&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// before: require(&#x27;./mock/mock-server.js&#x27;)</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>注意： 要去掉before这个选项，这个是mock数据，会影响到我们的请求，并且修改完成之后要重启服务。</p><h2 id="6-axios封装"><a href="#6-axios封装" class="headerlink" title="6.axios封装"></a>6.axios封装</h2><blockquote><p>完成了代理跨域，就可以考虑axios的封装了。</p></blockquote><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022008739.png" alt="image.png"></p><blockquote><p>axios封装主要封装做哪些呢？</p></blockquote><ul><li>基础地址，超时时间</li><li>请求拦截器-统一注入token</li><li>响应拦截器-解构数据-处理异常</li></ul><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022009181.png" alt="image.png"></p><ul><li>axios的基础功能</li></ul><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022009628.png" alt="image.png"></p><p>代码位置(src/utils/request.js)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span></span><br><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">&#x27;@/store&#x27;</span></span><br><span class="line"><span class="keyword">const</span> service = axios.<span class="title function_">create</span>(&#123;</span><br><span class="line">  <span class="attr">baseURL</span>: <span class="string">&#x27;/api&#x27;</span>,</span><br><span class="line">  <span class="attr">timeout</span>: <span class="number">10000</span>,</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">service.<span class="property">interceptors</span>.<span class="property">request</span>.<span class="title function_">use</span>(<span class="function">(<span class="params">config</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 注入token</span></span><br><span class="line"><span class="comment">//  this.$store.getters</span></span><br><span class="line">  <span class="comment">// store.getters.token =&gt; 请求头里面</span></span><br><span class="line">  <span class="keyword">if</span> (store.<span class="property">getters</span>.<span class="property">token</span>) &#123;</span><br><span class="line">    config.<span class="property">headers</span>.<span class="property">Authorization</span> = <span class="string">`Bearer <span class="subst">$&#123;store.getters.token&#125;</span>`</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> config</span><br><span class="line">&#125;, <span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 失败执行promise</span></span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(error)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 响应拦截器</span></span><br><span class="line">service.<span class="property">interceptors</span>.<span class="property">response</span>.<span class="title function_">use</span>(<span class="function">(<span class="params">response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; data, message, success &#125; = response.<span class="property">data</span> <span class="comment">// 默认json格式</span></span><br><span class="line">  <span class="keyword">if</span> (success) &#123;</span><br><span class="line">    <span class="keyword">return</span> data</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title class_">Message</span>(&#123; <span class="attr">type</span>: <span class="string">&#x27;error&#x27;</span>, message &#125;)</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(message))</span><br><span class="line">  &#125;</span><br><span class="line">&#125;, <span class="title function_">async</span>(error) =&gt; &#123;</span><br><span class="line">  <span class="comment">// error.message</span></span><br><span class="line">  <span class="title class_">Message</span>(&#123; <span class="attr">type</span>: <span class="string">&#x27;error&#x27;</span>, <span class="attr">message</span>: error.<span class="property">message</span> &#125;)</span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(error)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> service</span><br></pre></td></tr></table></figure><h2 id="7-环境区分"><a href="#7-环境区分" class="headerlink" title="7.环境区分"></a>7.环境区分</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022009073.png" alt="image.png"></p><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022039126.png" alt="image.png"></p><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022040621.png" alt="image.png"></p><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022009697.png" alt="image.png"></p><ul><li>将.env.development中的值改为 /api 作为请求工具的基础地址</li><li><strong>process.env.VUE_APP_BASE_API </strong>的表示读取该变量，npm run dev时该变量为 /api,  npm run build:prod时 该变量为 /prod-api</li></ul><h2 id="8-登录联调"><a href="#8-登录联调" class="headerlink" title="8. 登录联调"></a>8. 登录联调</h2><blockquote><p>目前登录功能只剩下红色的部分还需要</p></blockquote><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022009416.png" alt="image.png"></p><ul><li>首先封装登录的API请求-代码位置(<strong>src/api/user.js</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">&#x27;@/utils/request&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">login</span>(<span class="params">data</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;/sys/login&#x27;</span>,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">    data</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>Vuex中的用户模块调用登录接口-代码位置(<strong>src/store/modules/user.js</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> actions = &#123;</span><br><span class="line">  <span class="comment">// context上下文，传入参数</span></span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">login</span>(<span class="params">context, data</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(data)</span><br><span class="line">    <span class="comment">// todo: 调用登录接口</span></span><br><span class="line">    <span class="keyword">const</span> token = <span class="keyword">await</span> <span class="title function_">login</span>(data)</span><br><span class="line">    <span class="comment">// 返回一个token 123456</span></span><br><span class="line">    context.<span class="title function_">commit</span>(<span class="string">&#x27;setToken&#x27;</span>, token)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>登录成功后，跳转到主页-代码位置(<strong>src/views/login/index.vue</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">methods</span>: &#123;</span><br><span class="line">  <span class="title function_">login</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">$refs</span>.<span class="property">form</span>.<span class="title function_">validate</span>(<span class="title function_">async</span>(isOK) =&gt; &#123;</span><br><span class="line">      <span class="keyword">if</span> (isOK) &#123;</span><br><span class="line">        <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">$store</span>.<span class="title function_">dispatch</span>(<span class="string">&#x27;user/login&#x27;</span>, <span class="variable language_">this</span>.<span class="property">loginForm</span>)</span><br><span class="line">        <span class="comment">// Vuex 中的action 返回的promise</span></span><br><span class="line">        <span class="comment">// 跳转主页</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$router</span>.<span class="title function_">push</span>(<span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>区分不同环境的数据-代码位置(<strong>src/views/login/index.vue</strong>)</li></ul><blockquote><p>因为开发环境为了便利，我们将用户的账户信息和密码都默认写在了页面上，但是真正的项目我们不可能将数据进行暴露出去，所以在生产环境时应该将 用户的手机号和密码抹去</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;Login&#x27;</span>,</span><br><span class="line">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">loginForm</span>: &#123;</span><br><span class="line">        <span class="attr">mobile</span>: process.<span class="property">env</span>.<span class="property">NODE_ENV</span> === <span class="string">&#x27;development&#x27;</span> ? <span class="string">&#x27;13800000002&#x27;</span> : <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        <span class="attr">password</span>: process.<span class="property">env</span>.<span class="property">NODE_ENV</span> === <span class="string">&#x27;development&#x27;</span> ? <span class="string">&#x27;123456&#x27;</span> : <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        <span class="attr">isAgree</span>: process.<span class="property">env</span>.<span class="property">NODE_ENV</span> === <span class="string">&#x27;development&#x27;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="9-主页权限验证—鉴权"><a href="#9-主页权限验证—鉴权" class="headerlink" title="9.主页权限验证—鉴权"></a>9.主页权限验证—鉴权</h2><blockquote><p>当前项目用户是否有权限访问主页，要考虑当前有没有token,  如果有token, 用户还想去登录页，我们可以直接去主页-这个就是免登录功能。有token的情况下，直接到主页。</p></blockquote><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022009304.png" alt="image.png"></p><ul><li>访问主页-有token放过，没有token跳到登录页</li><li>访问登录-有token跳到主页，没有token放过</li></ul><p>代码实现-代码位置(<strong>src/pemission.js</strong>)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&#x27;@/router&#x27;</span></span><br><span class="line"><span class="keyword">import</span> nprogress <span class="keyword">from</span> <span class="string">&#x27;nprogress&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;nprogress/nprogress.css&#x27;</span></span><br><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">&#x27;@/store&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *前置守卫</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> whiteList = [<span class="string">&#x27;/login&#x27;</span>, <span class="string">&#x27;/404&#x27;</span>]</span><br><span class="line">router.<span class="title function_">beforeEach</span>(<span class="title function_">async</span>(to, <span class="keyword">from</span>, next) =&gt; &#123;</span><br><span class="line">  nprogress.<span class="title function_">start</span>()</span><br><span class="line">  <span class="keyword">if</span> (store.<span class="property">getters</span>.<span class="property">token</span>) &#123;</span><br><span class="line">    <span class="comment">// 存在token</span></span><br><span class="line">    <span class="keyword">if</span> (to.<span class="property">path</span> === <span class="string">&#x27;/login&#x27;</span>) &#123;</span><br><span class="line">      <span class="comment">// 跳转到主页</span></span><br><span class="line">      <span class="title function_">next</span>(<span class="string">&#x27;/&#x27;</span>) <span class="comment">// 中转到主页</span></span><br><span class="line">      <span class="comment">// next（地址）并没有执行后置守卫</span></span><br><span class="line">      nprogress.<span class="title function_">done</span>()</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">       <span class="title function_">next</span>() <span class="comment">// 放行</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 没有token</span></span><br><span class="line">    <span class="keyword">if</span> (whiteList.<span class="title function_">includes</span>(to.<span class="property">path</span>)) &#123;</span><br><span class="line">      <span class="title function_">next</span>()</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="title function_">next</span>(<span class="string">&#x27;/login&#x27;</span>) <span class="comment">// 中转到登录页</span></span><br><span class="line">      nprogress.<span class="title function_">done</span>()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">/** *</span></span><br><span class="line"><span class="comment"> * 后置守卫</span></span><br><span class="line"><span class="comment"> * **/</span></span><br><span class="line">router.<span class="title function_">afterEach</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  nprogress.<span class="title function_">done</span>()</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="三、主页"><a href="#三、主页" class="headerlink" title="三、主页"></a>三、主页</h1><h2 id="1-获取用户资料在Vuex中共享"><a href="#1-获取用户资料在Vuex中共享" class="headerlink" title="1.获取用户资料在Vuex中共享"></a>1.获取用户资料在Vuex中共享</h2><blockquote><p>登录成功跳转到主页之后，可以获取用户资料，获取的资料在Vuex中共享，这样用户就可以很方便的获取该信息</p></blockquote><ul><li>获取流程</li></ul><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022009209.png" alt="image.png"></p><ul><li>在什么位置获取？</li></ul><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022009623.png" alt="image.png"></p><blockquote><p>之前在导航守卫的位置，可以确定已经有了token，这个位置获取资料更佳，因为导航守卫在页面发生跳转时出发，这时不论你从何时何地进来，如果发现你没获取资料，都可以非常清楚直观的获取资料。判断条件也使得不会发生重复的加载。</p></blockquote><ul><li>封装获取用户资料的API-代码位置(<strong>src/api/user.js</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">getUserInfo</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;/sys/profile&#x27;</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>Vuex中声明用户信息状态，修改用户信息的mutations， 和获取用户信息的action-代码位置(<strong>src/store/modules/user.js</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> state = &#123;</span><br><span class="line">  <span class="attr">token</span>: <span class="title function_">getToken</span>(),</span><br><span class="line">  <span class="attr">userInfo</span>: &#123;&#125; <span class="comment">// 这里有一个空对象，为了放置后面取数据报错</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> mutations = &#123;</span><br><span class="line">  <span class="title function_">setUserInfo</span>(<span class="params">state, userInfo</span>) &#123;</span><br><span class="line">    state.<span class="property">userInfo</span> = userInfo</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> actions = &#123;</span><br><span class="line">  <span class="keyword">async</span> getUserInfo (context) &#123;</span><br><span class="line">    <span class="keyword">const</span> result = <span class="keyword">await</span> <span class="title function_">getUserInfo</span>()</span><br><span class="line">    context.<span class="title function_">commit</span>(<span class="string">&quot;setUserInfo&quot;</span>, result)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>通过getters声明userId(快捷访问)-代码位置(<strong>src/store/getters.js</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> getters = &#123;</span><br><span class="line">  <span class="attr">userId</span>: <span class="function"><span class="params">state</span> =&gt;</span> state.<span class="property">user</span>.<span class="property">userInfo</span>.<span class="property">userId</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> getters</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>在权限拦截处调用action-代码位置(<strong>src/pemission.js</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&#x27;@/router&#x27;</span></span><br><span class="line"><span class="keyword">import</span> nprogress <span class="keyword">from</span> <span class="string">&#x27;nprogress&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;nprogress/nprogress.css&#x27;</span></span><br><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">&#x27;@/store&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *前置守卫</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> whiteList = [<span class="string">&#x27;/login&#x27;</span>, <span class="string">&#x27;/404&#x27;</span>]</span><br><span class="line">router.<span class="title function_">beforeEach</span>(<span class="title function_">async</span>(to, <span class="keyword">from</span>, next) =&gt; &#123;</span><br><span class="line">  nprogress.<span class="title function_">start</span>()</span><br><span class="line">  <span class="keyword">if</span> (store.<span class="property">getters</span>.<span class="property">token</span>) &#123;</span><br><span class="line">    <span class="comment">// 存在token</span></span><br><span class="line">    <span class="keyword">if</span> (to.<span class="property">path</span> === <span class="string">&#x27;/login&#x27;</span>) &#123;</span><br><span class="line">      <span class="comment">// 跳转到主页</span></span><br><span class="line">      <span class="title function_">next</span>(<span class="string">&#x27;/&#x27;</span>) <span class="comment">// 中转到主页</span></span><br><span class="line">      <span class="comment">// next（地址）并没有执行后置守卫</span></span><br><span class="line">      nprogress.<span class="title function_">done</span>()</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">       <span class="keyword">if</span>(!store.<span class="property">getters</span>.<span class="property">userId</span>) &#123;</span><br><span class="line">         <span class="keyword">await</span> store.<span class="title function_">diapatch</span>(<span class="string">&quot;user/getUserInfo&quot;</span>)</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="title function_">next</span>() <span class="comment">// 放行</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 没有token</span></span><br><span class="line">    <span class="keyword">if</span> (whiteList.<span class="title function_">includes</span>(to.<span class="property">path</span>)) &#123;</span><br><span class="line">      <span class="title function_">next</span>()</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="title function_">next</span>(<span class="string">&#x27;/login&#x27;</span>) <span class="comment">// 中转到登录页</span></span><br><span class="line">      nprogress.<span class="title function_">done</span>()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>有同学会问，为什么用户信息不做持久化管理呢？ 不需要缓存吗？ 用户信息不同于token，token是当前用户的唯一标识，在几个小时内都是有效的，但是用户信息可能会进行修改或者发生变化，所以用户信息在一般的项目或者业务中不进行缓存。</p></blockquote><h2 id="2-显示用户头像和用户名"><a href="#2-显示用户头像和用户名" class="headerlink" title="2.显示用户头像和用户名"></a>2.显示用户头像和用户名</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022009859.png" alt="image.png"> </p><blockquote><p>首先解析一下顶部组件的内部位置</p></blockquote><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022009526.png" alt="image.png"></p><blockquote><p>因为上个小节，将资料已经放到了Vuex中，可以通过getters开放属性，直接在组件中引用即可</p></blockquote><ul><li>Vuex中使用getters暴露属性-代码位置(<strong>src/store/getters.js</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> getters = &#123;</span><br><span class="line">  <span class="attr">token</span>: <span class="function"><span class="params">state</span> =&gt;</span> state.<span class="property">user</span>.<span class="property">token</span>,</span><br><span class="line">  <span class="attr">userId</span>: <span class="function"><span class="params">state</span> =&gt;</span> state.<span class="property">user</span>.<span class="property">userInfo</span>.<span class="property">userId</span>,</span><br><span class="line">  <span class="attr">avatar</span>: <span class="function"><span class="params">state</span> =&gt;</span> state.<span class="property">user</span>.<span class="property">userInfo</span>.<span class="property">staffPhoto</span>, <span class="comment">// 头像</span></span><br><span class="line">  <span class="attr">name</span>: <span class="function"><span class="params">state</span> =&gt;</span> state.<span class="property">user</span>.<span class="property">userInfo</span>.<span class="property">username</span>, <span class="comment">// 用户名称</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> getters</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>在Navbar组件引入getters-代码位置(<strong>src/layout/components/NavBar.vue</strong>)</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">export default &#123;</span><br><span class="line">  computed: &#123;</span><br><span class="line">    // 引入头像和用户名称</span><br><span class="line">    ...mapGetters([</span><br><span class="line">      &#x27;sidebar&#x27;,</span><br><span class="line">      &#x27;avatar&#x27;,</span><br><span class="line">      &#x27;name&#x27;</span><br><span class="line">    ])</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>NavBar组件显示用户名和头像-代码位置(<strong>src/layout/components/NavBar.vue</strong>)</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;avatar-wrapper&quot;&gt;</span><br><span class="line">          &lt;!-- 头像 --&gt;</span><br><span class="line">          &lt;img :src=&quot;avatar&quot; class=&quot;user-avatar&quot;&gt;</span><br><span class="line">          &lt;!-- 用户名称 --&gt;</span><br><span class="line">          &lt;span class=&quot;name&quot;&gt;&#123;&#123; name &#125;&#125;&lt;/span&gt;</span><br><span class="line">          &lt;!-- 图标 --&gt;</span><br><span class="line">          &lt;i class=&quot;el-icon-setting&quot; /&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><ul><li>设置头像和用户名的样式-代码位置(<strong>src/layout/components/NavBar.vue</strong>)</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.avatar-wrapper</span> &#123;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">  <span class="selector-class">.name</span> &#123;</span><br><span class="line">    //  用户名称距离右侧距离</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.el-icon-setting</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.user-avatar</span> &#123;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">  </span><br></pre></td></tr></table></figure><h2 id="3-处理头像为空的场景"><a href="#3-处理头像为空的场景" class="headerlink" title="3.处理头像为空的场景"></a>3.处理头像为空的场景</h2><blockquote><p>不是所有用户都有头像的，当用户没有头像时要显示对应的内容</p></blockquote><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022010215.png" alt="image.png"></p><ul><li>条件判断-代码位置(<strong>src/layout/components/NavBar.vue</strong>)</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;avatar-wrapper&quot;&gt;</span><br><span class="line">          &lt;!-- 头像 --&gt;</span><br><span class="line">          &lt;img v-if=&quot;avatar&quot; :src=&quot;avatar&quot; class=&quot;user-avatar&quot;&gt;</span><br><span class="line">          &lt;span v-else class=&quot;username&quot;&gt;&#123;&#123; name?.charAt(0) &#125;&#125;&lt;/span&gt;</span><br><span class="line">          &lt;!-- 用户名称 --&gt;</span><br><span class="line">          &lt;span class=&quot;name&quot;&gt;&#123;&#123; name &#125;&#125;&lt;/span&gt;</span><br><span class="line">          &lt;!-- 图标 --&gt;</span><br><span class="line">          &lt;i class=&quot;el-icon-setting&quot; /&gt;</span><br><span class="line">        &lt;/div&gt;</span><br></pre></td></tr></table></figure><ul><li>样式</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.username</span> &#123;</span><br><span class="line">         <span class="attribute">width</span>: <span class="number">30px</span>;</span><br><span class="line">         <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">         <span class="attribute">text-align</span>: center;</span><br><span class="line">         <span class="attribute">line-height</span>: <span class="number">30px</span>;</span><br><span class="line">         <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">         <span class="attribute">background</span>: <span class="number">#04c9be</span>;</span><br><span class="line">         <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">         <span class="attribute">margin-right</span>: <span class="number">4px</span>;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><blockquote><p>这里我们使用了可选链操作符 ？， 它的意思是当？前面的变量为空时，它不会继续往下执行，防止报错，如<br>null?.name，但是我们当前的版本不支持？的编译，所以需要升级一下对应的版本</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm i vue@2.7.0  vue-template-compiler@2.7.0   <span class="comment"># 升级vue版本️</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>升级完成后，重启服务就可以了。</p></blockquote><h2 id="4-处理token失效的问题"><a href="#4-处理token失效的问题" class="headerlink" title="4.处理token失效的问题"></a>4.处理token失效的问题</h2><blockquote><p>token是有时效性的，当token超时，我们需要做一下处理</p></blockquote><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022010909.png" alt="image.png"></p><ul><li>请求拦截器处理-代码位置(<strong>src/utils/request.js</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 响应拦截器</span></span><br><span class="line">service.<span class="property">interceptors</span>.<span class="property">response</span>.<span class="title function_">use</span>(..., <span class="title function_">async</span>(error) =&gt; &#123;</span><br><span class="line">  <span class="keyword">if</span> (error.<span class="property">response</span>.<span class="property">status</span> === <span class="number">401</span>) &#123;</span><br><span class="line">    <span class="title class_">Message</span>(&#123; <span class="attr">type</span>: <span class="string">&#x27;warning&#x27;</span>, <span class="attr">message</span>: <span class="string">&#x27;token超时了&#x27;</span> &#125;)</span><br><span class="line">    <span class="comment">// 说明token超时了</span></span><br><span class="line">    <span class="keyword">await</span> store.<span class="title function_">dispatch</span>(<span class="string">&#x27;user/logout&#x27;</span>) <span class="comment">// 调用action 退出登录</span></span><br><span class="line">    <span class="comment">//  主动跳到登录页</span></span><br><span class="line">    router.<span class="title function_">push</span>(<span class="string">&#x27;/login&#x27;</span>) <span class="comment">// 跳转到登录页</span></span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(error)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// error.message</span></span><br><span class="line">  <span class="title class_">Message</span>.<span class="title function_">error</span>(error.<span class="property">message</span>)</span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(error)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li>实现Vuex的登出action-代码位置(<strong>src/store/modules/user.js</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> actions = &#123;</span><br><span class="line">  <span class="comment">// 退出登录的action</span></span><br><span class="line">  <span class="title function_">logout</span>(<span class="params">context</span>) &#123;</span><br><span class="line">    context.<span class="title function_">commit</span>(<span class="string">&#x27;removeToken&#x27;</span>) <span class="comment">// 删除token</span></span><br><span class="line">    context.<span class="title function_">commit</span>(<span class="string">&#x27;setUserInfo&#x27;</span>, &#123;&#125;) <span class="comment">// 设置用户信息为空对象</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-调整下拉菜单，实现退出登录"><a href="#5-调整下拉菜单，实现退出登录" class="headerlink" title="5.调整下拉菜单，实现退出登录"></a>5.调整下拉菜单，实现退出登录</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022010872.png" alt="image.png"></p><blockquote><p>退出登录流程</p></blockquote><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022010696.png" alt="image.png"></p><ul><li>Navbar中点击退出登录-代码位置(<strong>src/layout/components/NavBar.vue</strong>)</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-dropdown-item @click.native=&quot;logout&quot;&gt;</span><br><span class="line">        &lt;span style=&quot;display:block;&quot;&gt;登出&lt;/span&gt;</span><br><span class="line">&lt;/el-dropdown-item&gt;</span><br></pre></td></tr></table></figure><ul><li>退出方法-代码位置(<strong>src/layout/components/NavBar.vue</strong>)</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">export default  &#123;</span><br><span class="line">  methods: &#123;</span><br><span class="line">     async logout() &#123;</span><br><span class="line">      // 调用退出登录的action</span><br><span class="line">      await this.$store.dispatch(&#x27;user/logout&#x27;)</span><br><span class="line">      this.$router.push(&#x27;/login&#x27;)</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意：native修饰符表示给组件的根元素注册事件️</p><h2 id="6-修改密码功能实现"><a href="#6-修改密码功能实现" class="headerlink" title="6.修改密码功能实现"></a>6.修改密码功能实现</h2><ul><li>整体流程</li></ul><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022010998.png" alt="image.png"> </p><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022010784.png" alt="image.png"></p><h3 id="6-1-修改密码-弹出层"><a href="#6-1-修改密码-弹出层" class="headerlink" title="6.1-修改密码-弹出层"></a>6.1-修改密码-弹出层</h3><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022010365.png" alt="image.png"> </p><ul><li>注册修改密码点击事件-代码位置(<strong>src/layout/components/NavBar.vue</strong>)</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- prevent阻止默认事件 --&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">a</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> @<span class="attr">click.prevent</span>=<span class="string">&quot;updatePassword&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-dropdown-item</span>&gt;</span>修改密码<span class="tag">&lt;/<span class="name">el-dropdown-item</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>声明变量和方法控制弹层显示-代码位置(<strong>src/layout/components/NavBar.vue</strong>)</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return  &#123;</span><br><span class="line">      showDialog: false</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    updatePassword() &#123;</span><br><span class="line">      this.showDialog = true</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>放置弹层组件-代码位置(<strong>src/layout/components/NavBar.vue</strong>)</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-dialog width=&quot;500px&quot; title=&quot;修改密码&quot; :visible.sync=&quot;showDialog&quot; &gt;</span><br><span class="line">&lt;/el-dialog&gt;</span><br></pre></td></tr></table></figure><h3 id="6-2-修改密码-表单结构"><a href="#6-2-修改密码-表单结构" class="headerlink" title="6.2-修改密码-表单结构"></a>6.2-修改密码-表单结构</h3><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022010627.png" alt="image.png"></p><ul><li>表单结构-代码位置(<strong>src/layout/components/NavBar.vue</strong>)</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-form  label-width=&quot;120px&quot; &gt;</span><br><span class="line">      &lt;el-form-item label=&quot;旧密码&quot; &gt;</span><br><span class="line">        &lt;el-input  show-password size=&quot;small&quot; /&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line">      &lt;el-form-item label=&quot;新密码&quot; &gt;</span><br><span class="line">        &lt;el-input  show-password size=&quot;small&quot; /&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line">      &lt;el-form-item label=&quot;重复密码&quot; &gt;</span><br><span class="line">        &lt;el-input  show-password size=&quot;small&quot; /&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line">      &lt;el-form-item&gt;</span><br><span class="line">        &lt;el-button size=&quot;mini&quot; type=&quot;primary&quot; &gt;确认修改&lt;/el-button&gt;</span><br><span class="line">        &lt;el-button size=&quot;mini&quot; &gt;取消&lt;/el-button&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line">    &lt;/el-form&gt;</span><br></pre></td></tr></table></figure><h3 id="6-3-修改密码-表单校验"><a href="#6-3-修改密码-表单校验" class="headerlink" title="6.3-修改密码-表单校验"></a>6.3-修改密码-表单校验</h3><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022010583.png" alt="image.png"> </p><ul><li>声明数据和规则-代码位置(<strong>src/layout/components/NavBar.vue</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  data () &#123;</span><br><span class="line">    <span class="keyword">return</span>  &#123;</span><br><span class="line">     <span class="attr">passForm</span>: &#123;</span><br><span class="line">        <span class="attr">oldPassword</span>: <span class="string">&#x27;&#x27;</span>, <span class="comment">// 旧密码</span></span><br><span class="line">        <span class="attr">newPassword</span>: <span class="string">&#x27;&#x27;</span>, <span class="comment">// 新密码</span></span><br><span class="line">        <span class="attr">confirmPassword</span>: <span class="string">&#x27;&#x27;</span> <span class="comment">// 确认密码字段</span></span><br><span class="line">      &#125;,</span><br><span class="line">     <span class="attr">rules</span>: &#123;</span><br><span class="line">        <span class="attr">oldPassword</span>: [&#123; <span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">&#x27;旧密码不能为空&#x27;</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span> &#125;], <span class="comment">// 旧密码</span></span><br><span class="line">        <span class="attr">newPassword</span>: [&#123; <span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">&#x27;新密码不能为空&#x27;</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span> &#125;, &#123;</span><br><span class="line">          <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span>,</span><br><span class="line">          <span class="attr">min</span>: <span class="number">6</span>,</span><br><span class="line">          <span class="attr">max</span>: <span class="number">16</span>,</span><br><span class="line">          <span class="attr">message</span>: <span class="string">&#x27;新密码的长度为6-16位之间&#x27;</span></span><br><span class="line">        &#125;], <span class="comment">// 新密码</span></span><br><span class="line">        <span class="attr">confirmPassword</span>: [&#123; <span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">&#x27;重复密码不能为空&#x27;</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span> &#125;, &#123;</span><br><span class="line">          <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span>,</span><br><span class="line">          <span class="attr">validator</span>: <span class="function">(<span class="params">rule, value, callback</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="comment">// value</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">passForm</span>.<span class="property">newPassword</span> === value) &#123;</span><br><span class="line">              <span class="title function_">callback</span>()</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">              <span class="title function_">callback</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;重复密码和新密码输入不一致&#x27;</span>))</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;] <span class="comment">// 确认密码字段</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>绑定属性-代码位置(<strong>src/layout/components/NavBar.vue</strong>)</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-form ref=&quot;passForm&quot; label-width=&quot;120px&quot; :model=&quot;passForm&quot; :rules=&quot;rules&quot;&gt;</span><br><span class="line">  &lt;el-form-item label=&quot;旧密码&quot; prop=&quot;oldPassword&quot;&gt;</span><br><span class="line">    &lt;el-input v-model=&quot;passForm.oldPassword&quot; show-password size=&quot;small&quot; /&gt;</span><br><span class="line">  &lt;/el-form-item&gt;</span><br><span class="line">  &lt;el-form-item label=&quot;新密码&quot; prop=&quot;newPassword&quot;&gt;</span><br><span class="line">    &lt;el-input v-model=&quot;passForm.newPassword&quot; show-password size=&quot;small&quot; /&gt;</span><br><span class="line">  &lt;/el-form-item&gt;</span><br><span class="line">  &lt;el-form-item label=&quot;重复密码&quot; prop=&quot;confirmPassword&quot;&gt;</span><br><span class="line">    &lt;el-input v-model=&quot;passForm.confirmPassword&quot; show-password size=&quot;small&quot; /&gt;</span><br><span class="line">  &lt;/el-form-item&gt;</span><br><span class="line">  &lt;el-form-item&gt;</span><br><span class="line">    &lt;el-button size=&quot;mini&quot; type=&quot;primary&quot; &gt;确认修改&lt;/el-button&gt;</span><br><span class="line">    &lt;el-button size=&quot;mini&quot; &gt;取消&lt;/el-button&gt;</span><br><span class="line">  &lt;/el-form-item&gt;</span><br><span class="line">&lt;/el-form&gt;</span><br></pre></td></tr></table></figure><h3 id="6-4-修改密码-确定和取消"><a href="#6-4-修改密码-确定和取消" class="headerlink" title="6.4-修改密码-确定和取消"></a>6.4-修改密码-确定和取消</h3><ul><li>确定和取消流程</li></ul><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022010479.png" alt="image.png"></p><ul><li>封装修改密码方法-代码位置(<strong>src/api/user.js</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 更新密码</span></span><br><span class="line"><span class="comment"> * **/</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">updatePassword</span>(<span class="params">data</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;/sys/user/updatePass&#x27;</span>,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;put&#x27;</span>,</span><br><span class="line">    data</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>确定方法-代码位置(<strong>src/layout/components/NavBar.vue</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 确定</span></span><br><span class="line">    <span class="title function_">btnOK</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">$refs</span>.<span class="property">passForm</span>.<span class="title function_">validate</span>(<span class="keyword">async</span> isOK =&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span> (isOK) &#123;</span><br><span class="line">          <span class="comment">// 调用接口</span></span><br><span class="line">          <span class="keyword">await</span> <span class="title function_">updatePassword</span>(<span class="variable language_">this</span>.<span class="property">passForm</span>)</span><br><span class="line">          <span class="variable language_">this</span>.<span class="property">$message</span>.<span class="title function_">success</span>(<span class="string">&#x27;修改密码成功&#x27;</span>)</span><br><span class="line">          <span class="variable language_">this</span>.<span class="title function_">btnCancel</span>()</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure><ul><li>取消方法-代码位置(<strong>src/layout/components/NavBar.vue</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">btnCancel</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">$refs</span>.<span class="property">passForm</span>.<span class="title function_">resetFields</span>() <span class="comment">// 重置表单</span></span><br><span class="line">      <span class="comment">// 关闭弹层</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">showDialog</span> = <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>监听弹层关闭事件</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-dialog @close=&quot;btnCancel&quot; width=&quot;500px&quot; title=&quot;修改密码&quot; :visible.sync=&quot;showDialog&quot; &gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>有同学有疑惑，不是用了.sync修饰符吗？可以直接关闭弹层，为何还要监听close事件，这是因为sync修饰符只能关闭弹层，我们还需要将表单进行重置，因为你之前打开弹层可能修改了一半或者残留一些校验信息，再打开的时候这些信息应该都被重置，所以这里用监听事件的方式再重置一下表单，保证功能的体验和完整性。</p></blockquote><h2 id="7-清理组件和路由"><a href="#7-清理组件和路由" class="headerlink" title="7. 清理组件和路由"></a>7. 清理组件和路由</h2><blockquote><p>主页功能开发完了，我们要清理一下模板中残余文件</p></blockquote><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022011378.png" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/8435673/1677731001663-0c373e48-4eb6-4691-9f60-29048729645b.png#averageHue=%23b6b6b6&amp;clientId=udd47902c-ce16-4&amp;from=paste&amp;height=400&amp;id=u4e457222&amp;name=image.png&amp;originHeight=800&amp;originWidth=1908&amp;originalType=binary&amp;ratio=2&amp;rotation=0&amp;showTitle=false&amp;size=166425&amp;status=done&amp;style=none&amp;taskId=u8610b8d9-8690-445e-abf9-dac59fc210c&amp;title=&amp;width=954" alt="image.png"></p><ul><li>路由只保留登录-主页-404</li><li>请求模块只保留user.js模块</li></ul><h2 id="8-创建项目所需要的组件和路由"><a href="#8-创建项目所需要的组件和路由" class="headerlink" title="8.创建项目所需要的组件和路由"></a>8.创建项目所需要的组件和路由</h2><blockquote><p>人力资源项目需要这些模块</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">├── approval            <span class="comment"># 审批管理</span></span><br><span class="line">├── attendance          <span class="comment"># 考勤管理</span></span><br><span class="line">├── department          <span class="comment"># 组织架构</span></span><br><span class="line">├── employee            <span class="comment"># 员工管理</span></span><br><span class="line">├── permission          <span class="comment"># 权限管理</span></span><br><span class="line">├── role                <span class="comment"># 角色管理</span></span><br><span class="line">├── salary              <span class="comment"># 工资管理</span></span><br><span class="line">├── social              <span class="comment"># 社保管理</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>创建模块</li></ul><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022011336.png" alt="image.png"></p><blockquote><p>大家可以直接从当天课程的素材中拷贝已经准备好的路由/组件</p></blockquote><p>组件结构样例：<br><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022011966.png" alt="image.png"></p><p>路由模块样例：<br><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022011570.png" alt="image.png"></p><p>路由的统一导入：<br><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022011211.png" alt="image.png"></p><p>在src/router/index.js中集成到当前路由中：<br><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022011544.png" alt="image.png"></p><h2 id="9-扩展—解析左侧菜单原理"><a href="#9-扩展—解析左侧菜单原理" class="headerlink" title="9.扩展—解析左侧菜单原理"></a>9.扩展—解析左侧菜单原理</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022011939.png" alt="image.png"></p><blockquote><p>左侧菜单的数据来源于路由模块的信息， 会根据路由信息的hidden属性来判断是否显示该路由信息到菜单，<br>菜单属性中的图表和标题来源于路由meta中的icon和title属性</p></blockquote><ul><li>分析过程</li></ul><p>sidebar组件引入路由信息：<br><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022012599.png" alt="image.png"></p><p>循环渲染路由信息<br><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022012624.png" alt="image.png"></p><p>sidebarItem组件根据条件渲染-传递icon和title属性给item组件<br><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022012057.png" alt="image.png"></p><p>item组件接收icon和title属性，使用函数型组件完成渲染<br><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022012508.png" alt="image.png"></p><h2 id="10-左侧菜单显示项目logo"><a href="#10-左侧菜单显示项目logo" class="headerlink" title="10. 左侧菜单显示项目logo"></a>10. 左侧菜单显示项目logo</h2><blockquote><p>logo有两种展示形态，当菜单展开时，显示大图，当菜单折叠时，显示小图</p></blockquote><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022013374.png" alt="image.png"><br><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022013048.png" alt="image.png"></p><ul><li>通过settings.js的设置，将logo显示出来-代码位置(<strong>src/settings.js</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line"></span><br><span class="line">  <span class="attr">title</span>: <span class="string">&#x27;人力资源后台管理系统&#x27;</span>,</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@type</span> &#123;<span class="type">boolean</span>&#125; true | false</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@description</span> Whether fix the header</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="attr">fixedHeader</span>: <span class="literal">false</span>,</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@type</span> &#123;<span class="type">boolean</span>&#125; true | false</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@description</span> Whether show the logo in sidebar</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="attr">sidebarLogo</span>: <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>调整logo的页面结构-代码位置(<strong>src/layout/components/Sidebar/Logo.vue</strong>)</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;sidebar-logo-container&quot; :class=&quot;&#123;&#x27;collapse&#x27;:collapse&#125;&quot;&gt;</span><br><span class="line">    &lt;transition name=&quot;sidebarLogoFade&quot;&gt;</span><br><span class="line">      &lt;router-link key=&quot;collapse&quot; class=&quot;sidebar-logo-link&quot; to=&quot;/&quot;&gt;</span><br><span class="line">        &lt;img src=&quot;@/assets/common/logo.png&quot; class=&quot;sidebar-logo&quot;&gt;</span><br><span class="line">      &lt;/router-link&gt;</span><br><span class="line">    &lt;/transition&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><ul><li>调整logo样式-代码位置(<strong>src/layout/components/Sidebar/Logo.vue</strong>)</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">&lt;style lang=&quot;scss&quot; scoped&gt;</span><br><span class="line">.sidebarLogoFade-enter-active &#123;</span><br><span class="line">  transition: opacity 1.5s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.sidebarLogoFade-enter,</span><br><span class="line">.sidebarLogoFade-leave-to &#123;</span><br><span class="line">  opacity: 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.sidebar-logo-container &#123;</span><br><span class="line">  position: relative;</span><br><span class="line">  width: 100%;</span><br><span class="line">  height: 50px;</span><br><span class="line">  line-height: 50px;</span><br><span class="line">  text-align: center;</span><br><span class="line">  overflow: hidden;</span><br><span class="line"></span><br><span class="line">  &amp; .sidebar-logo-link &#123;</span><br><span class="line">    height: 100%;</span><br><span class="line">    width: 100%;</span><br><span class="line"></span><br><span class="line">    &amp; .sidebar-logo &#123;</span><br><span class="line">      width: 140px;</span><br><span class="line">      vertical-align: middle;</span><br><span class="line">      margin-right: 12px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &amp; .sidebar-title &#123;</span><br><span class="line">      display: inline-block;</span><br><span class="line">      margin: 0;</span><br><span class="line">      color: #fff;</span><br><span class="line">      font-weight: 600;</span><br><span class="line">      line-height: 50px;</span><br><span class="line">      font-size: 14px;</span><br><span class="line">      font-family: Avenir, Helvetica Neue, Arial, Helvetica, sans-serif;</span><br><span class="line">      vertical-align: middle;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  &amp;.collapse &#123;</span><br><span class="line">    .sidebar-logo &#123;</span><br><span class="line">      margin-right: 0px;</span><br><span class="line">      width: 32px;</span><br><span class="line">      height: 32px;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="四、组织架构"><a href="#四、组织架构" class="headerlink" title="四、组织架构"></a>四、组织架构</h1><h2 id="1-树组件应用"><a href="#1-树组件应用" class="headerlink" title="1.树组件应用"></a>1.树组件应用</h2><ul><li>树形组件-用层级结构展示信息，可展开或折叠。</li></ul><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022013599.png" alt="image.png"></p><ul><li>element-ui提供了树组件<a href="https://element.eleme.cn/#/zh-CN/component/tree">el-tree</a>的应用</li><li>data（绑定数据）</li><li>props (设置属性) - children(设置子节点的字段名) / label(设置显示内容的字段名)</li><li>default-expand-all (默认展开所有节点)</li></ul><ul><li>在组织架构组件中放置树形组件-代码位置(<strong>src/views/department/index.vue</strong>)</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-tree default-expand-all :data=&quot;depts&quot; :props=&quot;defaultProps&quot;&gt;</span><br></pre></td></tr></table></figure><ul><li>声明树组件相关的数据</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">export default &#123;</span><br><span class="line">  name: &#x27;Department&#x27;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return  &#123;</span><br><span class="line">      depts: [&#123;</span><br><span class="line">        name: &#x27;传智教育&#x27;,</span><br><span class="line">        children: [</span><br><span class="line">          &#123; name: &#x27;总裁办&#x27;&#125;,</span><br><span class="line">          &#123; name: &#x27;行政部&#x27;&#125;,</span><br><span class="line">          &#123; name: &#x27;财务部&#x27;&#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;],</span><br><span class="line">      defaultProps: &#123;</span><br><span class="line">        children: &#x27;children&#x27;,</span><br><span class="line">        label: &#x27;name&#x27;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-树组件自定义结构"><a href="#2-树组件自定义结构" class="headerlink" title="2.树组件自定义结构"></a>2.树组件自定义结构</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022013605.png" alt="image.png"></p><blockquote><p>通过在el-tree中传入插槽内容，就可以渲染数据</p></blockquote><ul><li>自定义树形结构-代码位置(<strong>src/views/department/index.vue</strong>)</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-tree default-expand-all :data=&quot;depts&quot; :props=&quot;defaultProps&quot;&gt;</span><br><span class="line">        &lt;!-- 节点结构 --&gt;</span><br><span class="line">        &lt;!-- v-slot=&quot;&#123; node, data &#125;&quot; 只能作用在template --&gt;</span><br><span class="line">        &lt;template v-slot=&quot;&#123; data &#125;&quot;&gt;</span><br><span class="line">          &lt;el-row style=&quot;width:100%;height:40px&quot; type=&quot;flex&quot; justify=&quot;space-between&quot; align=&quot;middle&quot;&gt;</span><br><span class="line">            &lt;el-col&gt;&#123;&#123; data.name &#125;&#125;&lt;/el-col&gt;</span><br><span class="line">            &lt;el-col :span=&quot;4&quot;&gt;</span><br><span class="line">              &lt;span class=&quot;tree-manager&quot;&gt;&#123;&#123; data.managerName &#125;&#125;&lt;/span&gt;</span><br><span class="line">              &lt;!-- $event 实参 表示类型 --&gt;</span><br><span class="line">              &lt;el-dropdown &gt;</span><br><span class="line">                &lt;!-- 显示区域内容 --&gt;</span><br><span class="line">                &lt;span class=&quot;el-dropdown-link&quot;&gt;</span><br><span class="line">                  操作&lt;i class=&quot;el-icon-arrow-down el-icon--right&quot; /&gt;</span><br><span class="line">                &lt;/span&gt;</span><br><span class="line">                &lt;!-- 下拉菜单选项 --&gt;</span><br><span class="line">                &lt;el-dropdown-menu slot=&quot;dropdown&quot;&gt;</span><br><span class="line">                  &lt;el-dropdown-item command=&quot;add&quot;&gt;添加子部门&lt;/el-dropdown-item&gt;</span><br><span class="line">                  &lt;el-dropdown-item command=&quot;edit&quot;&gt;编辑部门&lt;/el-dropdown-item&gt;</span><br><span class="line">                  &lt;el-dropdown-item command=&quot;del&quot;&gt;删除&lt;/el-dropdown-item&gt;</span><br><span class="line">                &lt;/el-dropdown-menu&gt;</span><br><span class="line">              &lt;/el-dropdown&gt;</span><br><span class="line">            &lt;/el-col&gt;</span><br><span class="line">          &lt;/el-row&gt;</span><br><span class="line">        &lt;/template&gt;</span><br><span class="line">  &lt;/el-tree&gt;</span><br></pre></td></tr></table></figure><ul><li>样式-代码位置(<strong>src/views/department/index.vue</strong>)</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;style scoped&gt;</span><br><span class="line">.app-container &#123;</span><br><span class="line">  padding: 30px 140px;</span><br><span class="line">  font-size: 14px;</span><br><span class="line">&#125;</span><br><span class="line">.tree-manager &#123;</span><br><span class="line">  width: 50px;</span><br><span class="line">  display: inline-block;</span><br><span class="line">  margin: 10px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="3-获取组织架构数据"><a href="#3-获取组织架构数据" class="headerlink" title="3.获取组织架构数据"></a>3.获取组织架构数据</h2><ul><li>封装获取组织的API-代码位置(<strong>src/api/department.js</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">&#x27;@/utils/request&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 获取组织架构数据</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">getDepartment</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;/company/department&#x27;</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>在组织架构初始化时调用方法-代码位置(<strong>src/views/department/index.vue</strong>)</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">import &#123; getDepartment &#125; from &#x27;@/api/department&#x27;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#x27;Department&#x27;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return  &#123;</span><br><span class="line">      depts: [],</span><br><span class="line">      defaultProps: &#123;</span><br><span class="line">        children: &#x27;children&#x27;,</span><br><span class="line">        label: &#x27;name&#x27;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  created() &#123;</span><br><span class="line">    this.getDepartment()</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">   async getDepartment() &#123;</span><br><span class="line">    const result = await getDepartment()</span><br><span class="line">    this.depts = result</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">  &lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="4-递归转化树形结构"><a href="#4-递归转化树形结构" class="headerlink" title="4.递归转化树形结构"></a>4.递归转化树形结构</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022013813.png" alt="image.png"></p><ol><li>首先分析数据的关联关系</li><li>封装递归函数根据关联关系转化层级结构</li></ol><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022013695.png" alt="image.png"></p><blockquote><p>通过分析了解到，父级的id为子级的pid</p></blockquote><ul><li>封装公共方法-代码位置(src/utils/index.js)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 列表型数据转化树形</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">transListToTreeData</span>(<span class="params">list, rootValue</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> arr = []</span><br><span class="line">  list.<span class="title function_">forEach</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (item.<span class="property">pid</span> === rootValue) &#123;</span><br><span class="line">      <span class="comment">// 找到了匹配的节点</span></span><br><span class="line">      <span class="comment">// 当前节点的id 和 当前节点的子节点的pid是想等的</span></span><br><span class="line">      <span class="keyword">const</span> children = <span class="title function_">transListToTreeData</span>(list, item.<span class="property">id</span>) <span class="comment">// 找到的节点的子节点</span></span><br><span class="line">      item.<span class="property">children</span> = children  <span class="comment">// 将子节点赋值给当前节点</span></span><br><span class="line">      arr.<span class="title function_">push</span>(item)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">return</span> arr</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>获取完的组织数据使用转化方法转化成树形-代码位置(<strong>src/views/department/index.vue</strong>)</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">created() &#123;</span><br><span class="line">  this.getDepartment() // 调用获取数据的接口</span><br><span class="line">&#125;,</span><br><span class="line">methods: &#123;</span><br><span class="line">  // 封装好方法</span><br><span class="line">  async getDepartment() &#123;</span><br><span class="line">    const result = await getDepartment()</span><br><span class="line">    this.depts = transListToTreeData(result, 0)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>总结：递归特点</p><ul><li>一般用来处理未知层级的数据</li><li>递归要有跳出条件</li><li>自身调用自身时参数不能重复</li></ul><h2 id="5-添加子部门—新建弹层组件"><a href="#5-添加子部门—新建弹层组件" class="headerlink" title="5.添加子部门—新建弹层组件"></a>5.添加子部门—新建弹层组件</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022013923.png" alt="image.png"><br>步骤：</p><ul><li>注册添加子部门事件</li><li>封装弹层组件</li><li><p>控制弹层显示隐藏</p></li><li><p>注册下拉菜单点击事件-代码位置(<strong>src/views/department/index.vue</strong>)</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-dropdown</span> @<span class="attr">command</span>=<span class="string">&quot;operateDept&quot;</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 显示区域内容 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;el-dropdown-link&quot;</span>&gt;</span></span><br><span class="line">            操作<span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;el-icon-arrow-down el-icon--right&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 下拉菜单选项 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-dropdown-menu</span> <span class="attr">slot</span>=<span class="string">&quot;dropdown&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-dropdown-item</span> <span class="attr">command</span>=<span class="string">&quot;add&quot;</span>&gt;</span>添加子部门<span class="tag">&lt;/<span class="name">el-dropdown-item</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-dropdown-item</span> <span class="attr">command</span>=<span class="string">&quot;edit&quot;</span>&gt;</span>编辑部门<span class="tag">&lt;/<span class="name">el-dropdown-item</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-dropdown-item</span> <span class="attr">command</span>=<span class="string">&quot;del&quot;</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">el-dropdown-item</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-dropdown-menu</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-dropdown</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>声明变量控制弹层显示隐藏-代码位置(<strong>src/views/department/index.vue</strong>)</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      showDialog: false</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    operateDept(type) &#123;</span><br><span class="line">      if(type === &#x27;add&#x27;) &#123;</span><br><span class="line">        this.showDialog = true</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><ul><li>封装新增组织部门组件-代码位置(<strong>src/views/department/components/add-dept.vue</strong>)</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;el-dialog title=&quot;新增部门&quot; :visible=&quot;showDialog&quot; @close=&quot;close&quot;&gt;</span><br><span class="line">  &lt;/el-dialog&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#x27;AddDept&#x27;</span><br><span class="line">  props: &#123;</span><br><span class="line">    showDialog: &#123;</span><br><span class="line">      type: Boolean,</span><br><span class="line">      default: false</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    close() &#123;</span><br><span class="line">      this.$emit(&#x27;update:showDialog&#x27;, false)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>在组织架构中放置新增部门组件-代码位置(<strong>src/views/department/index.vue</strong>)</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">add-dept</span>  <span class="attr">:show-dialog.sync</span>=<span class="string">&quot;showDialog&quot;</span>  /&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>这里我们同样使用了sync修饰符，可以监听子组件传过来的 <strong>update:属性名</strong>的事件，直接将父组件的值进行修改</p></blockquote><ul><li>设置el-tree组件的点击属性-(点击树不可以折叠，只有点击折叠展开图标才可以)-代码位置(<strong>src/views/department/index.vue</strong>)</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-tree</span> <span class="attr">:expand-on-click-node</span>=<span class="string">&quot;false&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">el-tree</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="6-添加子部门—表单结构"><a href="#6-添加子部门—表单结构" class="headerlink" title="6.添加子部门—表单结构"></a>6.添加子部门—表单结构</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022013684.png" alt="image.png"> </p><ul><li>新增组织架构结构-代码位置(<strong>src/views/department/components/add-dept.vue</strong>)</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-form  label-width=&quot;120px&quot;&gt;</span><br><span class="line">      &lt;el-form-item prop=&quot;name&quot; label=&quot;部门名称&quot;&gt;</span><br><span class="line">        &lt;el-input  placeholder=&quot;2-10个字符&quot; style=&quot;width: 80%&quot; size=&quot;mini&quot; /&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line">      &lt;el-form-item label=&quot;部门编码&quot;&gt;</span><br><span class="line">        &lt;el-input  placeholder=&quot;2-10个字符&quot; style=&quot;width: 80%&quot; size=&quot;mini&quot; /&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line">      &lt;el-form-item label=&quot;部门负责人&quot;&gt;</span><br><span class="line">        &lt;el-select  placeholder=&quot;请选择负责人&quot; style=&quot;width: 80%&quot; size=&quot;mini&quot;&gt;</span><br><span class="line">        &lt;/el-select&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line">      &lt;el-form-item  label=&quot;部门介绍&quot;&gt;</span><br><span class="line">        &lt;el-input  placeholder=&quot;1-100个字符&quot; type=&quot;textarea&quot; size=&quot;mini&quot; :rows=&quot;4&quot; style=&quot;width: 80%&quot; /&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line">      &lt;el-form-item&gt;</span><br><span class="line">        &lt;!-- 按钮 --&gt;</span><br><span class="line">        &lt;el-row type=&quot;flex&quot; justify=&quot;center&quot;&gt;</span><br><span class="line">          &lt;el-col :span=&quot;12&quot;&gt;</span><br><span class="line">            &lt;el-button size=&quot;mini&quot; type=&quot;primary&quot; &gt;确定&lt;/el-button&gt;</span><br><span class="line">            &lt;el-button size=&quot;mini&quot; &gt;取消&lt;/el-button&gt;</span><br><span class="line">          &lt;/el-col&gt;</span><br><span class="line">        &lt;/el-row&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line">    &lt;/el-form&gt;</span><br></pre></td></tr></table></figure><h2 id="7-添加子部门—表单基本校验"><a href="#7-添加子部门—表单基本校验" class="headerlink" title="7.添加子部门—表单基本校验"></a>7.添加子部门—表单基本校验</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022014581.png" alt="image.png"><br>表单校验规则</p><ul><li>规则表单项必填/表单项长度限制</li><li>部门名称和已有部门不重复</li><li>部门编码和已有编码不重复</li></ul><p>步骤：</p><ol><li>定义数据架构</li><li>绑定属性</li><li>定义规则</li></ol><p>基本校验</p><ul><li>声明数据和规则-代码位置(<strong>src/views/department/components/add-dept.vue</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  data () &#123;</span><br><span class="line">    <span class="keyword">return</span>  &#123;</span><br><span class="line">      <span class="attr">formData</span>: &#123;</span><br><span class="line">        <span class="attr">code</span>: <span class="string">&#x27;&#x27;</span>, <span class="comment">// 部门编码</span></span><br><span class="line">        <span class="attr">introduce</span>: <span class="string">&#x27;&#x27;</span>, <span class="comment">// 部门介绍</span></span><br><span class="line">        <span class="attr">managerId</span>: <span class="string">&#x27;&#x27;</span>, <span class="comment">// 部门负责人id</span></span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;&#x27;</span>, <span class="comment">// 部门名称</span></span><br><span class="line">        <span class="attr">pid</span>: <span class="string">&#x27;&#x27;</span> <span class="comment">// 父级部门的id</span></span><br><span class="line">      &#125;,</span><br><span class="line">       <span class="attr">rules</span>: &#123;</span><br><span class="line">        <span class="attr">code</span>: [&#123; <span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">&#x27;部门编码不能为空&#x27;</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span> &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">min</span>: <span class="number">2</span>, <span class="attr">max</span>: <span class="number">10</span>, <span class="attr">message</span>: <span class="string">&#x27;部门编码的长度为2-10个字符&#x27;</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span></span><br><span class="line">          &#125;</span><br><span class="line">        ], <span class="comment">// 部门编码</span></span><br><span class="line">        <span class="attr">introduce</span>: [&#123; <span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">&#x27;部门介绍不能为空&#x27;</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span> &#125;, &#123;</span><br><span class="line">          <span class="attr">min</span>: <span class="number">1</span>, <span class="attr">max</span>: <span class="number">100</span>, <span class="attr">message</span>: <span class="string">&#x27;部门介绍的长度为1-100个字符&#x27;</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span></span><br><span class="line">        &#125;], <span class="comment">// 部门介绍</span></span><br><span class="line">        <span class="attr">managerId</span>: [&#123; <span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">&#x27;部门负责人不能为空&#x27;</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span> &#125;], <span class="comment">// 部门负责人id</span></span><br><span class="line">        <span class="attr">name</span>: [&#123; <span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">&#x27;部门名称不能为空&#x27;</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span> &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">min</span>: <span class="number">2</span>, <span class="attr">max</span>: <span class="number">10</span>, <span class="attr">message</span>: <span class="string">&#x27;部门名称的长度为2-10个字符&#x27;</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span></span><br><span class="line">          &#125;] <span class="comment">// 部门名称</span></span><br><span class="line">        <span class="comment">// pid: &#x27;&#x27; // 父级部门的id 不需要做校验</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>绑定属性-代码位置(<strong>src/views/department/components/add-dept.vue</strong>)</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-form</span> <span class="attr">ref</span>=<span class="string">&quot;addDept&quot;</span> <span class="attr">:model</span>=<span class="string">&quot;formData&quot;</span> <span class="attr">:rules</span>=<span class="string">&quot;rules&quot;</span> <span class="attr">label-width</span>=<span class="string">&quot;120px&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">prop</span>=<span class="string">&quot;name&quot;</span> <span class="attr">label</span>=<span class="string">&quot;部门名称&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;formData.name&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;2-10个字符&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 80%&quot;</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">prop</span>=<span class="string">&quot;code&quot;</span> <span class="attr">label</span>=<span class="string">&quot;部门编码&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;formData.code&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;2-10个字符&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 80%&quot;</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">prop</span>=<span class="string">&quot;managerId&quot;</span> <span class="attr">label</span>=<span class="string">&quot;部门负责人&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-select</span> <span class="attr">v-model</span>=<span class="string">&quot;formData.managerId&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请选择负责人&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 80%&quot;</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-select</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">prop</span>=<span class="string">&quot;introduce&quot;</span> <span class="attr">label</span>=<span class="string">&quot;部门介绍&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;formData.introduce&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;1-100个字符&quot;</span> <span class="attr">type</span>=<span class="string">&quot;textarea&quot;</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span> <span class="attr">:rows</span>=<span class="string">&quot;4&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 80%&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 按钮 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-row</span> <span class="attr">type</span>=<span class="string">&quot;flex&quot;</span> <span class="attr">justify</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;12&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> &gt;</span>确定<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span> &gt;</span>取消<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="8-添加子部门—表单业务校验"><a href="#8-添加子部门—表单业务校验" class="headerlink" title="8.添加子部门—表单业务校验"></a>8.添加子部门—表单业务校验</h2><ul><li>部门名称和已有部门不重复</li><li>部门编码和已有编码不重复</li></ul><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022014400.png" alt="image.png"></p><ul><li>部门和编码的重复校验-代码位置(<strong>src/views/department/components/add-dept.vue</strong>)</li></ul><blockquote><p>编码的校验规则</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">            <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span>,</span><br><span class="line">            <span class="comment">// 自定义校验模式</span></span><br><span class="line">            <span class="attr">validator</span>: <span class="title function_">async</span>(rule, value, callback) =&gt; &#123;</span><br><span class="line">              <span class="comment">// value就是输入的编码</span></span><br><span class="line">              <span class="keyword">let</span> result = <span class="keyword">await</span> <span class="title function_">getDepartment</span>()</span><br><span class="line">              <span class="comment">// result数组中是否存在 value值</span></span><br><span class="line">              <span class="keyword">if</span> (result.<span class="title function_">some</span>(<span class="function"><span class="params">item</span> =&gt;</span> item.<span class="property">code</span> === value)) &#123;</span><br><span class="line">                <span class="title function_">callback</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;部门中已经有该编码了&#x27;</span>))</span><br><span class="line">              &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="title function_">callback</span>()</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>部门的校验规则</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">            <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span>,</span><br><span class="line">            <span class="comment">// 自定义校验模式</span></span><br><span class="line">            <span class="attr">validator</span>: <span class="title function_">async</span>(rule, value, callback) =&gt; &#123;</span><br><span class="line">              <span class="comment">// value就是输入的编码</span></span><br><span class="line">              <span class="keyword">let</span> result = <span class="keyword">await</span> <span class="title function_">getDepartment</span>()</span><br><span class="line">              <span class="comment">// result数组中是否存在 value值</span></span><br><span class="line">              <span class="keyword">if</span> (result.<span class="title function_">some</span>(<span class="function"><span class="params">item</span> =&gt;</span> item.<span class="property">name</span> === value)) &#123;</span><br><span class="line">                <span class="title function_">callback</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;部门中已经有该名称了&#x27;</span>))</span><br><span class="line">              &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="title function_">callback</span>()</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br></pre></td></tr></table></figure><h2 id="9-添加子部门—获取负责人数据"><a href="#9-添加子部门—获取负责人数据" class="headerlink" title="9.添加子部门—获取负责人数据"></a>9.添加子部门—获取负责人数据</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022014321.png" alt="image.png"><br>步骤：</p><ol><li>获取负责人列表</li><li>绑定下拉组件</li></ol><ul><li>封装获取负责人的API-代码位置(<strong>src/api/department.js</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *  获取部门负责人的数据</span></span><br><span class="line"><span class="comment"> * **/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">getManagerList</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;/sys/user/simple&#x27;</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>在组件初始化时调用-代码位置(<strong>src/views/department/components/add-dept.vue</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; getManagerList &#125; <span class="keyword">from</span> <span class="string">&#x27;@/api/department&#x27;</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  data () &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">managerList</span>: [], <span class="comment">// 存储负责人列表</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">created</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">getManagerList</span>()</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">methods</span>: &#123;</span><br><span class="line">   <span class="keyword">async</span> <span class="title function_">getManagerList</span>(<span class="params"></span>) &#123;</span><br><span class="line">     <span class="variable language_">this</span>.<span class="property">managerList</span> = <span class="keyword">await</span> <span class="title function_">getManagerList</span>()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>select渲染下拉选项-代码位置(<strong>src/views/department/components/add-dept.vue</strong>)</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-select</span> <span class="attr">v-model</span>=<span class="string">&quot;formData.managerId&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请选择负责人&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 80%&quot;</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- 下拉选项 循环 负责人数据 label表示显示的字段 value 存储字段 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-option</span> <span class="attr">v-for</span>=<span class="string">&quot;item in managerList&quot;</span> </span></span><br><span class="line"><span class="tag">      <span class="attr">:key</span>=<span class="string">&quot;item.id&quot;</span> </span></span><br><span class="line"><span class="tag">      <span class="attr">:label</span>=<span class="string">&quot;item.username&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:value</span>=<span class="string">&quot;item.id&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-select</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="10-添加子部门—记录部门"><a href="#10-添加子部门—记录部门" class="headerlink" title="10.添加子部门—记录部门"></a>10.添加子部门—记录部门</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022014985.png" alt="image.png"></p><blockquote><p>因为添加子部门是基于当前部门，所以需要记录当前是在哪个部门添加的</p></blockquote><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022014547.png" alt="image.png"> </p><ul><li>点击添加子部门时传递id-代码位置(<strong>src/views/department/index.vue</strong>)</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-dropdown</span> @<span class="attr">command</span>=<span class="string">&quot;operateDept($event, data.id)&quot;</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>$event 实参 表示点击菜单传出来的类型</p></blockquote><ul><li>声明一个响应式数据记录该id-代码位置(<strong>src/views/department/index.vue</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  data () &#123;</span><br><span class="line">    <span class="keyword">return</span>  &#123;</span><br><span class="line">      <span class="attr">currentNodeId</span>: <span class="literal">null</span>, <span class="comment">// 存储当前点击的id</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>添加子部门方法-记录id-代码位置(<strong>src/views/department/index.vue</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 操作部门方法</span></span><br><span class="line"> <span class="title function_">operateDept</span>(<span class="params">type, id</span>) &#123;</span><br><span class="line">   <span class="keyword">if</span> (type === <span class="string">&#x27;add&#x27;</span>) &#123;</span><br><span class="line">     <span class="comment">// 添加子部门</span></span><br><span class="line">     <span class="variable language_">this</span>.<span class="property">showDialog</span> = <span class="literal">true</span> <span class="comment">// 显示弹层</span></span><br><span class="line">     <span class="variable language_">this</span>.<span class="property">currentNodeId</span> = id</span><br><span class="line">   &#125; </span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><ul><li>通过组件传递id-代码位置(<strong>src/views/department/index.vue</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;add-dept :current-node-id=<span class="string">&quot;currentNodeId&quot;</span> :show-dialog.<span class="property">sync</span>=<span class="string">&quot;showDialog&quot;</span>  /&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>子组件接收id-代码位置(<strong>src/views/department/components/add-dept.vue</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">props</span>: &#123;</span><br><span class="line">    <span class="attr">currentNodeId</span>: &#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="title class_">Number</span>,</span><br><span class="line">      <span class="attr">default</span>: <span class="literal">null</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="11-添加子部门—确定取消"><a href="#11-添加子部门—确定取消" class="headerlink" title="11.添加子部门—确定取消"></a>11.添加子部门—确定取消</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022014098.png" alt="image.png"></p><ul><li>封装新增部门的API-代码位置(<strong>src/api/department.js</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 新增组织</span></span><br><span class="line"><span class="comment"> * ***/</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">addDepartment</span>(<span class="params">data</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;/company/department&#x27;</span>,</span><br><span class="line">    data</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>确定方法-代码位置(<strong>src/views/department/components/add-dept.vue</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 点击确定时调用</span></span><br><span class="line">  <span class="title function_">btnOK</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">$refs</span>.<span class="property">addDept</span>.<span class="title function_">validate</span>(<span class="keyword">async</span> isOK =&gt; &#123;</span><br><span class="line">      <span class="keyword">if</span> (isOK) &#123;</span><br><span class="line">        <span class="keyword">await</span> <span class="title function_">addDepartment</span>(&#123; ...<span class="variable language_">this</span>.<span class="property">formData</span>, <span class="attr">pid</span>: <span class="variable language_">this</span>.<span class="property">currentNodeId</span> &#125;)</span><br><span class="line">        <span class="comment">// 通知父组件更新</span></span><br><span class="line">        <span class="variable language_">this</span>.$emit(<span class="string">&#x27;updateDepartment&#x27;</span>)</span><br><span class="line">        <span class="comment">// 提示消息</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$message</span>.<span class="title function_">success</span>(<span class="string">`新增部门成功`</span>)</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">close</span>()</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><ul><li>取消方法-代码位置(<strong>src/views/department/components/add-dept.vue</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">close</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">$refs</span>.<span class="property">addDept</span>.<span class="title function_">resetFields</span>() <span class="comment">// 重置表单</span></span><br><span class="line">      <span class="variable language_">this</span>.$emit(<span class="string">&#x27;update:showDialog&#x27;</span>, <span class="literal">false</span>)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><ul><li>父组件监听updateDepartment事件</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">add-dept</span> @<span class="attr">updateDepartment</span>=<span class="string">&quot;getDepartment&quot;</span> /&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="12-编辑部门—弹出层获取数据"><a href="#12-编辑部门—弹出层获取数据" class="headerlink" title="12.编辑部门—弹出层获取数据"></a>12.编辑部门—弹出层获取数据</h2><blockquote><p>编辑部门和新增部门会共用一个组件，也就是add-dept组件要支持两种场景-新增场景-编辑场景</p></blockquote><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022015210.png" alt="image.png"></p><ul><li>封装获取部门详情的API-代码位置(<strong>src/api/department.js</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取部门详情</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * ***/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">getDepartmentDetail</span>(<span class="params">id</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">`/company/department/<span class="subst">$&#123;id&#125;</span>`</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>点击编辑时，弹出层，通过ref获取组件实例，调用获取详情的方法-代码位置(<strong>src/views/department/index.vue</strong>)</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;add-dept ref=&quot;addDept&quot; :current-node-id=&quot;currentNodeId&quot; :show-dialog.sync=&quot;showDialog&quot; @updateDepartment=&quot;getDepartment&quot; /&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>调用子组件方法-代码位置(<strong>src/views/department/index.vue</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 操作部门方法</span></span><br><span class="line">   <span class="title function_">operateDept</span>(<span class="params">type, id</span>) &#123;</span><br><span class="line">     <span class="keyword">if</span> (type === <span class="string">&#x27;add&#x27;</span>) &#123;</span><br><span class="line">       <span class="comment">// 添加子部门</span></span><br><span class="line">       <span class="variable language_">this</span>.<span class="property">showDialog</span> = <span class="literal">true</span> <span class="comment">// 显示弹层</span></span><br><span class="line">       <span class="variable language_">this</span>.<span class="property">currentNodeId</span> = id</span><br><span class="line">     &#125; <span class="keyword">else</span> <span class="keyword">if</span> (type === <span class="string">&#x27;edit&#x27;</span>) &#123;</span><br><span class="line">       <span class="comment">// 编辑部门场景</span></span><br><span class="line">       <span class="variable language_">this</span>.<span class="property">showDialog</span> = <span class="literal">true</span></span><br><span class="line">       <span class="variable language_">this</span>.<span class="property">currentNodeId</span> = id <span class="comment">// 记录id 要用它获取数据</span></span><br><span class="line">       <span class="comment">// 更新props- 异步动作</span></span><br><span class="line">       <span class="comment">// 直接调用了子组件的方法 同步的方法</span></span><br><span class="line">       <span class="comment">// 要在子组件获取数据</span></span><br><span class="line">       <span class="comment">// 父组件调用子组件的方法来获取数据</span></span><br><span class="line">       <span class="variable language_">this</span>.$nextTick(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">         <span class="variable language_">this</span>.<span class="property">$refs</span>.<span class="property">addDept</span>.<span class="title function_">getDepartmentDetail</span>() <span class="comment">// this.$refs.addDept等同于子组件的this</span></span><br><span class="line">       &#125;)</span><br><span class="line">     &#125; </span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><blockquote><p>这里为什么要用$nextTick，因为弹出层之后紧接着要调用子组件方法，第一次弹出层时，里面的组件还未完成渲染，所以要等到showDialog这个属性设置的数据完成渲染之后才进行调用</p></blockquote><ul><li>子组件提供获取详情的方法-代码位置(<strong>src/views/department/components/add-dept.vue</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取组织的详情</span></span><br><span class="line">   <span class="keyword">async</span> <span class="title function_">getDepartmentDetail</span>(<span class="params"></span>) &#123;</span><br><span class="line">     <span class="variable language_">this</span>.<span class="property">formData</span> = <span class="keyword">await</span> <span class="title function_">getDepartmentDetail</span>(<span class="variable language_">this</span>.<span class="property">currentNodeId</span>)</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h2 id="13-编辑部门—编辑表单校验"><a href="#13-编辑部门—编辑表单校验" class="headerlink" title="13.编辑部门—编辑表单校验"></a>13.编辑部门—编辑表单校验</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022015342.png" alt="image.png"></p><blockquote><p>编辑部门表单校验和新增部门表单校验的区别就是编辑的数据已经在数据库存在了，必然是存在重复的</p></blockquote><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022015636.png" alt="image.png"></p><ul><li><p>编辑场景下排出自身-</p></li><li><p>检查部门编码-代码位置(<strong>src/views/department/components/add-dept.vue</strong>)</p></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">            <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span>,</span><br><span class="line">            <span class="comment">// 自定义校验模式</span></span><br><span class="line">            <span class="attr">validator</span>: <span class="title function_">async</span>(rule, value, callback) =&gt; &#123;</span><br><span class="line">              <span class="comment">// value就是输入的编码</span></span><br><span class="line">              <span class="keyword">let</span> result = <span class="keyword">await</span> <span class="title function_">getDepartment</span>()</span><br><span class="line">              <span class="comment">// 判断是否是编辑模式</span></span><br><span class="line">              <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">formData</span>.<span class="property">id</span>) &#123;</span><br><span class="line">                <span class="comment">// 编辑场景</span></span><br><span class="line">                result = result.<span class="title function_">filter</span>(<span class="function"><span class="params">item</span> =&gt;</span> item.<span class="property">id</span> !== <span class="variable language_">this</span>.<span class="property">formData</span>.<span class="property">id</span>)</span><br><span class="line">              &#125;</span><br><span class="line">              <span class="comment">// result数组中是否存在 value值</span></span><br><span class="line">              <span class="keyword">if</span> (result.<span class="title function_">some</span>(<span class="function"><span class="params">item</span> =&gt;</span> item.<span class="property">code</span> === value)) &#123;</span><br><span class="line">                <span class="title function_">callback</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;部门中已经有该编码了&#x27;</span>))</span><br><span class="line">              &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="title function_">callback</span>()</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure><ul><li>检查部门名称-代码位置(<strong>src/views/department/components/add-dept.vue</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">            <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span>,</span><br><span class="line">            <span class="comment">// 自定义校验模式</span></span><br><span class="line">            <span class="attr">validator</span>: <span class="title function_">async</span>(rule, value, callback) =&gt; &#123;</span><br><span class="line">              <span class="comment">// value就是输入的名称</span></span><br><span class="line">              <span class="keyword">let</span> result = <span class="keyword">await</span> <span class="title function_">getDepartment</span>()</span><br><span class="line">              <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">formData</span>.<span class="property">id</span>) &#123;</span><br><span class="line">                <span class="comment">// 编辑场景 排除自身</span></span><br><span class="line">                result = result.<span class="title function_">filter</span>(<span class="function"><span class="params">item</span> =&gt;</span> item.<span class="property">id</span> !== <span class="variable language_">this</span>.<span class="property">formData</span>.<span class="property">id</span>)</span><br><span class="line">              &#125;</span><br><span class="line">              <span class="comment">// result数组中是否存在 value值</span></span><br><span class="line">              <span class="keyword">if</span> (result.<span class="title function_">some</span>(<span class="function"><span class="params">item</span> =&gt;</span> item.<span class="property">name</span> === value)) &#123;</span><br><span class="line">                <span class="title function_">callback</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;部门中已经有该名称了&#x27;</span>))</span><br><span class="line">              &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="title function_">callback</span>()</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure><h2 id="14-编辑部门—确认取消"><a href="#14-编辑部门—确认取消" class="headerlink" title="14.编辑部门—确认取消"></a>14.编辑部门—确认取消</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022015695.png" alt="image.png"></p><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022043463.png" alt="image.png"></p><ul><li>封装更新部门的API-代码位置(<strong>src/api/department.js</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** *</span></span><br><span class="line"><span class="comment"> * 更新部门</span></span><br><span class="line"><span class="comment"> * ***/</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">updateDepartment</span>(<span class="params">data</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;put&#x27;</span>,</span><br><span class="line">    <span class="attr">url</span>: <span class="string">`/company/department/<span class="subst">$&#123;data.id&#125;</span>`</span>,</span><br><span class="line">    data</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>确认时区分当前时编辑还是新增场景-代码位置(<strong>src/views/department/components/add-dept.vue</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 点击确定时调用</span></span><br><span class="line">   <span class="title function_">btnOK</span>(<span class="params"></span>) &#123;</span><br><span class="line">     <span class="variable language_">this</span>.<span class="property">$refs</span>.<span class="property">addDept</span>.<span class="title function_">validate</span>(<span class="keyword">async</span> isOK =&gt; &#123;</span><br><span class="line">       <span class="keyword">if</span> (isOK) &#123;</span><br><span class="line">         <span class="keyword">let</span> msg = <span class="string">&#x27;新增&#x27;</span></span><br><span class="line">         <span class="comment">// 通过formData中id</span></span><br><span class="line">         <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">formData</span>.<span class="property">id</span>) &#123;</span><br><span class="line">           <span class="comment">// 编辑场景</span></span><br><span class="line">           msg = <span class="string">&#x27;更新&#x27;</span></span><br><span class="line">           <span class="keyword">await</span> <span class="title function_">updateDepartment</span>(<span class="variable language_">this</span>.<span class="property">formData</span>)</span><br><span class="line">         &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">           <span class="comment">// 新增场景</span></span><br><span class="line">           <span class="keyword">await</span> <span class="title function_">addDepartment</span>(&#123; ...<span class="variable language_">this</span>.<span class="property">formData</span>, <span class="attr">pid</span>: <span class="variable language_">this</span>.<span class="property">currentNodeId</span> &#125;)</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="comment">// 通知父组件更新</span></span><br><span class="line">         <span class="variable language_">this</span>.$emit(<span class="string">&#x27;updateDepartment&#x27;</span>)</span><br><span class="line">         <span class="comment">// 提示消息</span></span><br><span class="line">         <span class="variable language_">this</span>.<span class="property">$message</span>.<span class="title function_">success</span>(<span class="string">`<span class="subst">$&#123;msg&#125;</span>部门成功`</span>)</span><br><span class="line">         <span class="variable language_">this</span>.<span class="title function_">close</span>()</span><br><span class="line">       &#125;</span><br><span class="line">     &#125;)</span><br><span class="line">   &#125;,</span><br></pre></td></tr></table></figure><ul><li>取消时重置数据-代码位置(<strong>src/views/department/components/add-dept.vue</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">close</span>(<span class="params"></span>) &#123;</span><br><span class="line">     <span class="comment">// 修改父组件的值 子传父</span></span><br><span class="line">     <span class="comment">// resetFields 只能重置在模板中绑定的数据</span></span><br><span class="line">     <span class="variable language_">this</span>.<span class="property">formData</span> = &#123;</span><br><span class="line">       <span class="attr">code</span>: <span class="string">&#x27;&#x27;</span>, <span class="comment">// 部门编码</span></span><br><span class="line">       <span class="attr">introduce</span>: <span class="string">&#x27;&#x27;</span>, <span class="comment">// 部门介绍</span></span><br><span class="line">       <span class="attr">managerId</span>: <span class="string">&#x27;&#x27;</span>, <span class="comment">// 部门负责人id</span></span><br><span class="line">       <span class="attr">name</span>: <span class="string">&#x27;&#x27;</span>, <span class="comment">// 部门名称</span></span><br><span class="line">       <span class="attr">pid</span>: <span class="string">&#x27;&#x27;</span> <span class="comment">// 父级部门的id</span></span><br><span class="line">     &#125;</span><br><span class="line">     <span class="variable language_">this</span>.<span class="property">$refs</span>.<span class="property">addDept</span>.<span class="title function_">resetFields</span>() <span class="comment">// 重置表单</span></span><br><span class="line">     <span class="variable language_">this</span>.$emit(<span class="string">&#x27;update:showDialog&#x27;</span>, <span class="literal">false</span>)</span><br><span class="line">   &#125;,</span><br></pre></td></tr></table></figure><ul><li>使用计算属性生成当前显示的弹层标题-代码位置(<strong>src/views/department/components/add-dept.vue</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">computed</span>: &#123;</span><br><span class="line">  <span class="title function_">showTitle</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">formData</span>.<span class="property">id</span> ? <span class="string">&#x27;编辑部门&#x27;</span> : <span class="string">&#x27;新增部门&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>弹层标题使用计算属性-代码位置(<strong>src/views/department/components/add-dept.vue</strong>)</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-dialog :title=&quot;showTitle&quot; :visible=&quot;showDialog&quot; @close=&quot;close&quot;&gt;</span><br></pre></td></tr></table></figure><h2 id="15-删除部门"><a href="#15-删除部门" class="headerlink" title="15.删除部门"></a>15.删除部门</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022015596.png" alt="image.png"></p><ul><li>封装删除部门的API-代码位置(<strong>src/api/department.js</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 删除部门</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">delDepartment</span>(<span class="params">id</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;delete&#x27;</span>,</span><br><span class="line">    <span class="attr">url</span>: <span class="string">`/company/department/<span class="subst">$&#123;id&#125;</span>`</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>在删除场景下调用API删除-代码位置(<strong>src/views/department/index.vue</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 操作部门方法</span></span><br><span class="line">  <span class="title function_">operateDept</span>(<span class="params">type, id</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (type === <span class="string">&#x27;add&#x27;</span>) &#123;</span><br><span class="line">      <span class="comment">// 添加子部门</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">showDialog</span> = <span class="literal">true</span> <span class="comment">// 显示弹层</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">currentNodeId</span> = id</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (type === <span class="string">&#x27;edit&#x27;</span>) &#123;</span><br><span class="line">      <span class="comment">// 编辑部门场景</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">showDialog</span> = <span class="literal">true</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">currentNodeId</span> = id <span class="comment">// 记录id 要用它获取数据</span></span><br><span class="line">      <span class="comment">// 更新props- 异步动作</span></span><br><span class="line">      <span class="comment">// 直接调用了子组件的方法 同步的方法</span></span><br><span class="line">      <span class="comment">// 要在子组件获取数据</span></span><br><span class="line">      <span class="comment">// 父组件调用子组件的方法来获取数据</span></span><br><span class="line">      <span class="variable language_">this</span>.$nextTick(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$refs</span>.<span class="property">addDept</span>.<span class="title function_">getDepartmentDetail</span>() <span class="comment">// this.$refs.addDept等同于子组件的this</span></span><br><span class="line">      &#125;)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// 删除部门</span></span><br><span class="line">      <span class="variable language_">this</span>.$confirm(<span class="string">&#x27;您确认要删除该部门吗&#x27;</span>).<span class="title function_">then</span>(<span class="title function_">async</span>() =&gt; &#123;</span><br><span class="line">        <span class="keyword">await</span> <span class="title function_">delDepartment</span>(id)</span><br><span class="line">        <span class="comment">// 提示消息</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$message</span>.<span class="title function_">success</span>(<span class="string">&#x27;删除部门成功&#x27;</span>)</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">getDepartment</span>()</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h1 id="五、角色管理"><a href="#五、角色管理" class="headerlink" title="五、角色管理"></a>五、角色管理</h1><h2 id="1-搭建页面结构"><a href="#1-搭建页面结构" class="headerlink" title="1.搭建页面结构"></a>1.搭建页面结构</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022015287.png" alt="image.png"></p><ul><li>搭建角色管理的页面结构-代码位置(<strong>src/views/role/index.vue</strong>)</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;container&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;app-container&quot;&gt;</span><br><span class="line">      &lt;!-- 角色管理内容 --&gt;</span><br><span class="line">      &lt;div class=&quot;role-operate&quot;&gt;</span><br><span class="line">        &lt;el-button size=&quot;mini&quot; type=&quot;primary&quot;&gt;添加角色&lt;/el-button&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;!-- 放置table组件 --&gt;</span><br><span class="line">      &lt;el-table&gt;</span><br><span class="line">        &lt;!-- 放置列 --&gt;</span><br><span class="line">        &lt;el-table-column align=&quot;center&quot; width=&quot;200&quot; label=&quot;角色&quot; /&gt;</span><br><span class="line">        &lt;el-table-column align=&quot;center&quot; width=&quot;200&quot; label=&quot;启用&quot; /&gt;</span><br><span class="line">        &lt;el-table-column align=&quot;center&quot; label=&quot;描述&quot; /&gt;</span><br><span class="line">        &lt;el-table-column align=&quot;center&quot; label=&quot;操作&quot; /&gt;</span><br><span class="line">      &lt;/el-table&gt;</span><br><span class="line">      &lt;!-- 放置分页组件 --&gt;</span><br><span class="line">      &lt;el-row type=&quot;flex&quot; style=&quot;height:60px&quot; align=&quot;middle&quot; justify=&quot;end&quot;&gt;</span><br><span class="line">        &lt;!-- 放置分页组件 --&gt;</span><br><span class="line">        &lt;el-pagination layout=&quot;prev, pager, next&quot; /&gt;</span><br><span class="line">      &lt;/el-row&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><ul><li>样式-代码位置(<strong>src/views/role/index.vue</strong>)</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;style scoped&gt;</span><br><span class="line"><span class="selector-class">.role-operate</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="2-获取数据"><a href="#2-获取数据" class="headerlink" title="2.获取数据"></a>2.获取数据</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022015841.png" alt="image.png"> </p><ul><li>封装获取角色API-代码位置(<strong>src/api/role.js</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">&#x27;@/utils/request&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/** *</span></span><br><span class="line"><span class="comment"> * 获取角色列表</span></span><br><span class="line"><span class="comment"> * **/</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">getRoleList</span>(<span class="params">params</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;/sys/role&#x27;</span>,</span><br><span class="line">    params <span class="comment">// 查询参数</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>在初始化时调用API-赋值给数据-代码位置(<strong>src/views/role/index.vue</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; getRoleList &#125; <span class="keyword">from</span> <span class="string">&#x27;@/api/role&#x27;</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;Role&#x27;</span></span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;Role&#x27;</span>,</span><br><span class="line">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">list</span>: []</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">created</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">getRoleList</span>()</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">methods</span>: &#123;</span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">getRoleList</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> &#123; rows &#125; = <span class="keyword">await</span> <span class="title function_">getRoleList</span>()</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">list</span> = rows <span class="comment">// 赋值数据</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>绑定表格属性-代码位置(<strong>src/views/role/index.vue</strong>)</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-table</span> <span class="attr">:data</span>=<span class="string">&quot;list&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 放置列 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;name&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span> <span class="attr">width</span>=<span class="string">&quot;200&quot;</span> <span class="attr">label</span>=<span class="string">&quot;角色&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;state&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span> <span class="attr">width</span>=<span class="string">&quot;200&quot;</span> <span class="attr">label</span>=<span class="string">&quot;启用&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;description&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span> <span class="attr">label</span>=<span class="string">&quot;描述&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span> <span class="attr">label</span>=<span class="string">&quot;操作&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-table</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="3-表格自定义结构"><a href="#3-表格自定义结构" class="headerlink" title="3.表格自定义结构"></a>3.表格自定义结构</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022015037.png" alt="image.png"></p><ul><li>自定义启用列和操作列的结构-代码位置(<strong>src/views/role/index.vue</strong>)</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;state&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span> <span class="attr">width</span>=<span class="string">&quot;200&quot;</span> <span class="attr">label</span>=<span class="string">&quot;启用&quot;</span>&gt;</span></span><br><span class="line">          <span class="comment">&lt;!-- 自定义列结构 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-slot</span>=<span class="string">&quot;&#123; row &#125;&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span>&gt;</span>  &#123;&#123; row.state === 1 ? &quot;已启用&quot; : row.state === 0 ? &quot;未启用&quot; : &quot;无&quot; &#125;&#125; <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>自定义操作列结构-代码位置(<strong>src/views/role/index.vue</strong>)</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span> <span class="attr">label</span>=<span class="string">&quot;操作&quot;</span>&gt;</span></span><br><span class="line">          <span class="comment">&lt;!-- 放置操作按钮 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span>分配权限<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span>编辑<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="4-分页功能"><a href="#4-分页功能" class="headerlink" title="4.分页功能"></a>4.分页功能</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022016862.png" alt="image.png"><br>分页功能</p><ul><li>展示页码</li><li>切换分页获取数据</li></ul><p>分页组件属性</p><ul><li>当前页码</li><li>每页条数</li><li>总数</li></ul><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022016380.png" alt="image.png"> </p><ul><li>定义分页信息-代码位置(<strong>src/views/role/index.vue</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  data () &#123;</span><br><span class="line">    <span class="keyword">return</span>  &#123;</span><br><span class="line">      <span class="attr">pageParams</span>: &#123;</span><br><span class="line">          <span class="attr">page</span>: <span class="number">1</span>, <span class="comment">// 第几页</span></span><br><span class="line">          <span class="attr">pagesize</span>: <span class="number">5</span>, <span class="comment">// 每页多少条</span></span><br><span class="line">          <span class="attr">total</span>: <span class="number">0</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>绑定分页信息-代码位置(<strong>src/views/role/index.vue</strong>)</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">el-pagination</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:page-size</span>=<span class="string">&quot;pageParams.pagesize&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:current-page</span>=<span class="string">&quot;pageParams.page&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:total</span>=<span class="string">&quot;pageParams.total&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">layout</span>=<span class="string">&quot;prev, pager, next&quot;</span></span></span><br><span class="line"><span class="tag">      @<span class="attr">current-change</span>=<span class="string">&quot;changePage&quot;</span></span></span><br><span class="line"><span class="tag">/&gt;</span></span><br></pre></td></tr></table></figure><ul><li>初始化时将总数赋值-代码位置(<strong>src/views/role/index.vue</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="title function_">getRoleList</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; rows, total &#125; = <span class="keyword">await</span> <span class="title function_">getRoleList</span>(<span class="variable language_">this</span>.<span class="property">pageParams</span>)</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">list</span> = rows <span class="comment">// 赋值数据</span></span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">pageParams</span>.<span class="property">total</span> = total</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><ul><li>切换分页时，获取对应页码的数据-代码位置(<strong>src/views/role/index.vue</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 切换分页时 请求新的数据</span></span><br><span class="line"><span class="title function_">changePage</span>(<span class="params">newPage</span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">pageParams</span>.<span class="property">page</span> = newPage <span class="comment">// 赋值当前页码</span></span><br><span class="line">  <span class="variable language_">this</span>.<span class="title function_">getRoleList</span>()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-新增功能弹层"><a href="#5-新增功能弹层" class="headerlink" title="5.新增功能弹层"></a>5.新增功能弹层</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022016001.png" alt="image.png"></p><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022016010.png" alt="image.png"></p><ul><li>放置弹层组件-代码位置(<strong>src/views/role/index.vue</strong>)</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-dialog</span> <span class="attr">width</span>=<span class="string">&quot;500px&quot;</span> <span class="attr">title</span>=<span class="string">&quot;新增角色&quot;</span> <span class="attr">:visible.sync</span>=<span class="string">&quot;showDialog&quot;</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 表单内容 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form</span> <span class="attr">label-width</span>=<span class="string">&quot;120px&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;角色名称&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">style</span>=<span class="string">&quot;width:300px&quot;</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;启用&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-switch</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;角色描述&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">type</span>=<span class="string">&quot;textarea&quot;</span> <span class="attr">:rows</span>=<span class="string">&quot;3&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width:300px&quot;</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-row</span> <span class="attr">type</span>=<span class="string">&quot;flex&quot;</span> <span class="attr">justify</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;12&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span>&gt;</span>确定<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span>&gt;</span>取消<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-dialog</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>声明变量控制弹层显示-代码位置(<strong>src/views/role/index.vue</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  data () &#123;</span><br><span class="line">    <span class="keyword">return</span>  &#123;</span><br><span class="line">      <span class="attr">showDialog</span>: <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>点击按钮弹出层-代码位置(<strong>src/views/role/index.vue</strong>)</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-button</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;showDialog = true&quot;</span>&gt;</span>添加角色<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>有同学可能会问，为啥组织架构要新增和编辑要单独封装一个组件，而角色管理不用呢?这里面有什么原因和讲究吗？ 其实在企业开发过程中，封装组件并不是必须的，当一个业务或者需求明确，并且会有复用的场景下，封装组件会更佳规范一些，而有的企业为了提升开发效率，速度优先, 不封装组件的情况也是很常见的。</p></blockquote><h2 id="6-表单数据校验"><a href="#6-表单数据校验" class="headerlink" title="6.表单数据校验"></a>6.表单数据校验</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022016081.png" alt="image.png"></p><ul><li>声明数据和规则-代码位置(<strong>src/views/role/index.vue</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span>  &#123;</span><br><span class="line">  data () &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">roleForm</span>: &#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        <span class="attr">description</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        <span class="attr">state</span>: <span class="number">0</span> <span class="comment">// 默认未1启用 关闭 0 打开1</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">rules</span>: &#123;</span><br><span class="line">        <span class="attr">name</span>: [&#123; <span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">&#x27;角色名称不能为空&#x27;</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span> &#125;],</span><br><span class="line">        <span class="attr">description</span>: [&#123; <span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">&#x27;角色描述不能为空&#x27;</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span> &#125;]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>绑定表单校验和数据-代码位置(<strong>src/views/role/index.vue</strong>)</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-form</span> <span class="attr">ref</span>=<span class="string">&quot;roleForm&quot;</span> <span class="attr">:model</span>=<span class="string">&quot;roleForm&quot;</span> <span class="attr">:rules</span>=<span class="string">&quot;rules&quot;</span> <span class="attr">label-width</span>=<span class="string">&quot;120px&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">prop</span>=<span class="string">&quot;name&quot;</span> <span class="attr">label</span>=<span class="string">&quot;角色名称&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;roleForm.name&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width:300px&quot;</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;启用&quot;</span>&gt;</span></span><br><span class="line">          <span class="comment">&lt;!-- 如果不需要校验 就不需要写 prop属性 --&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-switch</span> <span class="attr">v-model</span>=<span class="string">&quot;roleForm.state&quot;</span> <span class="attr">:active-value</span>=<span class="string">&quot;1&quot;</span> <span class="attr">:inactive-value</span>=<span class="string">&quot;0&quot;</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">prop</span>=<span class="string">&quot;description&quot;</span> <span class="attr">label</span>=<span class="string">&quot;角色描述&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;roleForm.description&quot;</span> <span class="attr">type</span>=<span class="string">&quot;textarea&quot;</span> <span class="attr">:rows</span>=<span class="string">&quot;3&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width:300px&quot;</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">        </span><br></pre></td></tr></table></figure><h2 id="7-新增角色—确定取消"><a href="#7-新增角色—确定取消" class="headerlink" title="7.新增角色—确定取消"></a>7.新增角色—确定取消</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022016352.png" alt="image.png"></p><ul><li>封装新增角色的API-代码位置(<strong>src/api/role.js</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** **</span></span><br><span class="line"><span class="comment"> * 新增角色</span></span><br><span class="line"><span class="comment"> * ***/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">addRole</span>(<span class="params">data</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;/sys/role&#x27;</span>,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">    data</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>确定和取消方法</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">btnOK</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">$refs</span>.<span class="property">roleForm</span>.<span class="title function_">validate</span>(<span class="keyword">async</span> isOK =&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span> (isOK) &#123;</span><br><span class="line">          <span class="keyword">await</span> <span class="title function_">addRole</span>(<span class="variable language_">this</span>.<span class="property">roleForm</span>)</span><br><span class="line">          <span class="variable language_">this</span>.<span class="property">$message</span>.<span class="title function_">success</span>(<span class="string">&#x27;新增角色成功&#x27;</span>)</span><br><span class="line">          <span class="variable language_">this</span>.<span class="title function_">getRoleList</span>()</span><br><span class="line">          <span class="variable language_">this</span>.<span class="title function_">btnCancel</span>()</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line"><span class="title function_">btnCancel</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">$refs</span>.<span class="property">roleForm</span>.<span class="title function_">resetFields</span>() <span class="comment">// 重置表单数据</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">showDialog</span> = <span class="literal">false</span> <span class="comment">// 关闭弹层</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><ul><li>弹层绑定关闭方法</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-dialog</span> <span class="attr">width</span>=<span class="string">&quot;500px&quot;</span> <span class="attr">title</span>=<span class="string">&quot;新增角色&quot;</span> <span class="attr">:visible.sync</span>=<span class="string">&quot;showDialog&quot;</span> @<span class="attr">close</span>=<span class="string">&quot;btnCancel&quot;</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="8-编辑角色—进入行内编辑"><a href="#8-编辑角色—进入行内编辑" class="headerlink" title="8.编辑角色—进入行内编辑"></a>8.编辑角色—进入行内编辑</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022016171.png" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/8435673/1677752762094-a0a67f8f-852d-4562-b351-e13bb19d5546.png#averageHue=%23c6daec&amp;clientId=u437893ff-a4ad-4&amp;from=paste&amp;height=124&amp;id=ue23dbb1e&amp;name=image.png&amp;originHeight=248&amp;originWidth=2046&amp;originalType=binary&amp;ratio=2&amp;rotation=0&amp;showTitle=false&amp;size=37554&amp;status=done&amp;style=none&amp;taskId=u094ccf42-5d1a-4fdc-bf33-a8c74276aea&amp;title=&amp;width=1023" alt="image.png"></p><ul><li>获取数据之后针对每个数据定义标识-使用$set-代码位置(<strong>src/views/role/index.vue</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 针对每一行数据添加一个编辑标记</span></span><br><span class="line">     <span class="variable language_">this</span>.<span class="property">list</span>.<span class="title function_">forEach</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">       <span class="comment">// item.isEdit = false // 添加一个属性 初始值为false</span></span><br><span class="line">       <span class="comment">// 数据响应式的问题  数据变化 视图更新</span></span><br><span class="line">       <span class="comment">// 添加的动态属性 不具备响应式特点</span></span><br><span class="line">       <span class="comment">// this.$set(目标对象, 属性名称, 初始值) 可以针对目标对象 添加的属性 添加响应式</span></span><br><span class="line">       <span class="variable language_">this</span>.$set(item, <span class="string">&#x27;isEdit&#x27;</span>, <span class="literal">false</span>)</span><br><span class="line">     &#125;)</span><br></pre></td></tr></table></figure><blockquote><p>为什么不使用item.isEdit = false , 因为动态添加的属性不具备响应式的特点，如果想要具备响应式，可以使用$set</p></blockquote><ul><li>点击编辑时，将当前行的标记isEdit设置为true-代码位置(<strong>src/views/role/index.vue</strong>)</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-table-column align=&quot;center&quot; label=&quot;操作&quot;&gt;</span><br><span class="line">    &lt;template&gt;</span><br><span class="line">        &lt;!-- 非编辑状态 --&gt;</span><br><span class="line">        &lt;el-button size=&quot;mini&quot; type=&quot;text&quot;&gt;分配权限&lt;/el-button&gt;</span><br><span class="line">        &lt;el-button size=&quot;mini&quot; type=&quot;text&quot; @click=&quot;btnEditRow(row)&quot;&gt;编辑&lt;/el-button&gt;</span><br><span class="line">        &lt;el-button size=&quot;mini&quot; type=&quot;text&quot;&gt;删除&lt;/el-button&gt;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">&lt;/el-table-column&gt;</span><br></pre></td></tr></table></figure><ul><li>点击编辑的方法-代码位置(<strong>src/views/role/index.vue</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 点击编辑行</span></span><br><span class="line"><span class="title function_">btnEditRow</span>(<span class="params">row</span>) &#123;</span><br><span class="line">  row.<span class="property">isEdit</span> = <span class="literal">true</span> <span class="comment">// 改变行的编辑状态</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>表格列中根据当前的isEdit标记-渲染结构-代码位置(<strong>src/views/role/index.vue</strong>)</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;name&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span> <span class="attr">width</span>=<span class="string">&quot;200&quot;</span> <span class="attr">label</span>=<span class="string">&quot;角色&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-slot</span>=<span class="string">&quot;&#123; row &#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 条件判断 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-if</span>=<span class="string">&quot;row.isEdit&quot;</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-else</span>&gt;</span>&#123;&#123; row.name &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;state&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span> <span class="attr">width</span>=<span class="string">&quot;200&quot;</span> <span class="attr">label</span>=<span class="string">&quot;启用&quot;</span>&gt;</span></span><br><span class="line">          <span class="comment">&lt;!-- 自定义列结构 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-slot</span>=<span class="string">&quot;&#123; row &#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-switch</span> <span class="attr">v-if</span>=<span class="string">&quot;row.isEdit&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-else</span>&gt;</span>  &#123;&#123; row.state === 1 ? &quot;已启用&quot; : row.state === 0 ? &quot;未启用&quot; : &quot;无&quot; &#125;&#125; <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;description&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span> <span class="attr">label</span>=<span class="string">&quot;描述&quot;</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-slot</span>=<span class="string">&quot;&#123; row &#125;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-if</span>=<span class="string">&quot;row.isEdit&quot;</span> <span class="attr">type</span>=<span class="string">&quot;textarea&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-else</span>&gt;</span>&#123;&#123; row.description &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span> <span class="attr">label</span>=<span class="string">&quot;操作&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-slot</span>=<span class="string">&quot;&#123; row &#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-if</span>=<span class="string">&quot;row.isEdit&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 编辑状态 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span>&gt;</span>确定<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span>&gt;</span>取消<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-else</span>&gt;</span></span><br><span class="line">              <span class="comment">&lt;!-- 非编辑状态 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span>分配权限<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;btnEditRow(row)&quot;</span>&gt;</span>编辑<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>$set的应用</p></blockquote><ul><li>this.$set(目标对象, 属性名称, 初始值 ) </li><li>等价于 Vue.set(目标对象, 属性名称, 初始值)</li><li>向响应式对象中添加一个属性，并确保这个新属性同样是响应式的，且触发视图更新。</li></ul><h2 id="9-行内编辑—数据缓存"><a href="#9-行内编辑—数据缓存" class="headerlink" title="9.行内编辑—数据缓存"></a>9.行内编辑—数据缓存</h2><blockquote><p>为什么要做数据缓存？</p></blockquote><p>答： 因为编辑时，可以取消会滚到之前的状态，所以编辑时的数据是临时的数据。</p><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022017750.png" alt="image.png"><br>如图，editRow的数据是针对当前行的数据做了一份拷贝，针对这个拷贝，我们可以随意修改。</p><ul><li>初始化时缓存数据-代码位置(<strong>src/views/role/index.vue</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">  <span class="variable language_">this</span>.<span class="property">list</span>.<span class="title function_">forEach</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// item.isEdit = false // 添加一个属性 初始值为false</span></span><br><span class="line">      <span class="comment">// 数据响应式的问题  数据变化 视图更新</span></span><br><span class="line">      <span class="comment">// 添加的动态属性 不具备响应式特点</span></span><br><span class="line">      <span class="comment">// this.$set(目标对象, 属性名称, 初始值) 可以针对目标对象 添加的属性 添加响应式</span></span><br><span class="line">      <span class="variable language_">this</span>.$set(item, <span class="string">&#x27;isEdit&#x27;</span>, <span class="literal">false</span>)</span><br><span class="line">      <span class="variable language_">this</span>.$set(item, <span class="string">&#x27;editRow&#x27;</span>, &#123;</span><br><span class="line">        <span class="attr">name</span>: item.<span class="property">name</span>,</span><br><span class="line">        <span class="attr">state</span>: item.<span class="property">state</span>,</span><br><span class="line">        <span class="attr">description</span>: item.<span class="property">description</span></span><br><span class="line">      &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>点击编辑时更新缓存数据-代码位置(<strong>src/views/role/index.vue</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">btnEditRow</span>(<span class="params">row</span>) &#123;</span><br><span class="line">      row.<span class="property">isEdit</span> = <span class="literal">true</span> <span class="comment">// 改变行的编辑状态</span></span><br><span class="line">      <span class="comment">// 更新缓存数据</span></span><br><span class="line">      row.<span class="property">editRow</span>.<span class="property">name</span> = row.<span class="property">name</span></span><br><span class="line">      row.<span class="property">editRow</span>.<span class="property">state</span> = row.<span class="property">state</span></span><br><span class="line">      row.<span class="property">editRow</span>.<span class="property">description</span> = row.<span class="property">description</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>将编辑时的表单双向绑定缓存数据-代码位置(<strong>src/views/role/index.vue</strong>)</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;name&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span> <span class="attr">width</span>=<span class="string">&quot;200&quot;</span> <span class="attr">label</span>=<span class="string">&quot;角色&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-slot</span>=<span class="string">&quot;&#123; row &#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 条件判断 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-if</span>=<span class="string">&quot;row.isEdit&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;row.editRow.name&quot;</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-else</span>&gt;</span>&#123;&#123; row.name &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;state&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span> <span class="attr">width</span>=<span class="string">&quot;200&quot;</span> <span class="attr">label</span>=<span class="string">&quot;启用&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 自定义列结构 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-slot</span>=<span class="string">&quot;&#123; row &#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 开 1 关 0 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-switch</span> <span class="attr">v-if</span>=<span class="string">&quot;row.isEdit&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;row.editRow.state&quot;</span> <span class="attr">:active-value</span>=<span class="string">&quot;1&quot;</span> <span class="attr">:inactive-value</span>=<span class="string">&quot;0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-else</span>&gt;</span>  &#123;&#123; row.state === 1 ? &quot;已启用&quot; : row.state === 0 ? &quot;未启用&quot; : &quot;无&quot; &#125;&#125; <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;description&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span> <span class="attr">label</span>=<span class="string">&quot;描述&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-slot</span>=<span class="string">&quot;&#123; row &#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-if</span>=<span class="string">&quot;row.isEdit&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;row.editRow.description&quot;</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span> <span class="attr">type</span>=<span class="string">&quot;textarea&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-else</span>&gt;</span>&#123;&#123; row.description &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="10-编辑角色—确定取消"><a href="#10-编辑角色—确定取消" class="headerlink" title="10.编辑角色—确定取消"></a>10.编辑角色—确定取消</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022017308.png" alt="image.png"></p><ul><li>封装更新角色信息的API-代码位置(<strong>src/api/role.js</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 更新角色</span></span><br><span class="line"><span class="comment"> * ***/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">updateRole</span>(<span class="params">data</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">`/sys/role/<span class="subst">$&#123;data.id&#125;</span>`</span>,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;put&#x27;</span>,</span><br><span class="line">    data</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>确定方法-代码位置(<strong>src/views/role/index.vue</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-button type=<span class="string">&quot;primary&quot;</span> size=<span class="string">&quot;mini&quot;</span> @click=<span class="string">&quot;btnEditOK(row)&quot;</span>&gt;确定&lt;/el-button&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 点击确定时触发</span></span><br><span class="line">    <span class="keyword">async</span>  <span class="title function_">btnEditOK</span>(<span class="params">row</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (row.<span class="property">editRow</span>.<span class="property">name</span> &amp;&amp; row.<span class="property">editRow</span>.<span class="property">description</span>) &#123;</span><br><span class="line">        <span class="comment">// 下一步操作</span></span><br><span class="line">        <span class="keyword">await</span> <span class="title function_">updateRole</span>(&#123; ...row.<span class="property">editRow</span>, <span class="attr">id</span>: row.<span class="property">id</span> &#125;)</span><br><span class="line">        <span class="comment">// 更新成功</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$message</span>.<span class="title function_">success</span>(<span class="string">&#x27;更新角色成功&#x27;</span>)</span><br><span class="line">        <span class="comment">// 更新显示数据  退出编辑状态</span></span><br><span class="line">        <span class="comment">// row.name = row.editRow.name // eslint的一校验 误判</span></span><br><span class="line">        <span class="comment">// Object.assign(target, source)</span></span><br><span class="line">        <span class="title class_">Object</span>.<span class="title function_">assign</span>(row, &#123;</span><br><span class="line">          ...row.<span class="property">editRow</span>,</span><br><span class="line">          <span class="attr">isEdit</span>: <span class="literal">false</span> <span class="comment">// 退出编辑模式</span></span><br><span class="line">        &#125;) <span class="comment">// 规避eslint的误判</span></span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$message</span>.<span class="title function_">warning</span>(<span class="string">&#x27;角色和描述不能为空&#x27;</span>)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意： 这里既然更新成功了，要把缓存数据回显到页面上，并且关闭编辑模式</p></blockquote><ul><li>取消方法-代码位置(<strong>src/views/role/index.vue</strong>)</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-button size=&quot;mini&quot; @click=&quot;row.isEdit = false&quot;&gt;取消&lt;/el-button&gt;</span><br></pre></td></tr></table></figure><h2 id="11-删除角色"><a href="#11-删除角色" class="headerlink" title="11.删除角色"></a>11.删除角色</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022017063.png" alt="image.png"> </p><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022017112.png" alt="image.png"></p><ul><li>封装删除角色的API-代码位置(<strong>src/api/role.js</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** *</span></span><br><span class="line"><span class="comment"> * 删除角色</span></span><br><span class="line"><span class="comment"> * **/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">delRole</span>(<span class="params">id</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">`/sys/role/<span class="subst">$&#123;id&#125;</span>`</span>,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;delete&#x27;</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>在删除位置加入气泡框-代码位置(<strong>src/views/role/index.vue</strong>)</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-popconfirm</span> <span class="attr">title</span>=<span class="string">&quot;这是一段内容确定删除吗？&quot;</span> @<span class="attr">onConfirm</span>=<span class="string">&quot;confirmDel(row.id)&quot;</span> &gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">slot</span>=<span class="string">&quot;reference&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-left:10px&quot;</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">el-popconfirm</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>注意：这里element-ui文档有点问题，el-popconfirm的确认事件是onConfirm，但是文档上写的是confirm事件，这里需要注意</p></blockquote><ul><li>删除方法-代码位置(<strong>src/views/role/index.vue</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">async</span>  <span class="title function_">confirmDel</span>(<span class="params">id</span>) &#123;</span><br><span class="line">      <span class="keyword">await</span> <span class="title function_">delRole</span>(id) <span class="comment">// 后端删除</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">$message</span>.<span class="title function_">success</span>(<span class="string">&#x27;删除角色成功&#x27;</span>)</span><br><span class="line">      <span class="comment">// 删除的如果是最后一个</span></span><br><span class="line">      <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">list</span>.<span class="property">length</span> === <span class="number">1</span>) <span class="variable language_">this</span>.<span class="property">pageParams</span>.<span class="property">page</span>--</span><br><span class="line">      <span class="variable language_">this</span>.<span class="title function_">getRoleList</span>()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="六、员工管理"><a href="#六、员工管理" class="headerlink" title="六、员工管理"></a>六、员工管理</h1><h2 id="1-页面结构"><a href="#1-页面结构" class="headerlink" title="1.页面结构"></a>1.页面结构</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022017858.png" alt="image.png"></p><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022017147.png" alt="image.png"> </p><ul><li>基本的页面结构-代码位置(<strong>src/views/employee/index.vue</strong>)</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;container&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;app-container&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;left&quot;&gt;</span><br><span class="line">        &lt;el-input style=&quot;margin-bottom:10px&quot; type=&quot;text&quot; prefix-icon=&quot;el-icon-search&quot; size=&quot;small&quot; placeholder=&quot;输入员工姓名全员搜索&quot; /&gt;</span><br><span class="line">        &lt;!-- 树形组件 --&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div class=&quot;right&quot;&gt;</span><br><span class="line">        &lt;el-row class=&quot;opeate-tools&quot; type=&quot;flex&quot; justify=&quot;end&quot;&gt;</span><br><span class="line">          &lt;el-button size=&quot;mini&quot; type=&quot;primary&quot;&gt;添加员工&lt;/el-button&gt;</span><br><span class="line">          &lt;el-button size=&quot;mini&quot;&gt;excel导入&lt;/el-button&gt;</span><br><span class="line">          &lt;el-button size=&quot;mini&quot;&gt;excel导出&lt;/el-button&gt;</span><br><span class="line">        &lt;/el-row&gt;</span><br><span class="line">        &lt;!-- 表格组件 --&gt;</span><br><span class="line">        &lt;!-- 分页 --&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#x27;Employee&#x27;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;scss&quot; scoped&gt;</span><br><span class="line">.app-container &#123;</span><br><span class="line">  background: #fff;</span><br><span class="line">  display: flex;</span><br><span class="line">  .left &#123;</span><br><span class="line">    width: 280px;</span><br><span class="line">    padding: 20px;</span><br><span class="line">    border-right: 1px solid #eaeef4;</span><br><span class="line">  &#125;</span><br><span class="line">  .right &#123;</span><br><span class="line">    flex: 1;</span><br><span class="line">    padding: 20px;</span><br><span class="line">    .opeate-tools &#123;</span><br><span class="line">      margin:10px ;</span><br><span class="line">    &#125;</span><br><span class="line">    .username &#123;</span><br><span class="line">      height: 30px;</span><br><span class="line">      width: 30px;</span><br><span class="line">      line-height: 30px;</span><br><span class="line">      text-align: center;</span><br><span class="line">      border-radius: 50%;</span><br><span class="line">      color: #fff;</span><br><span class="line">      background: #04C9BE;</span><br><span class="line">      font-size: 12px;</span><br><span class="line">      display:inline-block;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="2-左侧树的加载"><a href="#2-左侧树的加载" class="headerlink" title="2.左侧树的加载"></a>2.左侧树的加载</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022017747.png" alt="image.png"> </p><ul><li>定义树组件需要的数据-代码位置(<strong>src/views/employee/index.vue</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">depts</span>: [], <span class="comment">// 组织数据</span></span><br><span class="line">      <span class="attr">defaultProps</span>: &#123;</span><br><span class="line">        <span class="attr">label</span>: <span class="string">&#x27;name&#x27;</span>,</span><br><span class="line">        <span class="attr">children</span>: <span class="string">&#x27;children&#x27;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>放置树形组件-代码位置(<strong>src/views/employee/index.vue</strong>)</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-tree</span><br><span class="line">          :data=&quot;depts&quot;</span><br><span class="line">          :props=&quot;defaultProps&quot;</span><br><span class="line">          default-expand-all</span><br><span class="line">          :expand-on-click-node=&quot;false&quot;</span><br><span class="line">          highlight-current</span><br><span class="line">  /&gt;</span><br></pre></td></tr></table></figure><ul><li>初始化时加载数据转化树形-代码位置(<strong>src/views/employee/index.vue</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">created</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="title function_">getDepartment</span>()</span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">methods</span>: &#123;</span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">getDepartment</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 递归方法 将列表转化成树形</span></span><br><span class="line">    <span class="comment">// let result = await getDepartment()</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">depts</span> = <span class="title function_">transListToTreeData</span>(<span class="keyword">await</span> <span class="title function_">getDepartment</span>(), <span class="number">0</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-选中首个节点"><a href="#3-选中首个节点" class="headerlink" title="3.选中首个节点"></a>3.选中首个节点</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022018909.png" alt="image.png"> </p><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022018606.png" alt="image.png"></p><ul><li>在data中声明一个记录id的参数-代码位置(<strong>src/views/employee/index.vue</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">data () &#123;</span><br><span class="line">  <span class="keyword">return</span>  &#123;</span><br><span class="line">    <span class="comment">// 存储查询参数</span></span><br><span class="line">      <span class="attr">queryParams</span>: &#123;</span><br><span class="line">        <span class="attr">departmentId</span>: <span class="literal">null</span></span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>为什么要放在queryParams中，因为后面的查询会有很多查询条件，到时候查询条件都会聚合到一起，所以使用一个公共的对象来管理更方便和合适</p></blockquote><ul><li>初始化时首个id节点，并且选中-代码位置(<strong>src/views/employee/index.vue</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">methods</span>: &#123;</span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">getDepartment</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="comment">// 递归方法 将列表转化成树形</span></span><br><span class="line">      <span class="comment">// let result = await getDepartment()</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">depts</span> = <span class="title function_">transListToTreeData</span>(<span class="keyword">await</span> <span class="title function_">getDepartment</span>(), <span class="number">0</span>)</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">queryParams</span>.<span class="property">departmentId</span> = <span class="variable language_">this</span>.<span class="property">depts</span>[<span class="number">0</span>].<span class="property">id</span></span><br><span class="line">      <span class="comment">// 设置选中节点</span></span><br><span class="line">      <span class="comment">// 树组件渲染是异步的 等到更新完毕</span></span><br><span class="line">      <span class="variable language_">this</span>.$nextTick(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 此时意味着树渲染完毕</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$refs</span>.<span class="property">deptTree</span>.<span class="title function_">setCurrentKey</span>(<span class="variable language_">this</span>.<span class="property">queryParams</span>.<span class="property">departmentId</span>)</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><blockquote><p>为什么使用$nextTick，因为我们设置完树形之后立刻选中首个节点，此时更新还没有完成，必须等待更新完成后，再去选中首个节点，所以需要使用$nextTick</p></blockquote><ul><li>监听树组件的节点切换事件-代码位置(<strong>src/views/employee/index.vue</strong>)</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-tree</span></span></span><br><span class="line"><span class="tag">         <span class="attr">ref</span>=<span class="string">&quot;deptTree&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">node-key</span>=<span class="string">&quot;id&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">:data</span>=<span class="string">&quot;depts&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">:props</span>=<span class="string">&quot;defaultProps&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">default-expand-all</span></span></span><br><span class="line"><span class="tag">         <span class="attr">:expand-on-click-node</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">highlight-current</span></span></span><br><span class="line"><span class="tag">         @<span class="attr">current-change</span>=<span class="string">&quot;selectNode&quot;</span></span></span><br><span class="line"><span class="tag"> /&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>这里需要明白，需要给定node-key属性，否则setCurrentKey方法不知道设置的是哪个字段的值</p></blockquote><ul><li>切换节点时再次记录id-代码位置(<strong>src/views/employee/index.vue</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">selectNode</span>(<span class="params">node</span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">queryParams</span>.<span class="property">departmentId</span> = node.<span class="property">id</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-员工列表结构"><a href="#4-员工列表结构" class="headerlink" title="4.员工列表结构"></a>4.员工列表结构</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022018205.png" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/8435673/1677825898302-a01e05a6-8b83-47fd-901f-7030b9750138.png#averageHue=%23fefefe&amp;clientId=u37856cab-f36d-4&amp;from=paste&amp;height=45&amp;id=u3b973573&amp;name=image.png&amp;originHeight=235&amp;originWidth=1280&amp;originalType=binary&amp;ratio=2&amp;rotation=0&amp;showTitle=false&amp;size=1205451&amp;status=done&amp;style=none&amp;taskId=u457f4e2e-c2f6-49b3-8924-d0ad8cceff4&amp;title=&amp;width=243" alt="image.png"></p><ul><li>右侧列表页面结构-代码位置(<strong>src/views/employee/index.vue</strong>)</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span> <span class="attr">label</span>=<span class="string">&quot;头像&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">&quot;姓名&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">&quot;手机号&quot;</span> <span class="attr">sortable</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">&quot;工号&quot;</span> <span class="attr">sortable</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">&quot;聘用形式&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">&quot;部门&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">&quot;入职时间&quot;</span> <span class="attr">sortable</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">&quot;操作&quot;</span> <span class="attr">width</span>=<span class="string">&quot;280px&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span>查看<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span>角色<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-table</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 分页 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-row</span> <span class="attr">style</span>=<span class="string">&quot;height: 60px&quot;</span> <span class="attr">align</span>=<span class="string">&quot;middle&quot;</span> <span class="attr">type</span>=<span class="string">&quot;flex&quot;</span> <span class="attr">justify</span>=<span class="string">&quot;end&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-pagination</span></span></span><br><span class="line"><span class="tag">        <span class="attr">layout</span>=<span class="string">&quot;total,prev, pager, next&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">:total</span>=<span class="string">&quot;1000&quot;</span></span></span><br><span class="line"><span class="tag">     /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="5-获取员工数据"><a href="#5-获取员工数据" class="headerlink" title="5.获取员工数据"></a>5.获取员工数据</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022018137.png" alt="image.png"></p><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022018428.png" alt="image.png"> </p><blockquote><p>第一次加载之后 或者是切换节点之后，都要去根据点击的节点去查询员工的数据</p></blockquote><ul><li>封装获取员工数据的API-代码位置(<strong>src/api/employee.js</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">getEmployeeList</span>(<span class="params">params</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;/sys/user&#x27;</span>,</span><br><span class="line">    params <span class="comment">// 地址参数 查询参数</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>声明一个list数据进行接受list-代码位置(<strong>src/views/employee/index.vue</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">data () &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="attr">list</span>: []</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>初始化后获取右侧表格数据-代码位置(<strong>src/views/employee/index.vue</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">methods</span>: &#123;</span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">getDepartment</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="comment">// 递归方法 将列表转化成树形</span></span><br><span class="line">      <span class="comment">// let result = await getDepartment()</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">depts</span> = <span class="title function_">transListToTreeData</span>(<span class="keyword">await</span> <span class="title function_">getDepartment</span>(), <span class="number">0</span>)</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">queryParams</span>.<span class="property">departmentId</span> = <span class="variable language_">this</span>.<span class="property">depts</span>[<span class="number">0</span>].<span class="property">id</span></span><br><span class="line">      <span class="comment">// 设置选中节点</span></span><br><span class="line">      <span class="comment">// 树组件渲染是异步的 等到更新完毕</span></span><br><span class="line">      <span class="variable language_">this</span>.$nextTick(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 此时意味着树渲染完毕</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$refs</span>.<span class="property">deptTree</span>.<span class="title function_">setCurrentKey</span>(<span class="variable language_">this</span>.<span class="property">queryParams</span>.<span class="property">departmentId</span>)</span><br><span class="line">      &#125;)</span><br><span class="line">      <span class="comment">// 这个时候参数 记录了id</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="title function_">getEmployeeList</span>()</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 获取员工列表的方法</span></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">getEmployeeList</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> &#123; rows &#125; = <span class="keyword">await</span> <span class="title function_">getEmployeeList</span>(<span class="variable language_">this</span>.<span class="property">queryParams</span>)</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">list</span> = rows</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><ul><li>切换节点时，获取右侧表格数据-代码位置(<strong>src/views/employee/index.vue</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">selectNode</span>(<span class="params">node</span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">queryParams</span>.<span class="property">departmentId</span> = node.<span class="property">id</span> <span class="comment">// 重新记录了参数</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="title function_">getEmployeeList</span>()</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><ul><li>绑定表格-代码位置(<strong>src/views/employee/index.vue</strong>)</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-table</span> <span class="attr">:data</span>=<span class="string">&quot;list&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;staffPhoto&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span> <span class="attr">label</span>=<span class="string">&quot;头像&quot;</span> /&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;username&quot;</span> <span class="attr">label</span>=<span class="string">&quot;姓名&quot;</span> /&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;mobile&quot;</span> <span class="attr">label</span>=<span class="string">&quot;手机号&quot;</span> <span class="attr">sortable</span> /&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;workNumber&quot;</span> <span class="attr">label</span>=<span class="string">&quot;工号&quot;</span> <span class="attr">sortable</span> /&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;formOfEmployment&quot;</span> <span class="attr">label</span>=<span class="string">&quot;聘用形式&quot;</span> /&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;departmentName&quot;</span> <span class="attr">label</span>=<span class="string">&quot;部门&quot;</span> /&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;timeOfEntry&quot;</span> <span class="attr">label</span>=<span class="string">&quot;入职时间&quot;</span> <span class="attr">sortable</span> /&gt;</span></span><br><span class="line">          ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">el-table</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="6-头像和聘用形式的处理"><a href="#6-头像和聘用形式的处理" class="headerlink" title="6.头像和聘用形式的处理"></a>6.头像和聘用形式的处理</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022018468.png" alt="image.png"></p><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022018322.png" alt="image.png"> </p><ul><li>头像的设置-代码位置(<strong>src/views/employee/index.vue</strong>)</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;staffPhoto&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span> <span class="attr">label</span>=<span class="string">&quot;头像&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-slot</span>=<span class="string">&quot;&#123; row &#125;&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-avatar</span> <span class="attr">v-if</span>=<span class="string">&quot;row.staffPhoto&quot;</span> <span class="attr">:src</span>=<span class="string">&quot;row.staffPhoto&quot;</span> <span class="attr">:size</span>=<span class="string">&quot;30&quot;</span> /&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-else</span> <span class="attr">class</span>=<span class="string">&quot;username&quot;</span>&gt;</span>&#123;&#123; row.username?.charAt(0) &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>聘用形式的处理-代码位置(<strong>src/views/employee/index.vue</strong>)</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;formOfEmployment&quot;</span> <span class="attr">label</span>=<span class="string">&quot;聘用形式&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-slot</span>=<span class="string">&quot;&#123; row &#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-if</span>=<span class="string">&quot;row.formOfEmployment === 1&quot;</span>&gt;</span>正式<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-else-if</span>=<span class="string">&quot;row.formOfEmployment === 2&quot;</span>&gt;</span>非正式<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-else</span>&gt;</span>无<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="7-员工分页处理"><a href="#7-员工分页处理" class="headerlink" title="7.员工分页处理"></a>7.员工分页处理</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022019138.png" alt="image.png"></p><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022018888.png" alt="image.png"></p><ul><li>定义分页参数-代码位置(<strong>src/views/employee/index.vue</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">data () &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="attr">queryParams</span>: &#123;</span><br><span class="line">        <span class="attr">departmentId</span>: <span class="literal">null</span>,</span><br><span class="line">        <span class="attr">page</span>: <span class="number">1</span>, <span class="comment">// 当前页码</span></span><br><span class="line">        <span class="attr">pagesize</span>: <span class="number">10</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">total</span>: <span class="number">0</span>, <span class="comment">// 记录员工的总数</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>绑定分页参数-代码位置(<strong>src/views/employee/index.vue</strong>)</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-pagination</span></span></span><br><span class="line"><span class="tag">            <span class="attr">layout</span>=<span class="string">&quot;total,prev, pager, next&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">:total</span>=<span class="string">&quot;total&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">:current-page</span>=<span class="string">&quot;queryParams.page&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">:page-size</span>=<span class="string">&quot;queryParams.pagesize&quot;</span></span></span><br><span class="line"><span class="tag">            @<span class="attr">current-change</span>=<span class="string">&quot;changePage&quot;</span></span></span><br><span class="line"><span class="tag">  /&gt;</span></span><br></pre></td></tr></table></figure><ul><li>切换页码事件-代码位置(<strong>src/views/employee/index.vue</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 切换页码</span></span><br><span class="line">    <span class="title function_">changePage</span>(<span class="params">newPage</span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">queryParams</span>.<span class="property">page</span> = newPage <span class="comment">// 赋值新页码</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="title function_">getEmployeeList</span>() <span class="comment">// 查询数据</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ul><li>切换部门时，查询第一页数据-代码位置(<strong>src/views/employee/index.vue</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">selectNode</span>(<span class="params">node</span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">queryParams</span>.<span class="property">departmentId</span> = node.<span class="property">id</span> <span class="comment">// 重新记录了参数</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">queryParams</span>.<span class="property">page</span> = <span class="number">1</span> <span class="comment">// 设置第一页</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="title function_">getEmployeeList</span>()</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><ul><li>设置ElementUI的语言为中文-代码位置(<strong>src/main.js</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">ElementUI</span>)</span><br></pre></td></tr></table></figure><h2 id="8-员工模糊搜索"><a href="#8-员工模糊搜索" class="headerlink" title="8.员工模糊搜索"></a>8.员工模糊搜索</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022019637.png" alt="image.png"></p><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022046423.png" alt="image.png"> </p><ul><li>设置模糊搜索的参数字段-代码位置(<strong>src/views/employee/index.vue</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">data () &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="attr">queryParams</span>: &#123;</span><br><span class="line">        <span class="attr">departmentId</span>: <span class="literal">null</span>,</span><br><span class="line">        <span class="attr">page</span>: <span class="number">1</span>, <span class="comment">// 当前页码</span></span><br><span class="line">        <span class="attr">pagesize</span>: <span class="number">10</span>,</span><br><span class="line">        <span class="attr">keyword</span>: <span class="string">&#x27;&#x27;</span> <span class="comment">// 模糊搜索字段</span></span><br><span class="line">      &#125;,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>双向绑定input输入框，监听值改变事件-代码位置(<strong>src/views/employee/index.vue</strong>)</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-input</span></span></span><br><span class="line"><span class="tag">          <span class="attr">v-model</span>=<span class="string">&quot;queryParams.keyword&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">style</span>=<span class="string">&quot;margin-bottom:10px&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">type</span>=<span class="string">&quot;text&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">prefix-icon</span>=<span class="string">&quot;el-icon-search&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">size</span>=<span class="string">&quot;small&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">placeholder</span>=<span class="string">&quot;输入员工姓名全员搜索&quot;</span></span></span><br><span class="line"><span class="tag">          @<span class="attr">input</span>=<span class="string">&quot;changeValue&quot;</span></span></span><br><span class="line"><span class="tag">/&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>这里监听的事件是input，有同学可能会问，为什么不用change事件，注意change事件是离开焦点触发，input是只要内容发生变化就会触发，所以这里使用input更符合使用场景</p></blockquote><ul><li>值改变查询数据-支持防抖查询-代码位置(<strong>src/views/employee/index.vue</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"> <span class="title function_">changeValue</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="comment">// 单位时间内只执行最后一次</span></span><br><span class="line">      <span class="comment">// this的实例上赋值了一个timer的属性</span></span><br><span class="line">      <span class="built_in">clearTimeout</span>(<span class="variable language_">this</span>.<span class="property">timer</span>) <span class="comment">// 清理上一次的定时器</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">timer</span> = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">queryParams</span>.<span class="property">page</span> = <span class="number">1</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">getEmployeeList</span>()</span><br><span class="line">      &#125;, <span class="number">300</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="9-导出excel"><a href="#9-导出excel" class="headerlink" title="9.导出excel"></a>9.导出excel</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022019872.png" alt="image.png"></p><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022046324.png" alt="image.png"></p><ul><li>导出员工接口返回的是二进制流</li><li>axios配置responseType为blob接收二进制流文件为Blob格式</li><li><p>安装file-saver包，实现下载Blob文件  yarn add file-saver</p></li><li><p>封装导出员工excel的API-代码位置(<strong>src/api/employee.js</strong>)</p></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 导出员工的excel</span></span><br><span class="line"><span class="comment"> * **/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">exportEmployee</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;/sys/user/export&#x27;</span>,</span><br><span class="line">    <span class="comment">// 改变接收数据的类型</span></span><br><span class="line">    <span class="attr">responseType</span>: <span class="string">&#x27;blob&#x27;</span> <span class="comment">// 使用blob接收二进制文件流</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>拦截器判断是不是blob类型，如果是直接返回数据，不再进行解构-代码位置(<strong>src/utils/request.js</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 响应拦截器</span></span><br><span class="line">service.<span class="property">interceptors</span>.<span class="property">response</span>.<span class="title function_">use</span>(<span class="function">(<span class="params">response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// axios默认包裹了data</span></span><br><span class="line">  <span class="comment">// 判断是不是Blob</span></span><br><span class="line">  <span class="keyword">if</span> (response.<span class="property">data</span> <span class="keyword">instanceof</span> <span class="title class_">Blob</span>) <span class="keyword">return</span> response.<span class="property">data</span> <span class="comment">// 返回了Blob对象</span></span><br><span class="line">  <span class="keyword">const</span> &#123; data, message, success &#125; = response.<span class="property">data</span> <span class="comment">// 默认json格式</span></span><br><span class="line">  <span class="keyword">if</span> (success) &#123;</span><br><span class="line">    <span class="keyword">return</span> data</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title class_">Message</span>(&#123; <span class="attr">type</span>: <span class="string">&#x27;error&#x27;</span>, message &#125;)</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(message))</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><ul><li>安装file-saver</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm i file-saver</span><br><span class="line">$ yarn add file-saver</span><br></pre></td></tr></table></figure><ul><li>点击按钮调用接口，使用file-saver将blob转化成文件下载-代码位置(<strong>src/views/employee/index.vue</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-button size=<span class="string">&quot;mini&quot;</span> @click=<span class="string">&quot;exportEmployee&quot;</span>&gt;excel导出&lt;/el-button&gt;</span><br><span class="line"> <span class="keyword">import</span> <span class="title class_">FileSaver</span> <span class="keyword">from</span> <span class="string">&#x27;file-saver&#x27;</span></span><br><span class="line"> <span class="keyword">import</span> &#123; exportEmployee &#125; <span class="keyword">from</span> <span class="string">&#x27;@/api/employee&#x27;</span></span><br><span class="line">  <span class="keyword">async</span>  <span class="title function_">exportEmployee</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> result = <span class="keyword">await</span> <span class="title function_">exportEmployee</span>() <span class="comment">// 导出所有的员工接口</span></span><br><span class="line">      <span class="comment">// console.log(result) // 使用一个npm包 直接将blob文件下载到本地 file-saver</span></span><br><span class="line">      <span class="comment">// FileSaver.saveAs(blob对象,文件名称)</span></span><br><span class="line">      <span class="title class_">FileSaver</span>.<span class="title function_">saveAs</span>(result, <span class="string">&#x27;员工信息表.xlsx&#x27;</span>) <span class="comment">// 下载文件</span></span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h2 id="10-excel组件封装"><a href="#10-excel组件封装" class="headerlink" title="10.excel组件封装"></a>10.excel组件封装</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022019604.png" alt="image.png"></p><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022019648.png" alt="image.png"></p><ul><li>创建员工导入组件-代码位置(<strong>src/views/employee/components/import-excel.vue</strong>)</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-dialog</span></span></span><br><span class="line"><span class="tag">    <span class="attr">width</span>=<span class="string">&quot;500px&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">title</span>=<span class="string">&quot;员工导入&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">:visible</span>=<span class="string">&quot;showExcelDialog&quot;</span></span></span><br><span class="line"><span class="tag">    @<span class="attr">close</span>=<span class="string">&quot;$emit(&#x27;update:showExcelDialog&#x27;, false)&quot;</span></span></span><br><span class="line"><span class="tag">  &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-row</span> <span class="attr">type</span>=<span class="string">&quot;flex&quot;</span> <span class="attr">justify</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;upload-excel&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">          <span class="attr">ref</span>=<span class="string">&quot;excel-upload-input&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">class</span>=<span class="string">&quot;excel-upload-input&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">type</span>=<span class="string">&quot;file&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">accept</span>=<span class="string">&quot;.xlsx, .xls&quot;</span></span></span><br><span class="line"><span class="tag">        &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;drop&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;el-icon-upload&quot;</span> /&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span>下载导入模板<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span>&gt;</span>将文件拖到此处或</span><br><span class="line">            <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span>点击上传<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-row</span> <span class="attr">type</span>=<span class="string">&quot;flex&quot;</span> <span class="attr">justify</span>=<span class="string">&quot;end&quot;</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- update:props属性名，值 直接修改 .sync修饰符的属性值 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;$emit(&#x27;update:showExcelDialog&#x27;, false)&quot;</span>&gt;</span>取消<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">el-dialog</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">props</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">showExcelDialog</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">type</span>: <span class="title class_">Boolean</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">default</span>: <span class="literal">false</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span> <span class="attr">lang</span>=<span class="string">&quot;scss&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.upload-excel</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">justify-content</span>: center;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">margin</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">360px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">180px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">align-items</span>: center;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">color</span>: <span class="number">#697086</span>;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.excel-upload-input</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">display</span>: none;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">z-index</span>: -<span class="number">9999</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.btn-upload</span>,</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.drop</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border</span>: <span class="number">1px</span> dashed <span class="number">#dcdfe6</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">line-height</span>: <span class="number">160px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border-radius</span>: <span class="number">8px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">flex-direction</span>: column;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">justify-content</span>: center;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.drop</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">line-height</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">color</span>: <span class="number">#bbb</span>;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">i</span> &#123;</span></span><br><span class="line"><span class="language-css">          <span class="attribute">font-size</span>: <span class="number">60px</span>;</span></span><br><span class="line"><span class="language-css">          <span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="language-css">          <span class="attribute">color</span>: <span class="number">#c0c4cc</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>在员工管理页面-导入该组件并注册使用-代码位置(<strong>src/views/employee/index.vue</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">ImportExcel</span> <span class="keyword">from</span> <span class="string">&#x27;./components/import-excel.vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">components</span>: &#123;</span><br><span class="line">    <span class="title class_">ImportExcel</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>声明一个控制该弹层的变量-代码位置(<strong>src/views/employee/index.vue</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">data () &#123;</span><br><span class="line">  <span class="keyword">return</span>  &#123;</span><br><span class="line">      <span class="attr">showExcelDialog</span>: <span class="literal">false</span> <span class="comment">// 控制excel的弹层显示和隐藏</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>使用该组件，并且应用变量-代码位置(<strong>src/views/employee/index.vue</strong>)</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">import-excel</span> <span class="attr">:show-excel-dialog.sync</span>=<span class="string">&quot;showExcelDialog&quot;</span> /&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>点击员工导入弹出层-代码位置(<strong>src/views/employee/index.vue</strong>)</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-button</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;showExcelDialog = true&quot;</span>&gt;</span>excel导入<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="11-下载导入模板"><a href="#11-下载导入模板" class="headerlink" title="11.下载导入模板"></a>11.下载导入模板</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022019133.png" alt="image.png"> </p><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022020868.png" alt="image.png"></p><ul><li>封装下载模板的API-代码位置(<strong>src/api/employee.js</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 下载员工导入模版</span></span><br><span class="line"><span class="comment"> * **/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">getExportTemplate</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;/sys/user/import/template&#x27;</span>,</span><br><span class="line">    <span class="attr">responseType</span>: <span class="string">&#x27;blob&#x27;</span> <span class="comment">// 二进制文件流</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>点击按钮进行下载模板-代码位置(<strong>src/views/employee/components/import-excel.vue</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-button type=<span class="string">&quot;text&quot;</span> @click=<span class="string">&quot;getTemplate&quot;</span>&gt;下载导入模板&lt;/el-button&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="title function_">getTemplate</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> data = <span class="keyword">await</span> <span class="title function_">getExportTemplate</span>()</span><br><span class="line">    <span class="title class_">FileSaver</span>.<span class="title function_">saveAs</span>(data, <span class="string">&#x27;员工导入模版.xlsx&#x27;</span>)</span><br><span class="line"> &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="12-员工导入—上传excel"><a href="#12-员工导入—上传excel" class="headerlink" title="12.员工导入—上传excel"></a>12.员工导入—上传excel</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022020961.png" alt="image.png"> </p><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022020439.png" alt="image.png"></p><ul><li>封装上传excel的API-代码位置(<strong>src/api/employee.js</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 上传用户的excel</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">uploadExcel</span>(<span class="params">data</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;/sys/user/import&#x27;</span>,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">    data <span class="comment">// form-data类型 因为要上传文件类型</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>点击上传-弹出文件选择框-代码位置(<strong>src/views/employee/components/import-excel.vue</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-button type=<span class="string">&quot;text&quot;</span> @click=<span class="string">&quot;handleUpload&quot;</span>&gt;点击上传&lt;/el-button&gt;</span><br><span class="line"><span class="title function_">handleUpload</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">$refs</span>[<span class="string">&#x27;excel-upload-input&#x27;</span>].<span class="title function_">click</span>() <span class="comment">// this.$refs.属性名 和 this.$refs[属性名] 等价</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><ul><li>监听文件改变-上传excel-关闭弹层-代码位置(<strong>src/views/employee/components/import-excel.vue</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"> &lt;input</span><br><span class="line">          ref=<span class="string">&quot;excel-upload-input&quot;</span></span><br><span class="line">          <span class="keyword">class</span>=<span class="string">&quot;excel-upload-input&quot;</span></span><br><span class="line">          type=<span class="string">&quot;file&quot;</span></span><br><span class="line">          accept=<span class="string">&quot;.xlsx, .xls&quot;</span></span><br><span class="line">          @change=<span class="string">&quot;uploadChange&quot;</span></span><br><span class="line">  &gt;</span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">uploadChange</span>(<span class="params">event</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(event.<span class="property">target</span>.<span class="property">files</span>)</span><br><span class="line">      <span class="comment">// 调用上传接口</span></span><br><span class="line">      <span class="comment">// uploadExcel() // 参数  form-data 需要文件file</span></span><br><span class="line">      <span class="keyword">const</span> files = event.<span class="property">target</span>.<span class="property">files</span> <span class="comment">// input的文件列表</span></span><br><span class="line">      <span class="keyword">if</span> (files.<span class="property">length</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">// 大于0 说明有文件要上传</span></span><br><span class="line">        <span class="keyword">const</span> data = <span class="keyword">new</span> <span class="title class_">FormData</span>()</span><br><span class="line">        <span class="comment">// file: file类型</span></span><br><span class="line">        data.<span class="title function_">append</span>(<span class="string">&#x27;file&#x27;</span>, files[<span class="number">0</span>]) <span class="comment">// 将文件参数加入到formData中</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">          <span class="keyword">await</span> <span class="title function_">uploadExcel</span>(data)</span><br><span class="line">          <span class="comment">// 成功</span></span><br><span class="line">          <span class="variable language_">this</span>.$emit(<span class="string">&#x27;uploadSuccess&#x27;</span>) <span class="comment">// 通知父组件 我上传成功</span></span><br><span class="line">          <span class="variable language_">this</span>.$emit(<span class="string">&#x27;update:showExcelDialog&#x27;</span>, <span class="literal">false</span>) <span class="comment">// 关闭弹层</span></span><br><span class="line">          <span class="comment">// this.$refs[&#x27;excel-upload-input&#x27;].value = &#x27;&#x27;</span></span><br><span class="line">        &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">          <span class="comment">// 捕获失败</span></span><br><span class="line">          <span class="comment">// this.$refs[&#x27;excel-upload-input&#x27;].value = &#x27;&#x27;</span></span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">          <span class="comment">// 不论成功或者失败都会执行finally</span></span><br><span class="line">          <span class="variable language_">this</span>.<span class="property">$refs</span>[<span class="string">&#x27;excel-upload-input&#x27;</span>].<span class="property">value</span> = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>这里为什么不管成功或者失败都要清空文件选择器中的内容呢？ 因为不论成功或者失败，再点击上传都会去选择一个新的excel，所以这里使用finally等到最后，将内容清空。</p></blockquote><ul><li>父组件需要监听上传成功的事件-代码位置(<strong>src/views/employee/index.vue</strong>)</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">import-excel</span> <span class="attr">:show-excel-dialog.sync</span>=<span class="string">&quot;showExcelDialog&quot;</span> @<span class="attr">uploadSuccess</span>=<span class="string">&quot;getEmployeeList&quot;</span> /&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="13-删除员工"><a href="#13-删除员工" class="headerlink" title="13.删除员工"></a>13.删除员工</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022020622.png" alt="image.png"></p><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022020259.png" alt="image.png"></p><ul><li>封装删除员工的API-代码位置(<strong>src/api/employee.js</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 删除员工</span></span><br><span class="line"><span class="comment"> * **/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">delEmployee</span>(<span class="params">id</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;delete&#x27;</span>,</span><br><span class="line">    <span class="attr">url</span>: <span class="string">`/sys/user/<span class="subst">$&#123;id&#125;</span>`</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>放置气泡框确认框-代码位置(<strong>src/views/employee/index.vue</strong>)</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-popconfirm</span> <span class="attr">title</span>=<span class="string">&quot;确认删除该行数据吗？&quot;</span>  @<span class="attr">onConfirm</span>=<span class="string">&quot;confirmDel(row.id)&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">slot</span>=<span class="string">&quot;reference&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-left:10px&quot;</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-popconfirm</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>删除方法实现-代码位置(<strong>src/views/employee/index.vue</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 删除员工方法</span></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">confirmDel</span>(<span class="params">id</span>) &#123;</span><br><span class="line">      <span class="keyword">await</span> <span class="title function_">delEmployee</span>(id)</span><br><span class="line">      <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">list</span>.<span class="property">length</span> === <span class="number">1</span> &amp;&amp; <span class="variable language_">this</span>.<span class="property">queryParams</span>.<span class="property">page</span> &gt; <span class="number">1</span>) <span class="variable language_">this</span>.<span class="property">queryParams</span>.<span class="property">page</span>--</span><br><span class="line">      <span class="variable language_">this</span>.<span class="title function_">getEmployeeList</span>()</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">$message</span>.<span class="title function_">success</span>(<span class="string">&#x27;删除员工成功&#x27;</span>)</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h1 id="七、员工详情"><a href="#七、员工详情" class="headerlink" title="七、员工详情"></a>七、员工详情</h1><h2 id="1-员工详情和路由"><a href="#1-员工详情和路由" class="headerlink" title="1.员工详情和路由"></a>1.员工详情和路由</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022020048.png" alt="image.png"> </p><ul><li>(拷贝)创建一个员工详情页面-代码位置(<strong>src/views/employee/detail.vue</strong>)</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dashboard-container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;app-container&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;edit-form&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-form</span> <span class="attr">ref</span>=<span class="string">&quot;userForm&quot;</span> <span class="attr">label-width</span>=<span class="string">&quot;220px&quot;</span>&gt;</span></span><br><span class="line">          <span class="comment">&lt;!-- 姓名 部门 --&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;12&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;姓名&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;username&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span> <span class="attr">class</span>=<span class="string">&quot;inputW&quot;</span> /&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line"></span><br><span class="line">          <span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br><span class="line">          <span class="comment">&lt;!-- 工号 入职时间 --&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;12&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;工号&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;workNumber&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span> <span class="attr">class</span>=<span class="string">&quot;inputW&quot;</span> /&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br><span class="line">          <span class="comment">&lt;!--手机 聘用形式  --&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;12&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;手机&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;mobile&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-input</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">class</span>=<span class="string">&quot;inputW&quot;</span></span></span><br><span class="line"><span class="tag">                /&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;12&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;部门&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;departmentId&quot;</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 放置及联部门组件 --&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;12&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;聘用形式&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;formOfEmployment&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-select</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span> <span class="attr">class</span>=<span class="string">&quot;inputW&quot;</span> /&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;12&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;入职时间&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;timeOfEntry&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-date-picker</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">type</span>=<span class="string">&quot;date&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">value-format</span>=<span class="string">&quot;yyyy-MM-dd&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">class</span>=<span class="string">&quot;inputW&quot;</span></span></span><br><span class="line"><span class="tag">                /&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;12&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;转正时间&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-date-picker</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">type</span>=<span class="string">&quot;date&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">class</span>=<span class="string">&quot;inputW&quot;</span></span></span><br><span class="line"><span class="tag">                /&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br><span class="line">          <span class="comment">&lt;!-- 员工照片 --&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;12&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;员工头像&quot;</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 放置上传图片 --&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br><span class="line">          <span class="comment">&lt;!-- 保存个人信息 --&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-row</span> <span class="attr">type</span>=<span class="string">&quot;flex&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;12&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-left:220px&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span>&gt;</span>保存更新<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span> <span class="attr">lang</span>=<span class="string">&quot;scss&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.edit-form</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">padding</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.inputW</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">380px</span></span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>配置员工详情的路由信息-代码位置(<strong>src/router/modules/employee.js</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> layout <span class="keyword">from</span> <span class="string">&#x27;@/layout&#x27;</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">path</span>: <span class="string">&#x27;/employee&#x27;</span>,</span><br><span class="line">  <span class="attr">component</span>: layout,</span><br><span class="line">  <span class="attr">children</span>: [&#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;employee&#x27;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;@/views/employee&#x27;</span>),</span><br><span class="line">    <span class="attr">meta</span>: &#123;</span><br><span class="line">      <span class="attr">title</span>: <span class="string">&#x27;员工&#x27;</span>,</span><br><span class="line">      <span class="attr">icon</span>: <span class="string">&#x27;people&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;, &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;/employee/detail&#x27;</span>, <span class="comment">// 员工详情的地址</span></span><br><span class="line">    <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;@/views/employee/detail.vue&#x27;</span>),</span><br><span class="line">    <span class="attr">hidden</span>: <span class="literal">true</span>, <span class="comment">// 表示隐藏在左侧菜单</span></span><br><span class="line">    <span class="attr">meta</span>: &#123;</span><br><span class="line">      <span class="attr">title</span>: <span class="string">&#x27;员工详情&#x27;</span> <span class="comment">// 显示在导航的文本</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>点击添加员工跳转到详情页-代码位置(<strong>src/views/employee/index.vue</strong>)</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-button</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;$router.push(&#x27;/employee/detail&#x27;)&quot;</span>&gt;</span>添加员工<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="2-表单数据校验"><a href="#2-表单数据校验" class="headerlink" title="2.表单数据校验"></a>2.表单数据校验</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022021862.png" alt="image.png"></p><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022021792.png" alt="image.png"> </p><blockquote><p>表单校验规则</p></blockquote><ul><li>姓名-必填-1-4个字符</li><li>手机号-必填-格式校验</li><li>部门-必填</li><li>聘用形式-必填</li><li>入职时间-必填</li><li><p>转正时间-必填-不能小于入职时间</p></li><li><p>定义数据和规则-代码位置(<strong>src/views/employee/detail.vue</strong>)</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      userInfo: &#123;</span><br><span class="line">        username: &#x27;&#x27;, // 用户名</span><br><span class="line">        mobile: &#x27;&#x27;, // 手机号</span><br><span class="line">        workNumber: &#x27;&#x27;, // 工号</span><br><span class="line">        formOfEmployment: null, // 聘用形式</span><br><span class="line">        departmentId: null, // 部门id</span><br><span class="line">        timeOfEntry: &#x27;&#x27;, // 入职时间</span><br><span class="line">        correctionTime: &#x27;&#x27; // 转正时间</span><br><span class="line">      &#125;,</span><br><span class="line">      rules: &#123;</span><br><span class="line">        username: [&#123; required: true, message: &#x27;请输入姓名&#x27;, trigger: &#x27;blur&#x27; &#125;, &#123;</span><br><span class="line">          min: 1, max: 4, message: &#x27;姓名为1-4位&#x27;</span><br><span class="line">        &#125;],</span><br><span class="line">        mobile: [&#123; required: true, message: &#x27;请输入手机号&#x27;, trigger: &#x27;blur&#x27; &#125;, &#123;</span><br><span class="line">        //   pattern 正则表达式</span><br><span class="line">          pattern: /^1[3-9]\d&#123;9&#125;$/,</span><br><span class="line">          message: &#x27;手机号格式不正确&#x27;,</span><br><span class="line">          trigger: &#x27;blur&#x27;</span><br><span class="line">        &#125;],</span><br><span class="line">        formOfEmployment: [&#123; required: true, message: &#x27;请选择聘用形式&#x27;, trigger: &#x27;blur&#x27; &#125;],</span><br><span class="line">        departmentId: [&#123; required: true, message: &#x27;请选择部门&#x27;, trigger: &#x27;blur&#x27; &#125;],</span><br><span class="line">        timeOfEntry: [&#123; required: true, message: &#x27;请选择入职时间&#x27;, trigger: &#x27;blur&#x27; &#125;],</span><br><span class="line">        correctionTime: [&#123; required: true, message: &#x27;请选择转正时间&#x27;, trigger: &#x27;blur&#x27; &#125;, &#123;</span><br><span class="line">          validator: (rule, value, callback) =&gt; &#123;</span><br><span class="line">            if (this.userInfo.timeOfEntry) &#123;</span><br><span class="line">              if (new Date(this.userInfo.timeOfEntry) &gt; new Date(value)) &#123;</span><br><span class="line">                callback(new Error(&#x27;转正时间不能小于入职时间&#x27;))</span><br><span class="line">                return</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            callback()</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;]</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    saveData() &#123;</span><br><span class="line">      this.$refs.userForm.validate()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><ul><li>绑定表单数据和属性-代码位置(<strong>src/views/employee/detail.vue</strong>)</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-form</span> <span class="attr">ref</span>=<span class="string">&quot;userForm&quot;</span> <span class="attr">:model</span>=<span class="string">&quot;userInfo&quot;</span> <span class="attr">:rules</span>=<span class="string">&quot;rules&quot;</span> <span class="attr">label-width</span>=<span class="string">&quot;220px&quot;</span>&gt;</span></span><br><span class="line">         <span class="comment">&lt;!-- 姓名 --&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;12&quot;</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;姓名&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;username&quot;</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;userInfo.username&quot;</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span> <span class="attr">class</span>=<span class="string">&quot;inputW&quot;</span> /&gt;</span></span><br><span class="line">             <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line"></span><br><span class="line">         <span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br><span class="line">         <span class="comment">&lt;!-- 工号 --&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;12&quot;</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;工号&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;workNumber&quot;</span>&gt;</span></span><br><span class="line">               <span class="comment">&lt;!-- 工号是系统生成的  禁用这个组件--&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;userInfo.workNumber&quot;</span> <span class="attr">disabled</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span> <span class="attr">class</span>=<span class="string">&quot;inputW&quot;</span> /&gt;</span></span><br><span class="line">             <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br><span class="line">         <span class="comment">&lt;!--手机  --&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;12&quot;</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;手机&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;mobile&quot;</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">el-input</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">v-model</span>=<span class="string">&quot;userInfo.mobile&quot;</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">class</span>=<span class="string">&quot;inputW&quot;</span></span></span><br><span class="line"><span class="tag">               /&gt;</span></span><br><span class="line">             <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;12&quot;</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;部门&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;departmentId&quot;</span>&gt;</span></span><br><span class="line">               <span class="comment">&lt;!-- 放置及联部门组件 会单独封装--&gt;</span></span><br><span class="line">             <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;12&quot;</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;聘用形式&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;formOfEmployment&quot;</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">el-select</span> <span class="attr">v-model</span>=<span class="string">&quot;userInfo.formOfEmployment&quot;</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span> <span class="attr">class</span>=<span class="string">&quot;inputW&quot;</span>&gt;</span></span><br><span class="line">                 <span class="tag">&lt;<span class="name">el-option</span> <span class="attr">label</span>=<span class="string">&quot;正式&quot;</span> <span class="attr">:value</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">                 <span class="tag">&lt;<span class="name">el-option</span> <span class="attr">label</span>=<span class="string">&quot;非正式&quot;</span> <span class="attr">:value</span>=<span class="string">&quot;2&quot;</span> /&gt;</span></span><br><span class="line">               <span class="tag">&lt;/<span class="name">el-select</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;12&quot;</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;入职时间&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;timeOfEntry&quot;</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">el-date-picker</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">v-model</span>=<span class="string">&quot;userInfo.timeOfEntry&quot;</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">type</span>=<span class="string">&quot;date&quot;</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value-format</span>=<span class="string">&quot;yyyy-MM-dd&quot;</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">class</span>=<span class="string">&quot;inputW&quot;</span></span></span><br><span class="line"><span class="tag">               /&gt;</span></span><br><span class="line">             <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;12&quot;</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;转正时间&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;correctionTime&quot;</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">el-date-picker</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">v-model</span>=<span class="string">&quot;userInfo.correctionTime&quot;</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">type</span>=<span class="string">&quot;date&quot;</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">class</span>=<span class="string">&quot;inputW&quot;</span></span></span><br><span class="line"><span class="tag">               /&gt;</span></span><br><span class="line">             <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br><span class="line">         <span class="comment">&lt;!-- 员工照片 --&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;12&quot;</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;员工头像&quot;</span>&gt;</span></span><br><span class="line">               <span class="comment">&lt;!-- 放置上传图片 --&gt;</span></span><br><span class="line">             <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br><span class="line">         <span class="comment">&lt;!-- 保存个人信息 --&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">el-row</span> <span class="attr">type</span>=<span class="string">&quot;flex&quot;</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;12&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-left:220px&quot;</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;saveData&quot;</span>&gt;</span>保存更新<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="3-封装部门级联组件"><a href="#3-封装部门级联组件" class="headerlink" title="3.封装部门级联组件"></a>3.封装部门级联组件</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022021153.png" alt="image.png"></p><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022021084.png" alt="image.png"> </p><p>Cascader级联组件的特性</p><ol><li>options为一个树形结构的数据源</li><li>props可以设置数据源中的字段如 label (展示)  value（存取）</li><li>separator为展示的分隔符</li></ol><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022022395.png" alt="image.png"></p><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022047362.png" alt="image.png"></p><ul><li>创建select-tree组件-代码位置(<strong>src/views/employee/components/select-tree.vue</strong>)</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;!-- element-ui级联组件 --&gt;</span><br><span class="line">  &lt;el-cascader</span><br><span class="line">    size=&quot;mini&quot;</span><br><span class="line">    :options=&quot;treeData&quot;</span><br><span class="line">    :props=&quot;props&quot;</span><br><span class="line">    separator=&quot;-&quot;</span><br><span class="line">  /&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">import &#123; getDepartment &#125; from &#x27;@/api/department&#x27;</span><br><span class="line">import &#123; transListToTreeData &#125; from &#x27;@/utils&#x27;</span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      treeData: [], // 赋值给 级联组件的options</span><br><span class="line">      props: &#123;</span><br><span class="line">        label: &#x27;name&#x27;, // 要展示的字段</span><br><span class="line">        value: &#x27;id&#x27; // 要存储的字段</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  created() &#123;</span><br><span class="line">    this.getDepartment()</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    async getDepartment() &#123;</span><br><span class="line">      this.treeData = transListToTreeData(await getDepartment(), 0) // 将组织架构的数据 转化树形赋值给treeData</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><ul><li>解决转化树形中的问题-代码位置(<strong>src/utils/index.js</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 列表型数据转化树形</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">transListToTreeData</span>(<span class="params">list, rootValue</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> arr = []</span><br><span class="line">  list.<span class="title function_">forEach</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (item.<span class="property">pid</span> === rootValue) &#123;</span><br><span class="line">      <span class="comment">// 找到了匹配的节点</span></span><br><span class="line">      arr.<span class="title function_">push</span>(item)</span><br><span class="line">      <span class="comment">// 当前节点的id 和 当前节点的子节点的pid是想等的</span></span><br><span class="line">      <span class="keyword">const</span> children = <span class="title function_">transListToTreeData</span>(list, item.<span class="property">id</span>) <span class="comment">// 找到的节点的子节点</span></span><br><span class="line">      <span class="keyword">if</span> (children.<span class="property">length</span>) &#123; item.<span class="property">children</span> = children &#125; <span class="comment">// 将子节点赋值给当前节点</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">return</span> arr</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>这里我们加了一个判断，就是只有当前节点有子节点时才添加children属性，否则会造成级联组件本身就已经是最末端了，但是发现它的children属性存在，就会呈现不同的表现形式。</p></blockquote><ul><li>使用select-tree组件-代码位置(<strong>src/views/employee/detail.vue</strong>)</li></ul><blockquote><p>不要忘记引入注册</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;部门&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;departmentId&quot;</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 放置及联部门组件 会单独封装--&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- inputW样式会给到selectTree中 template第一层的组件 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">select-tree</span> <span class="attr">class</span>=<span class="string">&quot;inputW&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="4-级联组件—双向绑定"><a href="#4-级联组件—双向绑定" class="headerlink" title="4.级联组件—双向绑定"></a>4.级联组件—双向绑定</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022022991.png" alt="image.png"></p><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022022652.png" alt="image.png"></p><ul><li>接收value属性-代码位置(<strong>src/views/employee/components/select-tree.vue</strong>)</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">export default &#123;</span><br><span class="line">  props: &#123;</span><br><span class="line">    value: &#123;</span><br><span class="line">      type: Number, // 存储的是部门的id  3 4 5</span><br><span class="line">      default: null</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>级联改变触发input事件-代码位置(<strong>src/views/employee/components/select-tree.vue</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"> &lt;el-cascader</span><br><span class="line">    :value=<span class="string">&quot;value&quot;</span></span><br><span class="line">    size=<span class="string">&quot;mini&quot;</span></span><br><span class="line">    :options=<span class="string">&quot;treeData&quot;</span></span><br><span class="line">    :props=<span class="string">&quot;props&quot;</span></span><br><span class="line">    separator=<span class="string">&quot;-&quot;</span></span><br><span class="line">    @change=<span class="string">&quot;changeValue&quot;</span></span><br><span class="line">  /&gt;</span><br><span class="line"></span><br><span class="line"> <span class="title function_">changeValue</span>(<span class="params">list</span>) &#123;</span><br><span class="line">      <span class="comment">// 取到数组的最后一次</span></span><br><span class="line">      <span class="keyword">if</span> (list.<span class="property">length</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.$emit(<span class="string">&#x27;input&#x27;</span>, list[list.<span class="property">length</span> - <span class="number">1</span>]) <span class="comment">// 将最后一位的id取出来 传出去</span></span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable language_">this</span>.$emit(<span class="string">&#x27;input&#x27;</span>, <span class="literal">null</span>) <span class="comment">// 如果长度为0 说明值为空</span></span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>在父组件使用v-model双向绑定-代码位置(<strong>src/views/employee/detail.vue</strong>)</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select-tree</span> <span class="attr">v-model</span>=<span class="string">&quot;userInfo.departmentId&quot;</span> <span class="attr">class</span>=<span class="string">&quot;inputW&quot;</span> /&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="5-新增员工"><a href="#5-新增员工" class="headerlink" title="5.新增员工"></a>5.新增员工</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022022757.png" alt="image.png"></p><ul><li>封装新增员工API-代码位置(<strong>src/api/employee.js</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">addEmployee</span>(<span class="params">data</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;/sys/user&#x27;</span>,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">    data</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>点击保存按钮进行新增-代码位置(<strong>src/views/employee/detail.vue</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> <span class="title function_">saveData</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">$refs</span>.<span class="property">userForm</span>.<span class="title function_">validate</span>(<span class="keyword">async</span> isOK =&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span> (isOK) &#123;</span><br><span class="line">          <span class="comment">// 校验通过</span></span><br><span class="line">          <span class="keyword">await</span> <span class="title function_">addEmployee</span>(<span class="variable language_">this</span>.<span class="property">userInfo</span>)</span><br><span class="line">          <span class="variable language_">this</span>.<span class="property">$message</span>.<span class="title function_">success</span>(<span class="string">&#x27;新增员工成功&#x27;</span>)</span><br><span class="line">          <span class="variable language_">this</span>.<span class="property">$router</span>.<span class="title function_">push</span>(<span class="string">&#x27;/employee&#x27;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-编辑员工—查看员工"><a href="#6-编辑员工—查看员工" class="headerlink" title="6.编辑员工—查看员工"></a>6.编辑员工—查看员工</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022022845.png" alt="image.png"></p><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022048161.png" alt="image.png"></p><ul><li>封装获取员工详情的API-代码位置(<strong>src/api/employee.js</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  获取员工详情</span></span><br><span class="line"><span class="comment"> * **/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">getEmployeeDetail</span>(<span class="params">id</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">`/sys/user/<span class="subst">$&#123;id&#125;</span>`</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>点击查看时跳转到详情携带id-代码位置(<strong>src/views/employee/index.vue</strong>)</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-button</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;$router.push(`/employee/detail/$&#123;row.id&#125;`)&quot;</span>&gt;</span>查看<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>配置详情的路由支持新增模式和编辑模式-代码位置(<strong>src/router/modules/employee.js</strong>)</li></ul><blockquote><p>? 标识可有可无，可以传id也可以选择不传，页面都能正确显示</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">path</span>: <span class="string">&#x27;/employee&#x27;</span>,</span><br><span class="line">  <span class="attr">component</span>: layout,</span><br><span class="line">  <span class="attr">children</span>: [&#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;employee&#x27;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;@/views/employee&#x27;</span>),</span><br><span class="line">    <span class="attr">meta</span>: &#123;</span><br><span class="line">      <span class="attr">title</span>: <span class="string">&#x27;员工&#x27;</span>,</span><br><span class="line">      <span class="attr">icon</span>: <span class="string">&#x27;people&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;, &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;/employee/detail/:id?&#x27;</span>, <span class="comment">// 员工详情的地址</span></span><br><span class="line">    <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;@/views/employee/detail.vue&#x27;</span>),</span><br><span class="line">    <span class="attr">hidden</span>: <span class="literal">true</span>, <span class="comment">// 表示隐藏在左侧菜单</span></span><br><span class="line">    <span class="attr">meta</span>: &#123;</span><br><span class="line">      <span class="attr">title</span>: <span class="string">&#x27;员工详情&#x27;</span> <span class="comment">// 显示在导航的文本</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>员工详情页判断是否有id，有id就查询详情数据-代码位置(<strong>src/views/employee/detail.vue</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">created</span>(<span class="params"></span>) &#123;</span><br><span class="line">   <span class="comment">// 如何获取路由参数的中id</span></span><br><span class="line">   <span class="comment">// if (this.$route.params.id) &#123; this.getEmployeeDetail() &#125;</span></span><br><span class="line">   <span class="variable language_">this</span>.<span class="property">$route</span>.<span class="property">params</span>.<span class="property">id</span> &amp;&amp; <span class="variable language_">this</span>.<span class="title function_">getEmployeeDetail</span>()</span><br><span class="line"> &#125;,</span><br><span class="line"> <span class="attr">methods</span>: &#123;</span><br><span class="line">   <span class="keyword">async</span> <span class="title function_">getEmployeeDetail</span>(<span class="params"></span>) &#123;</span><br><span class="line">     <span class="variable language_">this</span>.<span class="property">userInfo</span> = <span class="keyword">await</span> <span class="title function_">getEmployeeDetail</span>(<span class="variable language_">this</span>.<span class="property">$route</span>.<span class="property">params</span>.<span class="property">id</span>)</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h2 id="7-编辑员工—保存"><a href="#7-编辑员工—保存" class="headerlink" title="7.编辑员工—保存"></a>7.编辑员工—保存</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022022589.png" alt="image.png"></p><ul><li>封装更新员工的API-代码位置(<strong>src/api/employee.js</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">updateEmployee</span>(<span class="params">data</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">`/sys/user/<span class="subst">$&#123;data.id&#125;</span>`</span>,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;put&#x27;</span>,</span><br><span class="line">    data</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>保存时区分保存和新增场景-代码位置(<strong>src/views/employee/detail.vue</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">saveData</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">$refs</span>.<span class="property">userForm</span>.<span class="title function_">validate</span>(<span class="keyword">async</span> isOK =&gt; &#123;</span><br><span class="line">      <span class="keyword">if</span> (isOK) &#123;</span><br><span class="line">        <span class="comment">// 编辑模式</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">$route</span>.<span class="property">params</span>.<span class="property">id</span>) &#123;</span><br><span class="line">          <span class="comment">// 编辑模式</span></span><br><span class="line">          <span class="keyword">await</span> <span class="title function_">updateEmployee</span>(<span class="variable language_">this</span>.<span class="property">userInfo</span>)</span><br><span class="line">          <span class="variable language_">this</span>.<span class="property">$message</span>.<span class="title function_">success</span>(<span class="string">&#x27;更新员工成功&#x27;</span>)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="comment">// 新增模式</span></span><br><span class="line">          <span class="comment">// 校验通过</span></span><br><span class="line">          <span class="keyword">await</span> <span class="title function_">addEmployee</span>(<span class="variable language_">this</span>.<span class="property">userInfo</span>)</span><br><span class="line">          <span class="variable language_">this</span>.<span class="property">$message</span>.<span class="title function_">success</span>(<span class="string">&#x27;新增员工成功&#x27;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$router</span>.<span class="title function_">push</span>(<span class="string">&#x27;/employee&#x27;</span>)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><ul><li>在当编辑模式时，让手机号不可编辑-代码位置(<strong>src/views/employee/detail.vue</strong>)</li></ul><blockquote><p>因为新增时手机号已经注册成功，手机号如果修改了，用户就不能再成功登录。所以编辑时，用户的手机号允许修改。</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-input</span></span></span><br><span class="line"><span class="tag">       <span class="attr">v-model</span>=<span class="string">&quot;userInfo.mobile&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">:disabled</span>=<span class="string">&quot;!!$route.params.id&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">class</span>=<span class="string">&quot;inputW&quot;</span></span></span><br><span class="line"><span class="tag"> /&gt;</span></span><br></pre></td></tr></table></figure><h2 id="8-封装员工头像组件"><a href="#8-封装员工头像组件" class="headerlink" title="8.封装员工头像组件"></a>8.封装员工头像组件</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022023683.png" alt="image.png"></p><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022048657.png" alt="image.png"></p><ul><li>创建image-upload组件-代码位置(<strong>src/views/employee/components/image-upload.vue</strong>)</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;el-upload</span><br><span class="line">    class=&quot;avatar-uploader&quot;</span><br><span class="line">    action=&quot;&quot;</span><br><span class="line">    :show-file-list=&quot;false&quot;</span><br><span class="line">    :before-upload=&quot;beforeAvatarUpload&quot;</span><br><span class="line">  &gt;</span><br><span class="line">    &lt;!-- (自动上传)action是上传地址 人资项目不需要 人资项目(手动上传)  --&gt;</span><br><span class="line">    &lt;!-- show-file-list不展示列表 --&gt;</span><br><span class="line">    &lt;img v-if=&quot;value&quot; :src=&quot;value&quot; class=&quot;avatar&quot;&gt;</span><br><span class="line">    &lt;i v-else class=&quot;el-icon-plus avatar-uploader-icon&quot; /&gt;</span><br><span class="line">  &lt;/el-upload&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  props: &#123;</span><br><span class="line">    value: &#123;</span><br><span class="line">      type: String,</span><br><span class="line">      default: &#x27;&#x27;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    // 检查函数 判断文件的类型还有大小 return  true(继续上传)/false(停止上传)</span><br><span class="line">    beforeAvatarUpload(file) &#123;</span><br><span class="line">      // jpeg png gif bmp</span><br><span class="line"></span><br><span class="line">      const isJPG = [&#x27;image/jpeg&#x27;, &#x27;image/png&#x27;, &#x27;image/gif&#x27;, &#x27;image/bmp&#x27;].includes(file.type)</span><br><span class="line">      const isLt2M = file.size / 1024 / 1024 &lt; 5 // 5M</span><br><span class="line"></span><br><span class="line">      if (!isJPG) &#123;</span><br><span class="line">        this.$message.error(&#x27;上传头像图片只能是 JPG PNG GIF BMP 格式!&#x27;)</span><br><span class="line">      &#125;</span><br><span class="line">      if (!isLt2M) &#123;</span><br><span class="line">        this.$message.error(&#x27;上传头像图片大小不能超过 5MB!&#x27;)</span><br><span class="line">      &#125;</span><br><span class="line">      return isJPG &amp;&amp; isLt2M</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">  .avatar-uploader .el-upload &#123;</span><br><span class="line">    border: 1px dashed #d9d9d9;</span><br><span class="line">    border-radius: 6px;</span><br><span class="line">    cursor: pointer;</span><br><span class="line">    position: relative;</span><br><span class="line">    overflow: hidden;</span><br><span class="line">  &#125;</span><br><span class="line">  .avatar-uploader .el-upload:hover &#123;</span><br><span class="line">    border-color: #409EFF;</span><br><span class="line">  &#125;</span><br><span class="line">  .avatar-uploader-icon &#123;</span><br><span class="line">    font-size: 28px;</span><br><span class="line">    color: #8c939d;</span><br><span class="line">    width: 178px;</span><br><span class="line">    height: 178px;</span><br><span class="line">    line-height: 178px;</span><br><span class="line">    text-align: center;</span><br><span class="line">  &#125;</span><br><span class="line">  .avatar &#123;</span><br><span class="line">    width: 178px;</span><br><span class="line">    height: 178px;</span><br><span class="line">    display: block;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><ul><li>在父组件中应用-代码位置(<strong>src/views/employee/detail.vue</strong>)</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">image-upload</span> <span class="attr">v-model</span>=<span class="string">&quot;userInfo.staffPhoto&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><h2 id="9-上传图片—创建腾讯云存储桶"><a href="#9-上传图片—创建腾讯云存储桶" class="headerlink" title="9.上传图片—创建腾讯云存储桶"></a>9.上传图片—创建腾讯云存储桶</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022023116.png" alt="image.png"></p><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022023766.png" alt="image.png"><br>1.注册腾讯云账号-课前完成<a href="https://cloud.tencent.com/login">https://cloud.tencent.com/login</a><br>2.创建腾讯云存储桶<br>3.得到应用密钥和应用标识</p><ul><li>创建存储桶</li></ul><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022023380.png" alt="image.png"></p><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022023698.png" alt="image.png"></p><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022024594.png" alt="image.png"></p><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022024510.png" alt="image.png"> </p><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022024274.png" alt="image.png"> </p><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022024541.png" alt="image.png"></p><h3 id="9-1获取存储桶相关信息"><a href="#9-1获取存储桶相关信息" class="headerlink" title="9.1获取存储桶相关信息"></a>9.1获取存储桶相关信息</h3><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022025344.png" alt="image.png"></p><blockquote><p>将存储桶和所属地域拷贝下来，备用</p></blockquote><ul><li>获取应用标识<a href="https://console.cloud.tencent.com/cam/capi">https://console.cloud.tencent.com/cam/capi</a></li></ul><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022025737.png" alt="image.png"></p><blockquote><p>将SecretId和SecretKey拷贝下来，备用</p></blockquote><p><strong>存储桶名称</strong>：izdloyl-1325700039</p><p><strong>所属地域</strong>：ap-nanjing</p><p><strong>SecretId</strong>: AKIDKYdXHCxXyEJDxYzFLI5jDY1LUUL4d1Qg</p><p><strong>SecretKey</strong>: DGAuVwDKI6kpupaAf2LWaVIxWyIVbaQ9</p><h2 id="10-使用cos-sdk完成上传"><a href="#10-使用cos-sdk完成上传" class="headerlink" title="10.使用cos-sdk完成上传"></a>10.使用cos-sdk完成上传</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022025096.png" alt="image.png"></p><ul><li>安装腾讯云js-sdk</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ npm i cos-js-sdk-v5 </span><br><span class="line">$ yarn add  cos-js-sdk-v5</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>使用el-upload自定义上传-代码位置(<strong>src/views/employee/components/image-upload.vue</strong>)</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-upload</span></span></span><br><span class="line"><span class="tag">    <span class="attr">class</span>=<span class="string">&quot;avatar-uploader&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">action</span>=<span class="string">&quot;&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">:show-file-list</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">:before-upload</span>=<span class="string">&quot;beforeAvatarUpload&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">:http-request</span>=<span class="string">&quot;uploadImage&quot;</span></span></span><br><span class="line"><span class="tag">  &gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- (自动上传)action是上传地址 人资项目不需要 人资项目(手动上传)  --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- show-file-list不展示列表 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">v-if</span>=<span class="string">&quot;value&quot;</span> <span class="attr">:src</span>=<span class="string">&quot;value&quot;</span> <span class="attr">class</span>=<span class="string">&quot;avatar&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">i</span> <span class="attr">v-else</span> <span class="attr">class</span>=<span class="string">&quot;el-icon-plus avatar-uploader-icon&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">el-upload</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>实现上传方法-代码位置</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 选择图片上传</span></span><br><span class="line"><span class="title function_">uploadImage</span>(<span class="params">params</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(params.<span class="property">file</span>)</span><br><span class="line">  <span class="keyword">const</span> cos = <span class="keyword">new</span> <span class="title function_">COS</span>(&#123;</span><br><span class="line">    <span class="title class_">SecretId</span>: <span class="string">&#x27;AKIDDSdjgnjT1NZ3a7VjkfVIwOdfv9IH2b8e&#x27;</span>,</span><br><span class="line">    <span class="title class_">SecretKey</span>: <span class="string">&#x27;WEwe9WJ9vLeq1BHNLLKF5Up10ndUDk24&#x27;</span></span><br><span class="line">  &#125;) <span class="comment">// 完成cos对象的初始化</span></span><br><span class="line">  cos.<span class="title function_">putObject</span>(&#123;</span><br><span class="line">    <span class="title class_">Bucket</span>: <span class="string">&#x27;heimachengxuyuan-1302806742&#x27;</span>, <span class="comment">// 存储桶名称</span></span><br><span class="line">    <span class="title class_">Region</span>: <span class="string">&#x27;ap-nanjing&#x27;</span>, <span class="comment">// 地域名称</span></span><br><span class="line">    <span class="title class_">Key</span>: params.<span class="property">file</span>.<span class="property">name</span>, <span class="comment">// 文件名称</span></span><br><span class="line">    <span class="title class_">StorageClass</span>: <span class="string">&#x27;STANDARD&#x27;</span>, <span class="comment">// 固定值</span></span><br><span class="line">    <span class="title class_">Body</span>: params.<span class="property">file</span> <span class="comment">// 文件对象</span></span><br><span class="line">  &#125;, <span class="function">(<span class="params">err, data</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (data.<span class="property">statusCode</span> === <span class="number">200</span> &amp;&amp; data.<span class="property">Location</span>) &#123;</span><br><span class="line">      <span class="comment">// 拿到了腾讯云返回的地址</span></span><br><span class="line">      <span class="comment">// 通过input自定义事件将地址传出去</span></span><br><span class="line">      <span class="variable language_">this</span>.$emit(<span class="string">&#x27;input&#x27;</span>, <span class="string">&#x27;http://&#x27;</span> + data.<span class="property">Location</span>) <span class="comment">// 将地址返回了</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">$message</span>.<span class="title function_">error</span>(err.<span class="property">Message</span>) <span class="comment">// 上传失败提示消息</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>这里需要使用 上个小节准备好的存储桶的名称-地域名称-应用标识-应用密钥</p></blockquote><p>这里需要知道Cos的初始化和上传的方法<br><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022025242.png" alt="image.png"></p><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022025086.png" alt="image.png"> </p><h1 id="八、权限管理"><a href="#八、权限管理" class="headerlink" title="八、权限管理"></a>八、权限管理</h1><h2 id="1-搭建权限页面"><a href="#1-搭建权限页面" class="headerlink" title="1. 搭建权限页面"></a>1. 搭建权限页面</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022025002.png" alt="image.png"></p><ul><li>实现权限管理的页面结构-代码位置(<strong>src/views/permission/index.vue</strong>)</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;container&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;app-container&quot;&gt;</span><br><span class="line">      &lt;el-button class=&quot;btn-add&quot; size=&quot;mini&quot; type=&quot;primary&quot;&gt;添加权限&lt;/el-button&gt;</span><br><span class="line">      &lt;el-table&gt;</span><br><span class="line">        &lt;el-table-column label=&quot;名称&quot; /&gt;</span><br><span class="line">        &lt;el-table-column label=&quot;标识&quot; /&gt;</span><br><span class="line">        &lt;el-table-column label=&quot;描述&quot; /&gt;</span><br><span class="line">        &lt;el-table-column label=&quot;操作&quot;&gt;</span><br><span class="line">          &lt;el-button size=&quot;mini&quot; type=&quot;text&quot;&gt;添加&lt;/el-button&gt;</span><br><span class="line">          &lt;el-button size=&quot;mini&quot; type=&quot;text&quot;&gt;编辑&lt;/el-button&gt;</span><br><span class="line">          &lt;el-button size=&quot;mini&quot; type=&quot;text&quot;&gt;删除&lt;/el-button&gt;</span><br><span class="line">        &lt;/el-table-column&gt;</span><br><span class="line">      &lt;/el-table&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#x27;Permission&#x27;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">.btn-add &#123;</span><br><span class="line">  margin: 10px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="2-获取数据转化树形"><a href="#2-获取数据转化树形" class="headerlink" title="2.获取数据转化树形"></a>2.获取数据转化树形</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022025840.png" alt="image.png"></p><ul><li>封装获取权限API-代码位置(<strong>src/api/permission.js</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">&#x27;@/utils/request&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/** *</span></span><br><span class="line"><span class="comment"> * 获取权限列表</span></span><br><span class="line"><span class="comment"> * **/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">getPermissionList</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;/sys/permission&#x27;</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>获取数据-转化树形-控制二级权限不显示添加按钮(<strong>src/views/permission/index.vue</strong>)</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;container&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;app-container&quot;&gt;</span><br><span class="line">      &lt;el-button class=&quot;btn-add&quot; size=&quot;mini&quot; type=&quot;primary&quot;&gt;添加权限&lt;/el-button&gt;</span><br><span class="line">      &lt;el-table default-expand-all :data=&quot;list&quot; row-key=&quot;id&quot;&gt;</span><br><span class="line">        &lt;el-table-column prop=&quot;name&quot; label=&quot;名称&quot; /&gt;</span><br><span class="line">        &lt;el-table-column prop=&quot;code&quot; label=&quot;标识&quot; /&gt;</span><br><span class="line">        &lt;el-table-column prop=&quot;description&quot; label=&quot;描述&quot; /&gt;</span><br><span class="line">        &lt;el-table-column label=&quot;操作&quot;&gt;</span><br><span class="line">          &lt;template v-slot=&quot;&#123; row &#125;&quot;&gt;</span><br><span class="line">            &lt;el-button v-if=&quot;row.type === 1&quot; size=&quot;mini&quot; type=&quot;text&quot;&gt;添加&lt;/el-button&gt;</span><br><span class="line">            &lt;el-button size=&quot;mini&quot; type=&quot;text&quot;&gt;编辑&lt;/el-button&gt;</span><br><span class="line">            &lt;el-button size=&quot;mini&quot; type=&quot;text&quot;&gt;删除&lt;/el-button&gt;</span><br><span class="line">          &lt;/template&gt;</span><br><span class="line"></span><br><span class="line">        &lt;/el-table-column&gt;</span><br><span class="line">      &lt;/el-table&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">import &#123; getPermissionList &#125; from &#x27;@/api/permission&#x27;</span><br><span class="line">import &#123; transListToTreeData &#125; from &#x27;@/utils&#x27;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#x27;Permission&#x27;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      list: []</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  created() &#123;</span><br><span class="line">    this.getPermissionList()</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    async getPermissionList() &#123;</span><br><span class="line">      this.list = transListToTreeData(await getPermissionList(), 0) // 将列表数据转化成树形结构</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">.btn-add &#123;</span><br><span class="line">  margin: 10px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="3-权限管理—作业"><a href="#3-权限管理—作业" class="headerlink" title="3.权限管理—作业"></a>3.权限管理—作业</h2><p>基于权限接口和线上效果完成 权限点的新增- 删除- 编辑</p><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022026903.png" alt="image.png"></p><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022026070.png" alt="image.png"> </p><p>要求： </p><ol><li>实现新增-删除-编辑功能</li><li>编辑模式不做限制-弹层-行内-跳转都可</li><li>注意：二级权限和一级权限的区别为type，当type为1时，为一级权限，当type为2时，为二级权限</li><li>二级权限应该添加在一级权限下，二者是通过id和pid进行关联的，其类似于组织架构中的添加子部门。</li></ol><p>作业实现</p><ol><li>封装权限管理的API接口-代码位置(<strong>src/api/permission.js</strong>)</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 新增权限</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">addPermission</span>(<span class="params">data</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;/sys/permission&#x27;</span>,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">    data</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 更新权限</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">updatePermission</span>(<span class="params">data</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">`/sys/permission/<span class="subst">$&#123;data.id&#125;</span>`</span>,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;put&#x27;</span>,</span><br><span class="line">    data</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除权限</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">delPermission</span>(<span class="params">id</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">`/sys/permission/<span class="subst">$&#123;id&#125;</span>`</span>,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;delete&#x27;</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 获取权限详情</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">getPermissionDetail</span>(<span class="params">id</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">`/sys/permission/<span class="subst">$&#123;id&#125;</span>`</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.新增编辑权限的弹层-代码位置(<strong>src/views/permission/index.vue</strong>)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 放置一个弹层 用来编辑新增节点 --&gt;</span><br><span class="line">   &lt;el-dialog :title=&quot;`$&#123;showText&#125;权限点`&quot; :visible=&quot;showDialog&quot; @close=&quot;btnCancel&quot;&gt;</span><br><span class="line">      &lt;!-- 表单 --&gt;</span><br><span class="line">      &lt;el-form ref=&quot;perForm&quot; :model=&quot;formData&quot; :rules=&quot;rules&quot; label-width=&quot;120px&quot;&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;权限名称&quot; prop=&quot;name&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;formData.name&quot; style=&quot;width:90%&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;权限标识&quot; prop=&quot;code&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;formData.code&quot; style=&quot;width:90%&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;权限描述&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;formData.description&quot; style=&quot;width:90%&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;开启&quot;&gt;</span><br><span class="line">          &lt;el-switch</span><br><span class="line">            v-model=&quot;formData.enVisible&quot;</span><br><span class="line">            active-value=&quot;1&quot;</span><br><span class="line">            inactive-value=&quot;0&quot;</span><br><span class="line">          /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">      &lt;/el-form&gt;</span><br><span class="line">      &lt;el-row slot=&quot;footer&quot; type=&quot;flex&quot; justify=&quot;center&quot;&gt;</span><br><span class="line">        &lt;el-col :span=&quot;6&quot;&gt;</span><br><span class="line">          &lt;el-button size=&quot;small&quot; type=&quot;primary&quot; @click=&quot;btnOK&quot;&gt;确定&lt;/el-button&gt;</span><br><span class="line">          &lt;el-button size=&quot;small&quot; @click=&quot;btnCancel&quot;&gt;取消&lt;/el-button&gt;</span><br><span class="line">        &lt;/el-col&gt;</span><br><span class="line">      &lt;/el-row&gt;</span><br><span class="line">    &lt;/el-dialog&gt;</span><br></pre></td></tr></table></figure><p>声明弹层需要的变量和表单数据和校验规则-代码位置(<strong>src/views/permission/index.vue</strong>)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; getPermissionList, updatePermission, addPermission, getPermissionDetail, delPermission &#125; <span class="keyword">from</span> <span class="string">&#x27;@/api/permission&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; transListToTreeData &#125; <span class="keyword">from</span> <span class="string">&#x27;@/utils&#x27;</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">list</span>: [],</span><br><span class="line">      <span class="attr">formData</span>: &#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;&#x27;</span>, <span class="comment">// 名称</span></span><br><span class="line">        <span class="attr">code</span>: <span class="string">&#x27;&#x27;</span>, <span class="comment">// 标识</span></span><br><span class="line">        <span class="attr">description</span>: <span class="string">&#x27;&#x27;</span>, <span class="comment">// 描述</span></span><br><span class="line">        <span class="attr">type</span>: <span class="string">&#x27;&#x27;</span>, <span class="comment">// 类型 该类型 不需要显示 因为点击添加的时候已经知道类型了</span></span><br><span class="line">        <span class="attr">pid</span>: <span class="string">&#x27;&#x27;</span>, <span class="comment">// 因为做的是树 需要知道添加到哪个节点下了</span></span><br><span class="line">        <span class="attr">enVisible</span>: <span class="string">&quot;0&quot;</span> <span class="comment">// 默认关闭</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">rules</span>: &#123;</span><br><span class="line">        <span class="attr">name</span>: [&#123; <span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">&#x27;权限名称不能为空&#x27;</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span> &#125;],</span><br><span class="line">        <span class="attr">code</span>: [&#123; <span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">&#x27;权限标识不能为空&#x27;</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span> &#125;]</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">showDialog</span>: <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">computed</span>: &#123;</span><br><span class="line">    <span class="title function_">showText</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">formData</span>.<span class="property">id</span> ? <span class="string">&#x27;编辑&#x27;</span> : <span class="string">&#x27;新增&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">created</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">getPermissionList</span>()</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">methods</span>: &#123;</span><br><span class="line">    <span class="keyword">async</span>  <span class="title function_">getPermissionList</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">list</span> = <span class="title function_">transListToTreeData</span>(<span class="keyword">await</span> <span class="title function_">getPermissionList</span>(), <span class="number">0</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>实现一级权限新增-二级权限新增-代码位置(<strong>src/views/permission/index.vue</strong>)</li></ol><p>添加一级权限-<img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022026528.png" alt="image.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-button class=&quot;btn-add&quot; size=&quot;mini&quot; type=&quot;primary&quot; @click=&quot;addPermission(row.id, 1)&quot;&gt;添加权限&lt;/el-button&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>添加二级权限-<img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022026739.png" alt="image.png"></p><blockquote><p>注意：一级添加的type为1， 二级添加的type为2</p></blockquote><p>点击添加调用的方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> <span class="title function_">addPermission</span>(<span class="params">pid, type</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">formData</span>.<span class="property">pid</span> = pid</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">formData</span>.<span class="property">type</span> = type</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">showDialog</span> = <span class="literal">true</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>实现确定和取消方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">btnOK</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">$refs</span>.<span class="property">perForm</span>.<span class="title function_">validate</span>().<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">formData</span>.<span class="property">id</span>) &#123;</span><br><span class="line">          <span class="keyword">return</span> <span class="title function_">updatePermission</span>(<span class="variable language_">this</span>.<span class="property">formData</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_">addPermission</span>(<span class="variable language_">this</span>.<span class="property">formData</span>)</span><br><span class="line">      &#125;).<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">//  提示消息</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$message</span>.<span class="title function_">success</span>(<span class="string">&#x27;新增成功&#x27;</span>)</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">getPermissionList</span>()</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">showDialog</span> = <span class="literal">false</span></span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">btnCancel</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">formData</span> = &#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;&#x27;</span>, <span class="comment">// 名称</span></span><br><span class="line">        <span class="attr">code</span>: <span class="string">&#x27;&#x27;</span>, <span class="comment">// 标识</span></span><br><span class="line">        <span class="attr">description</span>: <span class="string">&#x27;&#x27;</span>, <span class="comment">// 描述</span></span><br><span class="line">        <span class="attr">type</span>: <span class="string">&#x27;&#x27;</span>, <span class="comment">// 类型 该类型 不需要显示 因为点击添加的时候已经知道类型了</span></span><br><span class="line">        <span class="attr">pid</span>: <span class="string">&#x27;&#x27;</span>, <span class="comment">// 因为做的是树 需要知道添加到哪个节点下了</span></span><br><span class="line">        <span class="attr">enVisible</span>: <span class="string">&quot;0&quot;</span> <span class="comment">// 默认关闭</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">$refs</span>.<span class="property">perForm</span>.<span class="title function_">resetFields</span>()</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">showDialog</span> = <span class="literal">false</span></span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure><p>实现编辑弹层</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-button type=&quot;text&quot; size=&quot;mini&quot; @click=&quot;editPermission(row.id)&quot;&gt;编辑&lt;/el-button&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>点击编辑方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">async</span> <span class="title function_">editPermission</span>(<span class="params">id</span>) &#123;</span><br><span class="line">      <span class="comment">// 根据获取id获取详情</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">formData</span> = <span class="keyword">await</span> <span class="title function_">getPermissionDetail</span>(id)</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">showDialog</span> = <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>点击删除</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-button type=&quot;text&quot; size=&quot;mini&quot; @click=&quot;delPermission(row.id)&quot;&gt; 删除&lt;/el-button&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>删除方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 删除操作</span></span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">delPermission</span>(<span class="params">id</span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">await</span> <span class="variable language_">this</span>.$confirm(<span class="string">&#x27;确定要删除该数据吗&#x27;</span>)</span><br><span class="line">      <span class="keyword">await</span> <span class="title function_">delPermission</span>(id)</span><br><span class="line">      <span class="variable language_">this</span>.<span class="title function_">getPermissionList</span>()</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">$message</span>.<span class="title function_">success</span>(<span class="string">&#x27;删除成功&#x27;</span>)</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(error)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><h2 id="4-权限概念"><a href="#4-权限概念" class="headerlink" title="4.权限概念"></a>4.权限概念</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022026248.png" alt="image.png"></p><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022050934.png" alt="image.png"></p><blockquote><p>权限是通过角色这个中间人实现，首先员工拥有角色，角色拥有权限，那么员工自动拥有了角色所对应的权限。</p></blockquote><p>所以接下来，我们需要实现 给员工分配角色，给角色分配权限。</p><ul><li>分配过程-给员工分角色</li></ul><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022027797.png" alt="image.png"></p><ul><li>分配过程-给角色分权限</li></ul><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022027339.png" alt="image.png"></p><h2 id="5-员工分配角色—弹出层"><a href="#5-员工分配角色—弹出层" class="headerlink" title="5.员工分配角色—弹出层"></a>5.员工分配角色—弹出层</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022027852.png" alt="image.png"></p><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022050743.png" alt="image.png"></p><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022050639.png" alt="image.png"></p><ul><li>封装获取可用角色的API-代码位置(<strong>src/api/employee.js</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取可用的角色</span></span><br><span class="line"><span class="comment"> * **/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">getEnableRoleList</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;/sys/role/list/enabled&#x27;</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>声明变量控制弹层显示-和角色列表-代码位置(<strong>src/views/employee/index.vue</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">data () &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">showRoleDialog</span>: <span class="literal">false</span>, <span class="comment">// 用来控制角色弹层的显示</span></span><br><span class="line">      <span class="attr">roleList</span>: [], <span class="comment">// 接收角色列表</span></span><br><span class="line">      <span class="attr">roleIds</span>: [] <span class="comment">// 用来双向绑定数据的</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>点击角色按钮-获取角色列表-代码位置(<strong>src/views/employee/index.vue</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 点击角色按钮弹出层</span></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">btnRole</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">showRoleDialog</span> = <span class="literal">true</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">roleList</span> = <span class="keyword">await</span> <span class="title function_">getEnableRoleList</span>()</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ul><li>放置弹层-绑定变量和渲染checkbox-代码位置(<strong>src/views/employee/index.vue</strong>)</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-dialog</span> <span class="attr">:visible.sync</span>=<span class="string">&quot;showRoleDialog&quot;</span> <span class="attr">title</span>=<span class="string">&quot;分配角色&quot;</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 弹层内容 --&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- checkbox --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-checkbox-group</span> <span class="attr">v-model</span>=<span class="string">&quot;roleIds&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 放置n个的checkbox  要执行checkbox的存储值 item.id--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-checkbox</span></span></span><br><span class="line"><span class="tag">          <span class="attr">v-for</span>=<span class="string">&quot;item in roleList&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">:key</span>=<span class="string">&quot;item.id&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">:label</span>=<span class="string">&quot;item.id&quot;</span></span></span><br><span class="line"><span class="tag">        &gt;</span>&#123;&#123; item.name &#125;&#125;<span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-checkbox-group</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-dialog</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="6-员工分配角色—回显数据并提交"><a href="#6-员工分配角色—回显数据并提交" class="headerlink" title="6.员工分配角色—回显数据并提交"></a>6.员工分配角色—回显数据并提交</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022027317.png" alt="image.png"></p><ul><li>封装给员工分配角色的接口-代码位置(<strong>src/api/employee.js</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 分配员工角色</span></span><br><span class="line"><span class="comment"> * ***/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">assignRole</span>(<span class="params">data</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;/sys/user/assignRoles&#x27;</span>,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;put&#x27;</span>,</span><br><span class="line">    data</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>点击角色按钮时，获取员工已经拥有的角色，并记录当前点击的用户id-代码位置(<strong>src/views/employee/index.vue</strong>)</p><p>在data中声明一个id用来记录</p></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">data () &#123;</span><br><span class="line">  <span class="keyword">return</span>  &#123;</span><br><span class="line">    <span class="attr">currentUserId</span>: <span class="literal">null</span> <span class="comment">// 用来记录当前点击的用户id</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="title function_">btnRole</span>(<span class="params">id</span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">roleList</span> = <span class="keyword">await</span> <span class="title function_">getEnableRoleList</span>()</span><br><span class="line">      <span class="comment">// 记录当前点击的id 因为后边 确定取消要存取给对应的用户</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">currentUserId</span> = id</span><br><span class="line">      <span class="keyword">const</span> &#123; roleIds &#125; = <span class="keyword">await</span> <span class="title function_">getEmployeeDetail</span>(id)</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">roleIds</span> = roleIds</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">showRoleDialog</span> = <span class="literal">true</span> <span class="comment">// 调整顺序</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><blockquote><p>注意，这里我们特地调整了弹层的顺序，因为获取已经拥有的角色是一个异步的过程，如果弹层显示在前，会出现卡顿的效果，表现出缓慢的效果，所以等到获取所有数据之后再弹层。</p></blockquote><ul><li>点击确定实现给用户分配角色-代码位置(<strong>src/views/employee/index.vue</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 点击角色的确定</span></span><br><span class="line">   <span class="keyword">async</span>  <span class="title function_">btnRoleOK</span>(<span class="params"></span>) &#123;</span><br><span class="line">     <span class="keyword">await</span> <span class="title function_">assignRole</span>(&#123;</span><br><span class="line">       <span class="attr">id</span>: <span class="variable language_">this</span>.<span class="property">currentUserId</span>,</span><br><span class="line">       <span class="attr">roleIds</span>: <span class="variable language_">this</span>.<span class="property">roleIds</span></span><br><span class="line">     &#125;)</span><br><span class="line">     <span class="variable language_">this</span>.<span class="property">$message</span>.<span class="title function_">success</span>(<span class="string">&#x27;分配用户角色成功&#x27;</span>)</span><br><span class="line">     <span class="variable language_">this</span>.<span class="property">showRoleDialog</span> = <span class="literal">false</span></span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><ul><li>取消关闭弹层-代码位置(<strong>src/views/employee/index.vue</strong>)</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-row</span> <span class="attr">slot</span>=<span class="string">&quot;footer&quot;</span> <span class="attr">type</span>=<span class="string">&quot;flex&quot;</span> <span class="attr">justify</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;6&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;btnRoleOK&quot;</span>&gt;</span>确定<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;showRoleDialog = false&quot;</span>&gt;</span>取消<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="7-给角色分配权限—弹出层"><a href="#7-给角色分配权限—弹出层" class="headerlink" title="7.给角色分配权限—弹出层"></a>7.给角色分配权限—弹出层</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022027649.png" alt="image.png"></p><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022051339.png" alt="image.png"></p><ul><li>声明变量控制弹层显示和接收权限数据-代码位置(<strong>src/views/role/index.vue</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">data () &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">     <span class="attr">showPermissionDialog</span>: <span class="literal">false</span>,</span><br><span class="line">     <span class="attr">permissionData</span>: []</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>点击分配权限-弹出层-获取数据并转化树形-代码位置(<strong>src/views/role/index.vue</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-button size=<span class="string">&quot;mini&quot;</span> type=<span class="string">&quot;text&quot;</span> @click=<span class="string">&quot;btnPermission&quot;</span>&gt;分配权限&lt;/el-button&gt;</span><br><span class="line"><span class="keyword">async</span>  <span class="title function_">btnPermission</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">showPermissionDialog</span> = <span class="literal">true</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">permissionData</span> = <span class="title function_">transListToTreeData</span>(<span class="keyword">await</span> <span class="title function_">getPermissionList</span>(), <span class="number">0</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>放置弹层和树组件-代码位置(<strong>src/views/role/index.vue</strong>)</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 放置权限弹层 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-dialog</span> <span class="attr">:visible.sync</span>=<span class="string">&quot;showPermissionDialog&quot;</span> <span class="attr">title</span>=<span class="string">&quot;分配权限&quot;</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 放置权限数据 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-tree</span></span></span><br><span class="line"><span class="tag">        <span class="attr">:data</span>=<span class="string">&quot;permissionData&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">:props</span>=<span class="string">&quot;&#123; label: &#x27;name&#x27; &#125;&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">show-checkbox</span></span></span><br><span class="line"><span class="tag">        <span class="attr">default-expand-all</span></span></span><br><span class="line"><span class="tag">      /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-dialog</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="8-角色分配权限—显示已有权限数据"><a href="#8-角色分配权限—显示已有权限数据" class="headerlink" title="8.角色分配权限—显示已有权限数据"></a>8.角色分配权限—显示已有权限数据</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022027947.png" alt="image.png"></p><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022028881.png" alt="image.png"></p><ul><li>封装获取角色详情的API-代码位置(<strong>src/api/role.js</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取角色详情</span></span><br><span class="line"><span class="comment"> * **/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">getRoleDetail</span>(<span class="params">id</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">`/sys/role/<span class="subst">$&#123;id&#125;</span>`</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>声明变量记录当前点击的角色id和角色所拥有的权限数据-代码位置(<strong>src/views/role/index.vue</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">data () &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">currentRoleId</span>: <span class="literal">null</span>,</span><br><span class="line">      <span class="attr">permIds</span>: []</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>点击分配权限按钮时传递角色id，并根据id获取该角色所拥有的权限-代码位置(<strong>src/views/role/index.vue</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-button size=<span class="string">&quot;mini&quot;</span> type=<span class="string">&quot;text&quot;</span> @click=<span class="string">&quot;btnPermission(row.id)&quot;</span>&gt;分配权限&lt;/el-button&gt;</span><br><span class="line"><span class="keyword">async</span>  <span class="title function_">btnPermission</span>(<span class="params">id</span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">currentRoleId</span> = id</span><br><span class="line">      <span class="keyword">const</span> &#123; permIds &#125; = <span class="keyword">await</span> <span class="title function_">getRoleDetail</span>(id)</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">permIds</span> = permIds</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">permissionData</span> = <span class="title function_">transListToTreeData</span>(<span class="keyword">await</span> <span class="title function_">getPermissionList</span>(), <span class="number">0</span>)</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">showPermissionDialog</span> = <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>设置el-tree组件的属性-node-key和当前选中数据-代码位置(<strong>src/views/role/index.vue</strong>)</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-tree</span></span></span><br><span class="line"><span class="tag">        <span class="attr">node-key</span>=<span class="string">&quot;id&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">:data</span>=<span class="string">&quot;permissionData&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">:props</span>=<span class="string">&quot;&#123; label: &#x27;name&#x27; &#125;&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">show-checkbox</span></span></span><br><span class="line"><span class="tag">        <span class="attr">default-expand-all</span></span></span><br><span class="line"><span class="tag">        <span class="attr">:default-checked-keys</span>=<span class="string">&quot;permIds&quot;</span></span></span><br><span class="line"><span class="tag">  /&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>default-checked-keys的属性是设置当前选中的节点，但是必须配合node-key属性，因为permIds变量中存储的都是id，必须el-tree组件知道key是哪个字段，所以设置node-key=”id”</p></blockquote><h2 id="9-角色分配权限—确定提交"><a href="#9-角色分配权限—确定提交" class="headerlink" title="9.角色分配权限—确定提交"></a>9.角色分配权限—确定提交</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022028958.png" alt="image.png"></p><ul><li>封装分配权限的接口API-代码位置(<strong>src/api/role.js</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 给角色分配权限</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * ***/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">assignPerm</span>(<span class="params">data</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;/sys/role/assignPrem&#x27;</span>,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;put&#x27;</span>,</span><br><span class="line">    data</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>确定和取消事件-代码位置(<strong>src/views/role/index.vue</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"> &lt;el-row slot=<span class="string">&quot;footer&quot;</span> type=<span class="string">&quot;flex&quot;</span> justify=<span class="string">&quot;center&quot;</span>&gt;</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;6&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;btnPermissionOK&quot;</span>&gt;</span>确定<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;showPermissionDialog = false&quot;</span>&gt;</span>取消<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span></span><br><span class="line">  &lt;/el-row&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 点击确定时触发</span></span><br><span class="line">    <span class="keyword">async</span>  <span class="title function_">btnPermissionOK</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">await</span> <span class="title function_">assignPerm</span>(&#123;</span><br><span class="line">        <span class="attr">id</span>: <span class="variable language_">this</span>.<span class="property">currentRoleId</span>,</span><br><span class="line">        <span class="attr">permIds</span>: <span class="variable language_">this</span>.<span class="property">$refs</span>.<span class="property">permTree</span>.<span class="title function_">getCheckedKeys</span>()</span><br><span class="line">      &#125;)</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">$message</span>.<span class="title function_">success</span>(<span class="string">&#x27;角色分配权限成功&#x27;</span>)</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">showPermissionDialog</span> = <span class="literal">false</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="10-拆分静态路由—动态路由"><a href="#10-拆分静态路由—动态路由" class="headerlink" title="10.拆分静态路由—动态路由"></a>10.拆分静态路由—动态路由<img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022028328.png" alt="image.png"></h2><ul><li>将静态路由和动态路由进行拆分-代码位置(<strong>src/router/index.js</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Router</span> <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">Router</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Layout */</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Layout</span> <span class="keyword">from</span> <span class="string">&#x27;@/layout&#x27;</span></span><br><span class="line"><span class="keyword">import</span> departmentRouter <span class="keyword">from</span> <span class="string">&#x27;./modules/department&#x27;</span></span><br><span class="line"><span class="keyword">import</span> approvalRouter <span class="keyword">from</span> <span class="string">&#x27;./modules/approval&#x27;</span></span><br><span class="line"><span class="keyword">import</span> attendanceRouter <span class="keyword">from</span> <span class="string">&#x27;./modules/attendance&#x27;</span></span><br><span class="line"><span class="keyword">import</span> employeeRouter <span class="keyword">from</span> <span class="string">&#x27;./modules/employee&#x27;</span></span><br><span class="line"><span class="keyword">import</span> permissionRouter <span class="keyword">from</span> <span class="string">&#x27;./modules/permission&#x27;</span></span><br><span class="line"><span class="keyword">import</span> roleRouter <span class="keyword">from</span> <span class="string">&#x27;./modules/role&#x27;</span></span><br><span class="line"><span class="keyword">import</span> salaryRouter <span class="keyword">from</span> <span class="string">&#x27;./modules/salary&#x27;</span></span><br><span class="line"><span class="keyword">import</span> socialRouter <span class="keyword">from</span> <span class="string">&#x27;./modules/social&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Note: sub-menu only appear when route children.length &gt;= 1</span></span><br><span class="line"><span class="comment"> * Detail see: https://panjiachen.github.io/vue-element-admin-site/guide/essentials/router-and-nav.html</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * hidden: true                   if set true, item will not show in the sidebar(default is false)</span></span><br><span class="line"><span class="comment"> * alwaysShow: true               if set true, will always show the root menu</span></span><br><span class="line"><span class="comment"> *                                if not set alwaysShow, when item has more than one children route,</span></span><br><span class="line"><span class="comment"> *                                it will becomes nested mode, otherwise not show the root menu</span></span><br><span class="line"><span class="comment"> * redirect: noRedirect           if set noRedirect will no redirect in the breadcrumb</span></span><br><span class="line"><span class="comment"> * name:&#x27;router-name&#x27;             the name is used by &lt;keep-alive&gt; (must set!!!)</span></span><br><span class="line"><span class="comment"> * meta : &#123;</span></span><br><span class="line"><span class="comment">    roles: [&#x27;admin&#x27;,&#x27;editor&#x27;]    control the page roles (you can set multiple roles)</span></span><br><span class="line"><span class="comment">    title: &#x27;title&#x27;               the name show in sidebar and breadcrumb (recommend set)</span></span><br><span class="line"><span class="comment">    icon: &#x27;svg-name&#x27;/&#x27;el-icon-x&#x27; the icon show in the sidebar</span></span><br><span class="line"><span class="comment">    breadcrumb: false            if set false, the item will hidden in breadcrumb(default is true)</span></span><br><span class="line"><span class="comment">    activeMenu: &#x27;/example/list&#x27;  if set path, the sidebar will highlight the path you set</span></span><br><span class="line"><span class="comment">  &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * constantRoutes</span></span><br><span class="line"><span class="comment"> * a base page that does not have permission requirements</span></span><br><span class="line"><span class="comment"> * all roles can be accessed</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> constantRoutes = [</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;/login&#x27;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;@/views/login/index&#x27;</span>),</span><br><span class="line">    <span class="attr">hidden</span>: <span class="literal">true</span></span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;/404&#x27;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;@/views/404&#x27;</span>),</span><br><span class="line">    <span class="attr">hidden</span>: <span class="literal">true</span></span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="title class_">Layout</span>,</span><br><span class="line">    <span class="attr">redirect</span>: <span class="string">&#x27;/dashboard&#x27;</span>,</span><br><span class="line">    <span class="attr">children</span>: [&#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;dashboard&#x27;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&#x27;Dashboard&#x27;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;@/views/dashboard/index&#x27;</span>),</span><br><span class="line">      <span class="attr">meta</span>: &#123; <span class="attr">title</span>: <span class="string">&#x27;首页&#x27;</span>, <span class="attr">icon</span>: <span class="string">&#x27;dashboard&#x27;</span> &#125;</span><br><span class="line">    &#125;]</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 404 page must be placed at the end !!!</span></span><br><span class="line">  &#123; <span class="attr">path</span>: <span class="string">&#x27;*&#x27;</span>, <span class="attr">redirect</span>: <span class="string">&#x27;/404&#x27;</span>, <span class="attr">hidden</span>: <span class="literal">true</span> &#125;</span><br><span class="line">]</span><br><span class="line"><span class="comment">// 动态路由</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> asyncRoutes = [</span><br><span class="line">  departmentRouter,</span><br><span class="line">  roleRouter,</span><br><span class="line">  employeeRouter,</span><br><span class="line">  permissionRouter,</span><br><span class="line">  attendanceRouter,</span><br><span class="line">  approvalRouter,</span><br><span class="line">  salaryRouter,</span><br><span class="line">  socialRouter]</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">createRouter</span> = (<span class="params"></span>) =&gt; <span class="keyword">new</span> <span class="title class_">Router</span>(&#123;</span><br><span class="line">  <span class="comment">// mode: &#x27;history&#x27;, // require service support</span></span><br><span class="line">  <span class="attr">scrollBehavior</span>: <span class="function">() =&gt;</span> (&#123; <span class="attr">y</span>: <span class="number">0</span> &#125;),</span><br><span class="line">  <span class="attr">routes</span>: constantRoutes <span class="comment">// 默认引入静态路由</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment">// Detail see: https://github.com/vuejs/vue-router/issues/1234#issuecomment-357941465</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">resetRouter</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> newRouter = <span class="title function_">createRouter</span>()</span><br><span class="line">  router.<span class="property">matcher</span> = newRouter.<span class="property">matcher</span> <span class="comment">// reset router</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure><h2 id="11-根据用户权限添加动态路由"><a href="#11-根据用户权限添加动态路由" class="headerlink" title="11.根据用户权限添加动态路由"></a>11.根据用户权限添加动态路由</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022028382.png" alt="image.png"></p><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022028370.png" alt="image.png"><br>怎么匹配?</p><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022028196.png" alt="image.png"></p><ul><li>Vuex用户模块action中返回result信息</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="title function_">getUserInfo</span>(<span class="params">context</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> result = <span class="keyword">await</span> <span class="title function_">getUserInfo</span>()</span><br><span class="line">    context.<span class="title function_">commit</span>(<span class="string">&#x27;setUserInfo&#x27;</span>, result)</span><br><span class="line">    <span class="keyword">return</span> result <span class="comment">// 返回数据</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>权限拦截处筛选-添加路由-代码位置(<strong>src/permission.js</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&#x27;@/router&#x27;</span></span><br><span class="line"><span class="keyword">import</span> nprogress <span class="keyword">from</span> <span class="string">&#x27;nprogress&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;nprogress/nprogress.css&#x27;</span></span><br><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">&#x27;@/store&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; asyncRoutes &#125; <span class="keyword">from</span> <span class="string">&#x27;@/router&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *前置守卫</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> whiteList = [<span class="string">&#x27;/login&#x27;</span>, <span class="string">&#x27;/404&#x27;</span>]</span><br><span class="line">router.<span class="title function_">beforeEach</span>(<span class="title function_">async</span>(to, <span class="keyword">from</span>, next) =&gt; &#123;</span><br><span class="line">  nprogress.<span class="title function_">start</span>()</span><br><span class="line">  <span class="keyword">if</span> (store.<span class="property">getters</span>.<span class="property">token</span>) &#123;</span><br><span class="line">    <span class="comment">// 存在token</span></span><br><span class="line">    <span class="keyword">if</span> (to.<span class="property">path</span> === <span class="string">&#x27;/login&#x27;</span>) &#123;</span><br><span class="line">      <span class="comment">// 跳转到主页</span></span><br><span class="line">      <span class="title function_">next</span>(<span class="string">&#x27;/&#x27;</span>) <span class="comment">// 中转到主页</span></span><br><span class="line">      <span class="comment">// next（地址）并没有执行后置守卫</span></span><br><span class="line">      nprogress.<span class="title function_">done</span>()</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// 判断是否获取过资料</span></span><br><span class="line">      <span class="keyword">if</span> (!store.<span class="property">getters</span>.<span class="property">userId</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> &#123; roles &#125; = <span class="keyword">await</span> store.<span class="title function_">dispatch</span>(<span class="string">&#x27;user/getUserInfo&#x27;</span>)</span><br><span class="line">        <span class="comment">// console.log(roles.menus) // 数组 不确定 可能是8个 1个 0个</span></span><br><span class="line">        <span class="comment">// console.log(asyncRoutes) // 数组 8个</span></span><br><span class="line">        <span class="keyword">const</span> filterRoutes = asyncRoutes.<span class="title function_">filter</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">          <span class="comment">// return true/false</span></span><br><span class="line">          <span class="keyword">return</span> roles.<span class="property">menus</span>.<span class="title function_">includes</span>(item.<span class="property">name</span>)</span><br><span class="line">        &#125;) <span class="comment">// 筛选后的路由</span></span><br><span class="line">        router.<span class="title function_">addRoutes</span>([...filterRoutes, &#123; <span class="attr">path</span>: <span class="string">&#x27;*&#x27;</span>, <span class="attr">redirect</span>: <span class="string">&#x27;/404&#x27;</span>, <span class="attr">hidden</span>: <span class="literal">true</span> &#125;]) <span class="comment">// 添加动态路由信息到路由表</span></span><br><span class="line">        <span class="comment">// router添加动态路由之后 需要转发一下</span></span><br><span class="line">        <span class="title function_">next</span>(to.<span class="property">path</span>) <span class="comment">// 目的是让路由拥有信息 router的已知缺陷</span></span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="title function_">next</span>() <span class="comment">// 放过</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 没有token</span></span><br><span class="line">    <span class="keyword">if</span> (whiteList.<span class="title function_">includes</span>(to.<span class="property">path</span>)) &#123;</span><br><span class="line">      <span class="title function_">next</span>()</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="title function_">next</span>(<span class="string">&#x27;/login&#x27;</span>) <span class="comment">// 中转到登录页</span></span><br><span class="line">      nprogress.<span class="title function_">done</span>()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">/** *</span></span><br><span class="line"><span class="comment"> * 后置守卫</span></span><br><span class="line"><span class="comment"> * **/</span></span><br><span class="line">router.<span class="title function_">afterEach</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;123&#x27;</span>)</span><br><span class="line">  nprogress.<span class="title function_">done</span>()</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li>删除静态路由中的404-代码位置(<strong>src/router/index.js</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * constantRoutes</span></span><br><span class="line"><span class="comment"> * a base page that does not have permission requirements</span></span><br><span class="line"><span class="comment"> * all roles can be accessed</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> constantRoutes = [</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;/login&#x27;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;@/views/login/index&#x27;</span>),</span><br><span class="line">    <span class="attr">hidden</span>: <span class="literal">true</span></span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;/404&#x27;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;@/views/404&#x27;</span>),</span><br><span class="line">    <span class="attr">hidden</span>: <span class="literal">true</span></span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="title class_">Layout</span>,</span><br><span class="line">    <span class="attr">redirect</span>: <span class="string">&#x27;/dashboard&#x27;</span>,</span><br><span class="line">    <span class="attr">children</span>: [&#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;dashboard&#x27;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&#x27;Dashboard&#x27;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;@/views/dashboard/index&#x27;</span>),</span><br><span class="line">      <span class="attr">meta</span>: &#123; <span class="attr">title</span>: <span class="string">&#x27;首页&#x27;</span>, <span class="attr">icon</span>: <span class="string">&#x27;dashboard&#x27;</span> &#125;</span><br><span class="line">    &#125;]</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><ul><li>针对每个路由模块的配置文件添加name属性，和权限的数据进行对应。</li></ul><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022028863.png" alt="image.png"> </p><h2 id="12-根据权限显示左侧菜单"><a href="#12-根据权限显示左侧菜单" class="headerlink" title="12.根据权限显示左侧菜单"></a>12.根据权限显示左侧菜单</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022029992.png" alt="image.png"></p><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022029114.png" alt="image.png"></p><ul><li>Vuex中的user模块添加state管理-代码位置(<strong>src/store/modules/user.js</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; getToken, setToken, removeToken &#125; <span class="keyword">from</span> <span class="string">&#x27;@/utils/auth&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; login, getUserInfo &#125; <span class="keyword">from</span> <span class="string">&#x27;@/api/user&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; constantRoutes &#125; <span class="keyword">from</span> <span class="string">&#x27;@/router&#x27;</span></span><br><span class="line"><span class="keyword">const</span> state = &#123;</span><br><span class="line">  <span class="attr">token</span>: <span class="title function_">getToken</span>(), <span class="comment">// 从缓存中读取初始值</span></span><br><span class="line">  <span class="attr">userInfo</span>: &#123;&#125;, <span class="comment">// 存储用户基本资料状态</span></span><br><span class="line">  <span class="attr">routes</span>: constantRoutes <span class="comment">// 静态路由的数组</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> mutations = &#123;</span><br><span class="line">  <span class="title function_">setToken</span>(<span class="params">state, token</span>) &#123;</span><br><span class="line">    state.<span class="property">token</span> = token</span><br><span class="line">    <span class="comment">// 同步到缓存</span></span><br><span class="line">    <span class="title function_">setToken</span>(token)</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">removeToken</span>(<span class="params">state</span>) &#123;</span><br><span class="line">    <span class="comment">// 删除Vuex的token</span></span><br><span class="line">    state.<span class="property">token</span> = <span class="literal">null</span></span><br><span class="line">    <span class="title function_">removeToken</span>()</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">setUserInfo</span>(<span class="params">state, userInfo</span>) &#123;</span><br><span class="line">    state.<span class="property">userInfo</span> = userInfo</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">setRoutes</span>(<span class="params">state, newRoutes</span>) &#123;</span><br><span class="line">    state.<span class="property">routes</span> = [...constantRoutes, ...newRoutes] <span class="comment">// 静态路由 + 动态路由</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> actions = &#123;</span><br><span class="line">  <span class="comment">// context上下文，传入参数</span></span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">login</span>(<span class="params">context, data</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(data)</span><br><span class="line">    <span class="comment">// todo: 调用登录接口</span></span><br><span class="line">    <span class="keyword">const</span> token = <span class="keyword">await</span> <span class="title function_">login</span>(data)</span><br><span class="line">    <span class="comment">// 返回一个token 123456</span></span><br><span class="line">    context.<span class="title function_">commit</span>(<span class="string">&#x27;setToken&#x27;</span>, token)</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 获取用户的基本资料</span></span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">getUserInfo</span>(<span class="params">context</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> result = <span class="keyword">await</span> <span class="title function_">getUserInfo</span>()</span><br><span class="line">    context.<span class="title function_">commit</span>(<span class="string">&#x27;setUserInfo&#x27;</span>, result)</span><br><span class="line">    <span class="keyword">return</span> result <span class="comment">// 返回数据</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 退出登录的action</span></span><br><span class="line">  <span class="title function_">logout</span>(<span class="params">context</span>) &#123;</span><br><span class="line">    context.<span class="title function_">commit</span>(<span class="string">&#x27;removeToken&#x27;</span>) <span class="comment">// 删除token</span></span><br><span class="line">    context.<span class="title function_">commit</span>(<span class="string">&#x27;setUserInfo&#x27;</span>, &#123;&#125;) <span class="comment">// 设置用户信息为空对象</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">namespaced</span>: <span class="literal">true</span>, <span class="comment">// 开启命名空间</span></span><br><span class="line">  state,</span><br><span class="line">  mutations,</span><br><span class="line">  actions</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>筛选路由后，更新state信息-代码位置(<strong>src/permission.js</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&#x27;@/router&#x27;</span></span><br><span class="line"><span class="keyword">import</span> nprogress <span class="keyword">from</span> <span class="string">&#x27;nprogress&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;nprogress/nprogress.css&#x27;</span></span><br><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">&#x27;@/store&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; asyncRoutes &#125; <span class="keyword">from</span> <span class="string">&#x27;@/router&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *前置守卫</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> whiteList = [<span class="string">&#x27;/login&#x27;</span>, <span class="string">&#x27;/404&#x27;</span>]</span><br><span class="line">router.<span class="title function_">beforeEach</span>(<span class="title function_">async</span>(to, <span class="keyword">from</span>, next) =&gt; &#123;</span><br><span class="line">  nprogress.<span class="title function_">start</span>()</span><br><span class="line">  <span class="keyword">if</span> (store.<span class="property">getters</span>.<span class="property">token</span>) &#123;</span><br><span class="line">    <span class="comment">// 存在token</span></span><br><span class="line">    <span class="keyword">if</span> (to.<span class="property">path</span> === <span class="string">&#x27;/login&#x27;</span>) &#123;</span><br><span class="line">      <span class="comment">// 跳转到主页</span></span><br><span class="line">      <span class="title function_">next</span>(<span class="string">&#x27;/&#x27;</span>) <span class="comment">// 中转到主页</span></span><br><span class="line">      <span class="comment">// next（地址）并没有执行后置守卫</span></span><br><span class="line">      nprogress.<span class="title function_">done</span>()</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// 判断是否获取过资料</span></span><br><span class="line">      <span class="keyword">if</span> (!store.<span class="property">getters</span>.<span class="property">userId</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> &#123; roles &#125; = <span class="keyword">await</span> store.<span class="title function_">dispatch</span>(<span class="string">&#x27;user/getUserInfo&#x27;</span>)</span><br><span class="line">        <span class="comment">// console.log(roles.menus) // 数组 不确定 可能是8个 1个 0个</span></span><br><span class="line">        <span class="comment">// console.log(asyncRoutes) // 数组 8个</span></span><br><span class="line">        <span class="keyword">const</span> filterRoutes = asyncRoutes.<span class="title function_">filter</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">          <span class="comment">// return true/false</span></span><br><span class="line">          <span class="keyword">return</span> roles.<span class="property">menus</span>.<span class="title function_">includes</span>(item.<span class="property">name</span>)</span><br><span class="line">        &#125;) <span class="comment">// 筛选后的路由</span></span><br><span class="line">        store.<span class="title function_">commit</span>(<span class="string">&#x27;user/setRoutes&#x27;</span>, filterRoutes)</span><br><span class="line">        router.<span class="title function_">addRoutes</span>([...filterRoutes, &#123; <span class="attr">path</span>: <span class="string">&#x27;*&#x27;</span>, <span class="attr">redirect</span>: <span class="string">&#x27;/404&#x27;</span>, <span class="attr">hidden</span>: <span class="literal">true</span> &#125;]) <span class="comment">// 添加动态路由信息到路由表</span></span><br><span class="line">        <span class="comment">// router添加动态路由之后 需要转发一下</span></span><br><span class="line">        <span class="title function_">next</span>(to.<span class="property">path</span>) <span class="comment">// 目的是让路由拥有信息 router的已知缺陷</span></span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="title function_">next</span>() <span class="comment">// 放过</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 没有token</span></span><br><span class="line">    <span class="keyword">if</span> (whiteList.<span class="title function_">includes</span>(to.<span class="property">path</span>)) &#123;</span><br><span class="line">      <span class="title function_">next</span>()</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="title function_">next</span>(<span class="string">&#x27;/login&#x27;</span>) <span class="comment">// 中转到登录页</span></span><br><span class="line">      nprogress.<span class="title function_">done</span>()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">/** *</span></span><br><span class="line"><span class="comment"> * 后置守卫</span></span><br><span class="line"><span class="comment"> * **/</span></span><br><span class="line">router.<span class="title function_">afterEach</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;123&#x27;</span>)</span><br><span class="line">  nprogress.<span class="title function_">done</span>()</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>使用getters开放路由的访问信息-代码位置(<strong>src/store/getters.js</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> getters = &#123;</span><br><span class="line">  <span class="attr">sidebar</span>: <span class="function"><span class="params">state</span> =&gt;</span> state.<span class="property">app</span>.<span class="property">sidebar</span>,</span><br><span class="line">  <span class="attr">device</span>: <span class="function"><span class="params">state</span> =&gt;</span> state.<span class="property">app</span>.<span class="property">device</span>,</span><br><span class="line">  <span class="attr">token</span>: <span class="function"><span class="params">state</span> =&gt;</span> state.<span class="property">user</span>.<span class="property">token</span>,</span><br><span class="line">  <span class="attr">userId</span>: <span class="function"><span class="params">state</span> =&gt;</span> state.<span class="property">user</span>.<span class="property">userInfo</span>.<span class="property">userId</span>,</span><br><span class="line">  <span class="attr">avatar</span>: <span class="function"><span class="params">state</span> =&gt;</span> state.<span class="property">user</span>.<span class="property">userInfo</span>.<span class="property">staffPhoto</span>, <span class="comment">// 头像</span></span><br><span class="line">  <span class="attr">name</span>: <span class="function"><span class="params">state</span> =&gt;</span> state.<span class="property">user</span>.<span class="property">userInfo</span>.<span class="property">username</span>, <span class="comment">// 用户名称</span></span><br><span class="line">  <span class="attr">routes</span>: <span class="function"><span class="params">state</span> =&gt;</span> state.<span class="property">user</span>.<span class="property">routes</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> getters</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>左侧菜单组件读取Vuex中的路由信息-代码位置(<strong>src/layout/components/Sidebar/index.vue</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">components</span>: &#123; <span class="title class_">SidebarItem</span>, <span class="title class_">Logo</span> &#125;,</span><br><span class="line">  <span class="attr">computed</span>: &#123;</span><br><span class="line">    ...<span class="title function_">mapGetters</span>([</span><br><span class="line">      <span class="string">&#x27;sidebar&#x27;</span>, <span class="string">&#x27;routes&#x27;</span></span><br><span class="line">    ]),</span><br><span class="line">    <span class="comment">// 路由信息的计算属性</span></span><br><span class="line">    <span class="comment">// routes() &#123;</span></span><br><span class="line">    <span class="comment">//   // 返回所有的路由信息</span></span><br><span class="line">    <span class="comment">//   return this.$router.options.routes</span></span><br><span class="line">    <span class="comment">// &#125;,</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="13-退出登录重置路由"><a href="#13-退出登录重置路由" class="headerlink" title="13.退出登录重置路由"></a>13.退出登录重置路由</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022029860.png" alt="image.png"></p><ul><li>退出登录时-重置路由-代码位置(<strong>src/store/modules/user.js</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; resetRouter &#125; <span class="keyword">from</span> <span class="string">&#x27;@/router&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 退出登录的action</span></span><br><span class="line">  <span class="title function_">logout</span>(<span class="params">context</span>) &#123;</span><br><span class="line">    context.<span class="title function_">commit</span>(<span class="string">&#x27;removeToken&#x27;</span>) <span class="comment">// 删除token</span></span><br><span class="line">    context.<span class="title function_">commit</span>(<span class="string">&#x27;setUserInfo&#x27;</span>, &#123;&#125;) <span class="comment">// 设置用户信息为空对象</span></span><br><span class="line">    <span class="comment">// 重置路由</span></span><br><span class="line">    <span class="title function_">resetRouter</span>()</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h2 id="14-功能权限—按钮权限标识"><a href="#14-功能权限—按钮权限标识" class="headerlink" title="14.功能权限—按钮权限标识"></a>14.功能权限—按钮权限标识</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022029001.png" alt="image.png"></p><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022029143.png" alt="image.png"></p><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022029356.png" alt="image.png"></p><h2 id="15-自定义指令应用功能权限"><a href="#15-自定义指令应用功能权限" class="headerlink" title="15.自定义指令应用功能权限"></a>15.自定义指令应用功能权限</h2><ul><li>自定义指令- 作用在按钮上-所有的按钮都可以直接使用 </li></ul><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022029618.png" alt="image.png"></p><ul><li>封装自定义指令-代码位置(<strong>src/main.js</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 封装自定义指令 用来控制操作权</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">directive</span>(<span class="string">&#x27;permission&#x27;</span>, &#123;</span><br><span class="line">  <span class="comment">// 会在指令作用的元素插入到页面完成以后触发</span></span><br><span class="line">  <span class="title function_">inserted</span>(<span class="params">el, binding</span>) &#123;</span><br><span class="line">    <span class="comment">// el 指令作用的元素的dom对象</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(el)</span><br><span class="line">    <span class="keyword">const</span> points = store.<span class="property">state</span>.<span class="property">user</span>.<span class="property">userInfo</span>?.<span class="property">roles</span>?.<span class="property">points</span> || [] <span class="comment">// 当前用户信息的操作权</span></span><br><span class="line">    <span class="keyword">if</span> (!points.<span class="title function_">includes</span>(binding.<span class="property">value</span>)) &#123;</span><br><span class="line">      <span class="comment">// 不存在就要删除或者禁用</span></span><br><span class="line">      el.<span class="title function_">remove</span>() <span class="comment">// 删除元素</span></span><br><span class="line">      <span class="comment">// el.disabled = true</span></span><br><span class="line">      <span class="comment">// 线上的权限数据和线下的代码进行对应</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li>应用自定义指令-代码位置(<strong>src/views/employee/index.vue</strong>)</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-button</span> <span class="attr">v-permission</span>=<span class="string">&quot;&#x27;add-employee&#x27;&quot;</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;$router.push(&#x27;/employee/detail&#x27;)&quot;</span>&gt;</span></span><br><span class="line">  添加员工</span><br><span class="line"><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="九、其他模块"><a href="#九、其他模块" class="headerlink" title="九、其他模块"></a>九、其他模块</h1><h2 id="1-集成"><a href="#1-集成" class="headerlink" title="1.集成"></a>1.集成</h2><blockquote><p>素材中，已经给大家提供了 其他模块的请求/路由/组件，只需要拷贝到src即可</p></blockquote><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022030263.png" alt="image.png"></p><h2 id="2-首页—基本结构和数字滚动"><a href="#2-首页—基本结构和数字滚动" class="headerlink" title="2.首页—基本结构和数字滚动"></a>2.首页—基本结构和数字滚动</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022030287.png" alt="image.png"></p><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022030164.png" alt="image.png"> </p><ul><li>基本结构-代码位置(<strong>src/views/dashboard/index.vue</strong>)</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;dashboard&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;container&quot;&gt;</span><br><span class="line">      &lt;!-- 左侧内容 --&gt;</span><br><span class="line">      &lt;div class=&quot;left&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;panel&quot;&gt;</span><br><span class="line">          &lt;!-- 个人信息 --&gt;</span><br><span class="line">          &lt;div class=&quot;user-info&quot;&gt;</span><br><span class="line">            &lt;img class=&quot;avatar&quot; src=&quot;../../assets/common/defaultHead.png&quot; alt=&quot;&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;company-info&quot;&gt;</span><br><span class="line">              &lt;div class=&quot;title&quot;&gt;</span><br><span class="line">                江苏传智播客教育科技股份有限公司</span><br><span class="line">                &lt;span&gt;体验版&lt;/span&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">              &lt;div class=&quot;depart&quot;&gt;庆山 ｜ 传智播客-总裁办&lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">          &lt;!-- 代办 --&gt;</span><br><span class="line">          &lt;div class=&quot;todo-list&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;todo-item&quot;&gt;</span><br><span class="line">              &lt;span&gt;组织总人数&lt;/span&gt;</span><br><span class="line">              &lt;!-- 起始值 终点值  滚动时间 --&gt;</span><br><span class="line">              &lt;span&gt;228&lt;/span&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;todo-item&quot;&gt;</span><br><span class="line">              &lt;span&gt;正式员工&lt;/span&gt;</span><br><span class="line">               &lt;span&gt;334&lt;/span&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;todo-item&quot;&gt;</span><br><span class="line">              &lt;span&gt;合同待签署&lt;/span&gt;</span><br><span class="line">               &lt;span&gt;345&lt;/span&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;todo-item&quot;&gt;</span><br><span class="line">              &lt;span&gt;待入职&lt;/span&gt;</span><br><span class="line">               &lt;span&gt;890&lt;/span&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;todo-item&quot;&gt;</span><br><span class="line">              &lt;span&gt;本月待转正&lt;/span&gt;</span><br><span class="line">               &lt;span&gt;117&lt;/span&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;todo-item&quot;&gt;</span><br><span class="line">              &lt;span&gt;本月待离职&lt;/span&gt;</span><br><span class="line">              &lt;span&gt;234&lt;/span&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;todo-item&quot;&gt;</span><br><span class="line">              &lt;span&gt;接口总访问&lt;/span&gt;</span><br><span class="line">               &lt;span&gt;789&lt;/span&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;!-- 快捷入口 --&gt;</span><br><span class="line">        &lt;div class=&quot;panel&quot;&gt;</span><br><span class="line">          &lt;div class=&quot;panel-title&quot;&gt;快捷入口&lt;/div&gt;</span><br><span class="line">          &lt;div class=&quot;quick-entry&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;entry-item&quot;&gt;</span><br><span class="line">              &lt;div class=&quot;entry-icon approval&quot; /&gt;</span><br><span class="line">              &lt;span&gt;假期审批&lt;/span&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;entry-item&quot;&gt;</span><br><span class="line">              &lt;div class=&quot;entry-icon social&quot; /&gt;</span><br><span class="line">              &lt;span&gt;社保管理&lt;/span&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;entry-item&quot;&gt;</span><br><span class="line">              &lt;div class=&quot;entry-icon role&quot; /&gt;</span><br><span class="line">              &lt;span&gt;角色管理&lt;/span&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;entry-item&quot;&gt;</span><br><span class="line">              &lt;div class=&quot;entry-icon salary&quot; /&gt;</span><br><span class="line">              &lt;span&gt;薪资设置&lt;/span&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;entry-item&quot;&gt;</span><br><span class="line">              &lt;div class=&quot;entry-icon bpm&quot; /&gt;</span><br><span class="line">              &lt;span&gt;流程设置&lt;/span&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;!-- 图表数据 --&gt;</span><br><span class="line">        &lt;div class=&quot;panel&quot;&gt;</span><br><span class="line">          &lt;div class=&quot;panel-title&quot;&gt;社保申报数据&lt;/div&gt;</span><br><span class="line">          &lt;div class=&quot;chart-container&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;chart-info&quot;&gt;</span><br><span class="line">              &lt;div class=&quot;info-main&quot;&gt;</span><br><span class="line">                &lt;span&gt;申报人数&lt;/span&gt;</span><br><span class="line">                &lt;span&gt;223&lt;/span&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">              &lt;div class=&quot;info-list&quot;&gt;</span><br><span class="line">                &lt;div class=&quot;info-list-item&quot;&gt;</span><br><span class="line">                  &lt;span&gt;待申报(人)&lt;/span&gt;</span><br><span class="line">                   &lt;span&gt;117&lt;/span&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div class=&quot;info-list-item&quot;&gt;</span><br><span class="line">                  &lt;span&gt;申报中(人)&lt;/span&gt;</span><br><span class="line">                   &lt;span&gt;167&lt;/span&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div class=&quot;info-list-item&quot;&gt;</span><br><span class="line">                  &lt;span&gt;已申报(人)&lt;/span&gt;</span><br><span class="line">                   &lt;span&gt;24&lt;/span&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;chart&quot;&gt;</span><br><span class="line">              &lt;!-- 图表 --&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;!-- 图表数据 --&gt;</span><br><span class="line">        &lt;div class=&quot;panel&quot;&gt;</span><br><span class="line">          &lt;div class=&quot;panel-title&quot;&gt;公积金申报数据&lt;/div&gt;</span><br><span class="line">          &lt;div class=&quot;chart-container&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;chart-info&quot;&gt;</span><br><span class="line">              &lt;div class=&quot;info-main&quot;&gt;</span><br><span class="line">                &lt;span&gt;申报人数&lt;/span&gt;</span><br><span class="line">                 &lt;span&gt;335&lt;/span&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">              &lt;div class=&quot;info-list&quot;&gt;</span><br><span class="line">                &lt;div class=&quot;info-list-item&quot;&gt;</span><br><span class="line">                  &lt;span&gt;待申报(人)&lt;/span&gt;</span><br><span class="line">                   &lt;span&gt;345&lt;/span&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div class=&quot;info-list-item&quot;&gt;</span><br><span class="line">                  &lt;span&gt;申报中(人)&lt;/span&gt;</span><br><span class="line">                   &lt;span&gt;109&lt;/span&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div class=&quot;info-list-item&quot;&gt;</span><br><span class="line">                  &lt;span&gt;已申报(人)&lt;/span&gt;</span><br><span class="line">                   &lt;span&gt;77&lt;/span&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;chart&quot;&gt;</span><br><span class="line">              &lt;!-- 图表 --&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;!-- 右侧内容 --&gt;</span><br><span class="line">      &lt;div class=&quot;right&quot;&gt;</span><br><span class="line">        &lt;!-- 帮助链接 --&gt;</span><br><span class="line">        &lt;div class=&quot;panel&quot;&gt;</span><br><span class="line">          &lt;div class=&quot;help&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;help-left&quot;&gt;</span><br><span class="line">              &lt;div class=&quot;panel-title&quot;&gt;帮助链接&lt;/div&gt;</span><br><span class="line">              &lt;div class=&quot;help-list&quot;&gt;</span><br><span class="line">                &lt;div class=&quot;help-block&quot;&gt;</span><br><span class="line">                  &lt;i class=&quot;icon-entry&quot; /&gt;</span><br><span class="line">                  入门指南</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div class=&quot;help-block&quot;&gt;</span><br><span class="line">                  &lt;i class=&quot;icon-help&quot; /&gt;</span><br><span class="line">                  在线帮助手册</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div class=&quot;help-block&quot;&gt;</span><br><span class="line">                  &lt;i class=&quot;icon-support&quot; /&gt;</span><br><span class="line">                  联系技术支持</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div class=&quot;help-block&quot;&gt;</span><br><span class="line">                  &lt;i class=&quot;icon-add&quot; /&gt;</span><br><span class="line">                  添加链接</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;help-right&quot;&gt;</span><br><span class="line">              &lt;div class=&quot;calendar&quot;&gt;</span><br><span class="line">                &lt;!-- &lt;el-calendar /&gt; --&gt;</span><br><span class="line">                &lt;el-calendar /&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;!-- 通知公告 --&gt;</span><br><span class="line">        &lt;div class=&quot;panel&quot;&gt;</span><br><span class="line">          &lt;div class=&quot;panel-title&quot;&gt;通知公告&lt;/div&gt;</span><br><span class="line">          &lt;div class=&quot;information-list&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;information-list-item&quot;&gt;</span><br><span class="line">              &lt;img src=&quot;@/assets/common/img.jpeg&quot; alt=&quot;&quot;&gt;</span><br><span class="line">              &lt;div&gt;</span><br><span class="line">                &lt;p&gt;</span><br><span class="line">                  &lt;span class=&quot;col&quot;&gt;朱继柳&lt;/span&gt; 发布了</span><br><span class="line">                  第1期“传智大讲堂”互动讨论获奖名单公布</span><br><span class="line">                &lt;/p&gt;</span><br><span class="line">                &lt;p&gt;2018-07-21 15:21:38&lt;/p&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;information-list-item&quot;&gt;</span><br><span class="line">              &lt;img src=&quot;@/assets/common/img.jpeg&quot; alt=&quot;&quot;&gt;</span><br><span class="line">              &lt;div&gt;</span><br><span class="line">                &lt;p&gt;</span><br><span class="line">                  &lt;span class=&quot;col&quot;&gt;朱继柳&lt;/span&gt; 发布了</span><br><span class="line">                  第1期“传智大讲堂”互动讨论获奖名单公布</span><br><span class="line">                &lt;/p&gt;</span><br><span class="line">                &lt;p&gt;2018-07-21 15:21:38&lt;/p&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;information-list-item&quot;&gt;</span><br><span class="line">              &lt;img src=&quot;@/assets/common/img.jpeg&quot; alt=&quot;&quot;&gt;</span><br><span class="line">              &lt;div&gt;</span><br><span class="line">                &lt;p&gt;</span><br><span class="line">                  &lt;span class=&quot;col&quot;&gt;朱继柳&lt;/span&gt; 发布了</span><br><span class="line">                  第1期“传智大讲堂”互动讨论获奖名单公布</span><br><span class="line">                &lt;/p&gt;</span><br><span class="line">                &lt;p&gt;2018-07-21 15:21:38&lt;/p&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import CountTo from &#x27;vue-count-to&#x27;</span><br><span class="line">export default &#123;</span><br><span class="line">  components: &#123;</span><br><span class="line">    CountTo</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&quot;scss&quot;&gt;</span><br><span class="line">.dashboard &#123;</span><br><span class="line">  background: #f5f6f8;</span><br><span class="line">  width: 100%;</span><br><span class="line">  min-height: calc(100vh - 80px);</span><br><span class="line"></span><br><span class="line">  ::v-deep .el-calendar-day &#123;</span><br><span class="line">  height:  40px;</span><br><span class="line"> &#125;</span><br><span class="line"> ::v-deep .el-calendar-table__row td,::v-deep .el-calendar-table tr td:first-child, ::v-deep .el-calendar-table__row td.prev&#123;</span><br><span class="line">  border:none;</span><br><span class="line"> &#125;</span><br><span class="line">.date-content &#123;</span><br><span class="line">  height: 40px;</span><br><span class="line">  text-align: center;</span><br><span class="line">  line-height: 40px;</span><br><span class="line">  font-size: 14px;</span><br><span class="line">&#125;</span><br><span class="line">.date-content .rest &#123;</span><br><span class="line">  color: #fff;</span><br><span class="line">  border-radius: 50%;</span><br><span class="line">  background: rgb(250, 124, 77);</span><br><span class="line">  width: 20px;</span><br><span class="line">  height: 20px;</span><br><span class="line">  line-height: 20px;</span><br><span class="line">  display: inline-block;</span><br><span class="line">  font-size: 12px;</span><br><span class="line">  margin-left: 10px;</span><br><span class="line">&#125;</span><br><span class="line">.date-content .text&#123;</span><br><span class="line">  width: 20px;</span><br><span class="line">  height: 20px;</span><br><span class="line">  line-height: 20px;</span><br><span class="line"> display: inline-block;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">::v-deep .el-calendar-table td.is-selected .text&#123;</span><br><span class="line">   background: #409eff;</span><br><span class="line">   color: #fff;</span><br><span class="line">   border-radius: 50%;</span><br><span class="line"> &#125;</span><br><span class="line"> ::v-deep .el-calendar__header &#123;</span><br><span class="line">   display: none</span><br><span class="line"> &#125;</span><br><span class="line">  .container &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    .right &#123;</span><br><span class="line">      width: 40%;</span><br><span class="line">      .panel &#123;</span><br><span class="line">        margin-left: 8px;</span><br><span class="line">      &#125;</span><br><span class="line">      :nth-child(1) &#123;</span><br><span class="line">        margin-top: 0;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    .left &#123;</span><br><span class="line">      flex: 1;</span><br><span class="line">      :nth-child(1) &#123;</span><br><span class="line">        margin-top: 0;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    .panel &#123;</span><br><span class="line">      background-color: #fff;</span><br><span class="line"></span><br><span class="line">      margin-top: 8px;</span><br><span class="line">      padding: 20px;</span><br><span class="line">      .panel-title &#123;</span><br><span class="line">        font-size: 16px;</span><br><span class="line">        color: #383c4e;</span><br><span class="line">        font-weight: 500;</span><br><span class="line">      &#125;</span><br><span class="line">      // 用户信息样式</span><br><span class="line">      .user-info &#123;</span><br><span class="line">        display: flex;</span><br><span class="line">        .avatar &#123;</span><br><span class="line">          width: 48px;</span><br><span class="line">          height: 48px;</span><br><span class="line">          border-radius: 12px;</span><br><span class="line">          background-color: #d9d9d9;</span><br><span class="line">          line-height: 48px;</span><br><span class="line">          text-align: center;</span><br><span class="line">        &#125;</span><br><span class="line">         .username &#123;</span><br><span class="line">           width: 30px;</span><br><span class="line">           height: 30px;</span><br><span class="line">           text-align: center;</span><br><span class="line">           line-height: 30px;</span><br><span class="line">           border-radius: 50%;</span><br><span class="line">           background: #04c9be;</span><br><span class="line">           color: #fff;</span><br><span class="line">           margin-right: 4px;</span><br><span class="line">         &#125;</span><br><span class="line">        .company-info &#123;</span><br><span class="line">          margin-left: 10px;</span><br><span class="line">          height: 48px;</span><br><span class="line">          display: flex;</span><br><span class="line">          flex-direction: column;</span><br><span class="line">          justify-content: space-around;</span><br><span class="line">          .title &#123;</span><br><span class="line">            color: #383c4e;</span><br><span class="line">            font-weight: 500;</span><br><span class="line">            font-size: 16px;</span><br><span class="line">            font-family: PingFang SC, PingFang SC-Medium;</span><br><span class="line">            span &#123;</span><br><span class="line">              font-size: 12px;</span><br><span class="line">              background: #f5f6f8;</span><br><span class="line">              text-align: center;</span><br><span class="line">              padding: 2px 8px;</span><br><span class="line">              border-radius: 2px;</span><br><span class="line">              color: #697086;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          .depart &#123;</span><br><span class="line">            font-size: 14px;</span><br><span class="line">            color: #697086;</span><br><span class="line">            font-weight: 400;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      // 代办样式</span><br><span class="line">      .todo-list &#123;</span><br><span class="line">        margin-top: 10px;</span><br><span class="line">        display: flex;</span><br><span class="line">        flex-wrap: wrap;</span><br><span class="line">        .todo-item &#123;</span><br><span class="line">          width: 18%;</span><br><span class="line">          height: 90px;</span><br><span class="line">          display: flex;</span><br><span class="line">          flex-direction: column;</span><br><span class="line">          padding: 10px;</span><br><span class="line">          justify-content: space-around;</span><br><span class="line">          :nth-child(1) &#123;</span><br><span class="line">            color: #697086;</span><br><span class="line">            font-size: 14px;</span><br><span class="line">          &#125;</span><br><span class="line">          :nth-child(2) &#123;</span><br><span class="line">            color: #383c4e;</span><br><span class="line">            font-size: 30px;</span><br><span class="line">            font-weight: 500;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      // 快捷入口</span><br><span class="line">      .quick-entry &#123;</span><br><span class="line">        margin-top: 16px;</span><br><span class="line">        display: flex;</span><br><span class="line">        .entry-item &#123;</span><br><span class="line">          display: flex;</span><br><span class="line">          flex-direction: column;</span><br><span class="line">          align-items: center;</span><br><span class="line">          margin-left: 60px;</span><br><span class="line">          &amp;:nth-child(1) &#123;</span><br><span class="line">            margin-left: 0px;</span><br><span class="line">          &#125;</span><br><span class="line">          .entry-icon &#123;</span><br><span class="line">            width: 40px;</span><br><span class="line">            height: 40px;</span><br><span class="line">            border-radius: 10px;</span><br><span class="line">            background: #f5f6f8;</span><br><span class="line">            background-size: cover;</span><br><span class="line">            &amp;.approval &#123;</span><br><span class="line">              background-image: url(&#x27;~@/assets/common/approval.png&#x27;);</span><br><span class="line">            &#125;</span><br><span class="line">             &amp;.social &#123;</span><br><span class="line">              background-image: url(&#x27;~@/assets/common/social.png&#x27;);</span><br><span class="line">            &#125;</span><br><span class="line">             &amp;.salary &#123;</span><br><span class="line">              background-image: url(&#x27;~@/assets/common/salary.png&#x27;);</span><br><span class="line">            &#125;</span><br><span class="line">            &amp;.role &#123;</span><br><span class="line">              background-image: url(&#x27;~@/assets/common/role.png&#x27;);</span><br><span class="line">            &#125;</span><br><span class="line">             &amp;.bpm &#123;</span><br><span class="line">              background-image: url(&#x27;~@/assets/common/bpm.png&#x27;);</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          span &#123;</span><br><span class="line">            color: #697086;</span><br><span class="line">            font-size: 14px;</span><br><span class="line">            margin-top: 8px;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      // 图表数据</span><br><span class="line">      .chart-container &#123;</span><br><span class="line">        display: flex;</span><br><span class="line">        .chart-info &#123;</span><br><span class="line">         width: 240px;</span><br><span class="line">          margin-top: 10px;</span><br><span class="line">          .info-main &#123;</span><br><span class="line">            padding: 10px;</span><br><span class="line">            display: flex;</span><br><span class="line">            flex-direction: column;</span><br><span class="line">            :nth-child(1) &#123;</span><br><span class="line">              font-size: 14px;</span><br><span class="line">              color: #697086;</span><br><span class="line">            &#125;</span><br><span class="line">            :nth-child(2) &#123;</span><br><span class="line">              margin-top: 10px;</span><br><span class="line">              font-size: 30px;</span><br><span class="line">              color: #04c9be;</span><br><span class="line">              font-weight: 500;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          .info-list &#123;</span><br><span class="line">            background: #f5f6f8;</span><br><span class="line">            border-radius: 4px;</span><br><span class="line">            padding: 12px 15px;</span><br><span class="line">            display: flex;</span><br><span class="line">            flex-wrap: wrap;</span><br><span class="line">            align-items: center;</span><br><span class="line">            .info-list-item &#123;</span><br><span class="line">              width: 50%;</span><br><span class="line">              margin-top: 10px;</span><br><span class="line">              display: flex;</span><br><span class="line">              flex-direction: column;</span><br><span class="line"></span><br><span class="line">              :nth-child(1) &#123;</span><br><span class="line">                font-size: 14px;</span><br><span class="line">                color: #697086;</span><br><span class="line">              &#125;</span><br><span class="line">              :nth-child(2) &#123;</span><br><span class="line">                margin-top: 10px;</span><br><span class="line">                font-size: 30px;</span><br><span class="line">                color: #383c4e;</span><br><span class="line">                font-weight: 500;</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        .chart &#123;</span><br><span class="line">          flex:1</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      // 帮助链接</span><br><span class="line">      .help &#123;</span><br><span class="line">        display: flex;</span><br><span class="line">        .help-left &#123;</span><br><span class="line">          width: 40%;</span><br><span class="line">        &#125;</span><br><span class="line">        .help-right &#123;</span><br><span class="line">          flex: 1;</span><br><span class="line">        &#125;</span><br><span class="line">        .help-list &#123;</span><br><span class="line">          .help-block &#123;</span><br><span class="line">            background: #f5f6f8;</span><br><span class="line">            border-radius: 4px;</span><br><span class="line">            width: 264px;</span><br><span class="line">            height: 54px;</span><br><span class="line">            padding: 17px 10px;</span><br><span class="line">            font-size: 14px;</span><br><span class="line">            color: #697086;</span><br><span class="line">            margin-top: 10px;</span><br><span class="line">            i &#123;</span><br><span class="line">              width: 14px;</span><br><span class="line">              height: 14px;</span><br><span class="line">              display: inline-block;</span><br><span class="line">              background-size: cover;</span><br><span class="line">              vertical-align: middle;</span><br><span class="line">            &#125;</span><br><span class="line">            i.icon-help &#123;</span><br><span class="line">              background-image: url(&quot;~@/assets/common/help.png&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">             i.icon-support &#123;</span><br><span class="line">              background-image: url(&quot;~@/assets/common/support.png&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">             i.icon-add &#123;</span><br><span class="line">              background-image: url(&quot;~@/assets/common/add.png&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">             i.icon-entry &#123;</span><br><span class="line">              background-image: url(&quot;~@/assets/common/entry.png&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      // 通知公告</span><br><span class="line">      .information-list &#123;</span><br><span class="line">        margin-top: 20px;</span><br><span class="line">        .information-list-item &#123;</span><br><span class="line">          display: flex;</span><br><span class="line">          align-items: center;</span><br><span class="line">          margin:15px 0;</span><br><span class="line">          img &#123;</span><br><span class="line">            width: 40px;</span><br><span class="line">            height: 40px;</span><br><span class="line">            border: 50%;</span><br><span class="line">          &#125;</span><br><span class="line">         .col &#123;</span><br><span class="line">           color: #8a97f8;</span><br><span class="line">         &#125;</span><br><span class="line">         div :nth-child(2) &#123;</span><br><span class="line">          color: #697086;</span><br><span class="line">          font-size: 14px;</span><br><span class="line">         &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>安装数字滚动插件-vue-count-to</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm i vue-count-to</span><br></pre></td></tr></table></figure><ul><li>首页基本结构-代码位置(<strong>src/views/dashboard/index.vue</strong>)</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;dashboard&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;container&quot;&gt;</span><br><span class="line">      &lt;!-- 左侧内容 --&gt;</span><br><span class="line">      &lt;div class=&quot;left&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;panel&quot;&gt;</span><br><span class="line">          &lt;!-- 个人信息 --&gt;</span><br><span class="line">          &lt;div class=&quot;user-info&quot;&gt;</span><br><span class="line">            &lt;img class=&quot;avatar&quot; src=&quot;../../assets/common/defaultHead.png&quot; alt=&quot;&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;company-info&quot;&gt;</span><br><span class="line">              &lt;div class=&quot;title&quot;&gt;</span><br><span class="line">                江苏传智播客教育科技股份有限公司</span><br><span class="line">                &lt;span&gt;体验版&lt;/span&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">              &lt;div class=&quot;depart&quot;&gt;庆山 ｜ 传智播客-总裁办&lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">          &lt;!-- 代办 --&gt;</span><br><span class="line">          &lt;div class=&quot;todo-list&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;todo-item&quot;&gt;</span><br><span class="line">              &lt;span&gt;组织总人数&lt;/span&gt;</span><br><span class="line">              &lt;!-- 起始值 终点值  滚动时间 --&gt;</span><br><span class="line">              &lt;count-to</span><br><span class="line">                :start-val=&quot;0&quot;</span><br><span class="line">                :end-val=&quot;228&quot;</span><br><span class="line">                :duration=&quot;1000&quot;</span><br><span class="line">              /&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;todo-item&quot;&gt;</span><br><span class="line">              &lt;span&gt;正式员工&lt;/span&gt;</span><br><span class="line">              &lt;count-to</span><br><span class="line">                :start-val=&quot;0&quot;</span><br><span class="line">                :end-val=&quot;334&quot;</span><br><span class="line">                :duration=&quot;1000&quot;</span><br><span class="line">              /&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;todo-item&quot;&gt;</span><br><span class="line">              &lt;span&gt;合同待签署&lt;/span&gt;</span><br><span class="line">              &lt;count-to</span><br><span class="line">                :start-val=&quot;0&quot;</span><br><span class="line">                :end-val=&quot;345&quot;</span><br><span class="line">                :duration=&quot;1000&quot;</span><br><span class="line">              /&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;todo-item&quot;&gt;</span><br><span class="line">              &lt;span&gt;待入职&lt;/span&gt;</span><br><span class="line">              &lt;count-to</span><br><span class="line">                :start-val=&quot;0&quot;</span><br><span class="line">                :end-val=&quot;890&quot;</span><br><span class="line">                :duration=&quot;1000&quot;</span><br><span class="line">              /&gt;            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;todo-item&quot;&gt;</span><br><span class="line">              &lt;span&gt;本月待转正&lt;/span&gt;</span><br><span class="line">              &lt;count-to</span><br><span class="line">                :start-val=&quot;0&quot;</span><br><span class="line">                :end-val=&quot;117&quot;</span><br><span class="line">                :duration=&quot;1000&quot;</span><br><span class="line">              /&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;todo-item&quot;&gt;</span><br><span class="line">              &lt;span&gt;本月待离职&lt;/span&gt;</span><br><span class="line">              &lt;count-to</span><br><span class="line">                :start-val=&quot;0&quot;</span><br><span class="line">                :end-val=&quot;234&quot;</span><br><span class="line">                :duration=&quot;1000&quot;</span><br><span class="line">              /&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;todo-item&quot;&gt;</span><br><span class="line">              &lt;span&gt;接口总访问&lt;/span&gt;</span><br><span class="line">              &lt;count-to</span><br><span class="line">                :start-val=&quot;0&quot;</span><br><span class="line">                :end-val=&quot;789&quot;</span><br><span class="line">                :duration=&quot;1000&quot;</span><br><span class="line">              /&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;!-- 快捷入口 --&gt;</span><br><span class="line">        &lt;div class=&quot;panel&quot;&gt;</span><br><span class="line">          &lt;div class=&quot;panel-title&quot;&gt;快捷入口&lt;/div&gt;</span><br><span class="line">          &lt;div class=&quot;quick-entry&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;entry-item&quot;&gt;</span><br><span class="line">              &lt;div class=&quot;entry-icon approval&quot; /&gt;</span><br><span class="line">              &lt;span&gt;假期审批&lt;/span&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;entry-item&quot;&gt;</span><br><span class="line">              &lt;div class=&quot;entry-icon social&quot; /&gt;</span><br><span class="line">              &lt;span&gt;社保管理&lt;/span&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;entry-item&quot;&gt;</span><br><span class="line">              &lt;div class=&quot;entry-icon role&quot; /&gt;</span><br><span class="line">              &lt;span&gt;角色管理&lt;/span&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;entry-item&quot;&gt;</span><br><span class="line">              &lt;div class=&quot;entry-icon salary&quot; /&gt;</span><br><span class="line">              &lt;span&gt;薪资设置&lt;/span&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;entry-item&quot;&gt;</span><br><span class="line">              &lt;div class=&quot;entry-icon bpm&quot; /&gt;</span><br><span class="line">              &lt;span&gt;流程设置&lt;/span&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;!-- 图表数据 --&gt;</span><br><span class="line">        &lt;div class=&quot;panel&quot;&gt;</span><br><span class="line">          &lt;div class=&quot;panel-title&quot;&gt;社保申报数据&lt;/div&gt;</span><br><span class="line">          &lt;div class=&quot;chart-container&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;chart-info&quot;&gt;</span><br><span class="line">              &lt;div class=&quot;info-main&quot;&gt;</span><br><span class="line">                &lt;span&gt;申报人数&lt;/span&gt;</span><br><span class="line">                &lt;count-to</span><br><span class="line">                  :start-val=&quot;0&quot;</span><br><span class="line">                  :end-val=&quot;223&quot;</span><br><span class="line">                  :duration=&quot;1000&quot;</span><br><span class="line">                /&gt;</span><br><span class="line"></span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">              &lt;div class=&quot;info-list&quot;&gt;</span><br><span class="line">                &lt;div class=&quot;info-list-item&quot;&gt;</span><br><span class="line">                  &lt;span&gt;待申报(人)&lt;/span&gt;</span><br><span class="line">                  &lt;count-to</span><br><span class="line">                    :start-val=&quot;0&quot;</span><br><span class="line">                    :end-val=&quot;117&quot;</span><br><span class="line">                    :duration=&quot;1000&quot;</span><br><span class="line">                  /&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div class=&quot;info-list-item&quot;&gt;</span><br><span class="line">                  &lt;span&gt;申报中(人)&lt;/span&gt;</span><br><span class="line">                  &lt;count-to</span><br><span class="line">                    :start-val=&quot;0&quot;</span><br><span class="line">                    :end-val=&quot;167&quot;</span><br><span class="line">                    :duration=&quot;1000&quot;</span><br><span class="line">                  /&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div class=&quot;info-list-item&quot;&gt;</span><br><span class="line">                  &lt;span&gt;已申报(人)&lt;/span&gt;</span><br><span class="line">                  &lt;count-to</span><br><span class="line">                    :start-val=&quot;0&quot;</span><br><span class="line">                    :end-val=&quot;24&quot;</span><br><span class="line">                    :duration=&quot;1000&quot;</span><br><span class="line">                  /&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;chart&quot;&gt;</span><br><span class="line">              &lt;!-- 图表 --&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;!-- 图表数据 --&gt;</span><br><span class="line">        &lt;div class=&quot;panel&quot;&gt;</span><br><span class="line">          &lt;div class=&quot;panel-title&quot;&gt;公积金申报数据&lt;/div&gt;</span><br><span class="line">          &lt;div class=&quot;chart-container&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;chart-info&quot;&gt;</span><br><span class="line">              &lt;div class=&quot;info-main&quot;&gt;</span><br><span class="line">                &lt;span&gt;申报人数&lt;/span&gt;</span><br><span class="line">                &lt;count-to</span><br><span class="line">                  :start-val=&quot;0&quot;</span><br><span class="line">                  :end-val=&quot;335&quot;</span><br><span class="line">                  :duration=&quot;1000&quot;</span><br><span class="line">                /&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">              &lt;div class=&quot;info-list&quot;&gt;</span><br><span class="line">                &lt;div class=&quot;info-list-item&quot;&gt;</span><br><span class="line">                  &lt;span&gt;待申报(人)&lt;/span&gt;</span><br><span class="line">                  &lt;count-to</span><br><span class="line">                    :start-val=&quot;0&quot;</span><br><span class="line">                    :end-val=&quot;345&quot;</span><br><span class="line">                    :duration=&quot;1000&quot;</span><br><span class="line">                  /&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div class=&quot;info-list-item&quot;&gt;</span><br><span class="line">                  &lt;span&gt;申报中(人)&lt;/span&gt;</span><br><span class="line">                  &lt;count-to</span><br><span class="line">                    :start-val=&quot;0&quot;</span><br><span class="line">                    :end-val=&quot;109&quot;</span><br><span class="line">                    :duration=&quot;1000&quot;</span><br><span class="line">                  /&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div class=&quot;info-list-item&quot;&gt;</span><br><span class="line">                  &lt;span&gt;已申报(人)&lt;/span&gt;</span><br><span class="line">                  &lt;count-to</span><br><span class="line">                    :start-val=&quot;0&quot;</span><br><span class="line">                    :end-val=&quot;77&quot;</span><br><span class="line">                    :duration=&quot;1000&quot;</span><br><span class="line">                  /&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;chart&quot;&gt;</span><br><span class="line">              &lt;!-- 图表 --&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;!-- 右侧内容 --&gt;</span><br><span class="line">      &lt;div class=&quot;right&quot;&gt;</span><br><span class="line">        &lt;!-- 帮助链接 --&gt;</span><br><span class="line">        &lt;div class=&quot;panel&quot;&gt;</span><br><span class="line">          &lt;div class=&quot;help&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;help-left&quot;&gt;</span><br><span class="line">              &lt;div class=&quot;panel-title&quot;&gt;帮助链接&lt;/div&gt;</span><br><span class="line">              &lt;div class=&quot;help-list&quot;&gt;</span><br><span class="line">                &lt;div class=&quot;help-block&quot;&gt;</span><br><span class="line">                  &lt;i class=&quot;icon-entry&quot; /&gt;</span><br><span class="line">                  入门指南</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div class=&quot;help-block&quot;&gt;</span><br><span class="line">                  &lt;i class=&quot;icon-help&quot; /&gt;</span><br><span class="line">                  在线帮助手册</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div class=&quot;help-block&quot;&gt;</span><br><span class="line">                  &lt;i class=&quot;icon-support&quot; /&gt;</span><br><span class="line">                  联系技术支持</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div class=&quot;help-block&quot;&gt;</span><br><span class="line">                  &lt;i class=&quot;icon-add&quot; /&gt;</span><br><span class="line">                  添加链接</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;help-right&quot;&gt;</span><br><span class="line">              &lt;div class=&quot;calendar&quot;&gt;</span><br><span class="line">                &lt;!-- &lt;el-calendar /&gt; --&gt;</span><br><span class="line">                &lt;el-calendar /&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;!-- 通知公告 --&gt;</span><br><span class="line">        &lt;div class=&quot;panel&quot;&gt;</span><br><span class="line">          &lt;div class=&quot;panel-title&quot;&gt;通知公告&lt;/div&gt;</span><br><span class="line">          &lt;div class=&quot;information-list&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;information-list-item&quot;&gt;</span><br><span class="line">              &lt;img src=&quot;@/assets/common/img.jpeg&quot; alt=&quot;&quot;&gt;</span><br><span class="line">              &lt;div&gt;</span><br><span class="line">                &lt;p&gt;</span><br><span class="line">                  &lt;span class=&quot;col&quot;&gt;朱继柳&lt;/span&gt; 发布了</span><br><span class="line">                  第1期“传智大讲堂”互动讨论获奖名单公布</span><br><span class="line">                &lt;/p&gt;</span><br><span class="line">                &lt;p&gt;2018-07-21 15:21:38&lt;/p&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;information-list-item&quot;&gt;</span><br><span class="line">              &lt;img src=&quot;@/assets/common/img.jpeg&quot; alt=&quot;&quot;&gt;</span><br><span class="line">              &lt;div&gt;</span><br><span class="line">                &lt;p&gt;</span><br><span class="line">                  &lt;span class=&quot;col&quot;&gt;朱继柳&lt;/span&gt; 发布了</span><br><span class="line">                  第1期“传智大讲堂”互动讨论获奖名单公布</span><br><span class="line">                &lt;/p&gt;</span><br><span class="line">                &lt;p&gt;2018-07-21 15:21:38&lt;/p&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;information-list-item&quot;&gt;</span><br><span class="line">              &lt;img src=&quot;@/assets/common/img.jpeg&quot; alt=&quot;&quot;&gt;</span><br><span class="line">              &lt;div&gt;</span><br><span class="line">                &lt;p&gt;</span><br><span class="line">                  &lt;span class=&quot;col&quot;&gt;朱继柳&lt;/span&gt; 发布了</span><br><span class="line">                  第1期“传智大讲堂”互动讨论获奖名单公布</span><br><span class="line">                &lt;/p&gt;</span><br><span class="line">                &lt;p&gt;2018-07-21 15:21:38&lt;/p&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import CountTo from &#x27;vue-count-to&#x27;</span><br><span class="line">export default &#123;</span><br><span class="line">  components: &#123;</span><br><span class="line">    CountTo</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&quot;scss&quot;&gt;</span><br><span class="line">.dashboard &#123;</span><br><span class="line">  background: #f5f6f8;</span><br><span class="line">  width: 100%;</span><br><span class="line">  min-height: calc(100vh - 80px);</span><br><span class="line"></span><br><span class="line">  ::v-deep .el-calendar-day &#123;</span><br><span class="line">  height:  40px;</span><br><span class="line"> &#125;</span><br><span class="line"> ::v-deep .el-calendar-table__row td,::v-deep .el-calendar-table tr td:first-child, ::v-deep .el-calendar-table__row td.prev&#123;</span><br><span class="line">  border:none;</span><br><span class="line"> &#125;</span><br><span class="line">.date-content &#123;</span><br><span class="line">  height: 40px;</span><br><span class="line">  text-align: center;</span><br><span class="line">  line-height: 40px;</span><br><span class="line">  font-size: 14px;</span><br><span class="line">&#125;</span><br><span class="line">.date-content .rest &#123;</span><br><span class="line">  color: #fff;</span><br><span class="line">  border-radius: 50%;</span><br><span class="line">  background: rgb(250, 124, 77);</span><br><span class="line">  width: 20px;</span><br><span class="line">  height: 20px;</span><br><span class="line">  line-height: 20px;</span><br><span class="line">  display: inline-block;</span><br><span class="line">  font-size: 12px;</span><br><span class="line">  margin-left: 10px;</span><br><span class="line">&#125;</span><br><span class="line">.date-content .text&#123;</span><br><span class="line">  width: 20px;</span><br><span class="line">  height: 20px;</span><br><span class="line">  line-height: 20px;</span><br><span class="line"> display: inline-block;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">::v-deep .el-calendar-table td.is-selected .text&#123;</span><br><span class="line">   background: #409eff;</span><br><span class="line">   color: #fff;</span><br><span class="line">   border-radius: 50%;</span><br><span class="line"> &#125;</span><br><span class="line"> ::v-deep .el-calendar__header &#123;</span><br><span class="line">   display: none</span><br><span class="line"> &#125;</span><br><span class="line">  .container &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    .right &#123;</span><br><span class="line">      width: 40%;</span><br><span class="line">      .panel &#123;</span><br><span class="line">        margin-left: 8px;</span><br><span class="line">      &#125;</span><br><span class="line">      :nth-child(1) &#123;</span><br><span class="line">        margin-top: 0;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    .left &#123;</span><br><span class="line">      flex: 1;</span><br><span class="line">      :nth-child(1) &#123;</span><br><span class="line">        margin-top: 0;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    .panel &#123;</span><br><span class="line">      background-color: #fff;</span><br><span class="line"></span><br><span class="line">      margin-top: 8px;</span><br><span class="line">      padding: 20px;</span><br><span class="line">      .panel-title &#123;</span><br><span class="line">        font-size: 16px;</span><br><span class="line">        color: #383c4e;</span><br><span class="line">        font-weight: 500;</span><br><span class="line">      &#125;</span><br><span class="line">      // 用户信息样式</span><br><span class="line">      .user-info &#123;</span><br><span class="line">        display: flex;</span><br><span class="line">        .avatar &#123;</span><br><span class="line">          width: 48px;</span><br><span class="line">          height: 48px;</span><br><span class="line">          border-radius: 12px;</span><br><span class="line">          background-color: #d9d9d9;</span><br><span class="line">          line-height: 48px;</span><br><span class="line">          text-align: center;</span><br><span class="line">        &#125;</span><br><span class="line">         .username &#123;</span><br><span class="line">           width: 30px;</span><br><span class="line">           height: 30px;</span><br><span class="line">           text-align: center;</span><br><span class="line">           line-height: 30px;</span><br><span class="line">           border-radius: 50%;</span><br><span class="line">           background: #04c9be;</span><br><span class="line">           color: #fff;</span><br><span class="line">           margin-right: 4px;</span><br><span class="line">         &#125;</span><br><span class="line">        .company-info &#123;</span><br><span class="line">          margin-left: 10px;</span><br><span class="line">          height: 48px;</span><br><span class="line">          display: flex;</span><br><span class="line">          flex-direction: column;</span><br><span class="line">          justify-content: space-around;</span><br><span class="line">          .title &#123;</span><br><span class="line">            color: #383c4e;</span><br><span class="line">            font-weight: 500;</span><br><span class="line">            font-size: 16px;</span><br><span class="line">            font-family: PingFang SC, PingFang SC-Medium;</span><br><span class="line">            span &#123;</span><br><span class="line">              font-size: 12px;</span><br><span class="line">              background: #f5f6f8;</span><br><span class="line">              text-align: center;</span><br><span class="line">              padding: 2px 8px;</span><br><span class="line">              border-radius: 2px;</span><br><span class="line">              color: #697086;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          .depart &#123;</span><br><span class="line">            font-size: 14px;</span><br><span class="line">            color: #697086;</span><br><span class="line">            font-weight: 400;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      // 代办样式</span><br><span class="line">      .todo-list &#123;</span><br><span class="line">        margin-top: 10px;</span><br><span class="line">        display: flex;</span><br><span class="line">        flex-wrap: wrap;</span><br><span class="line">        .todo-item &#123;</span><br><span class="line">          width: 18%;</span><br><span class="line">          height: 90px;</span><br><span class="line">          display: flex;</span><br><span class="line">          flex-direction: column;</span><br><span class="line">          padding: 10px;</span><br><span class="line">          justify-content: space-around;</span><br><span class="line">          :nth-child(1) &#123;</span><br><span class="line">            color: #697086;</span><br><span class="line">            font-size: 14px;</span><br><span class="line">          &#125;</span><br><span class="line">          :nth-child(2) &#123;</span><br><span class="line">            color: #383c4e;</span><br><span class="line">            font-size: 30px;</span><br><span class="line">            font-weight: 500;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      // 快捷入口</span><br><span class="line">      .quick-entry &#123;</span><br><span class="line">        margin-top: 16px;</span><br><span class="line">        display: flex;</span><br><span class="line">        .entry-item &#123;</span><br><span class="line">          display: flex;</span><br><span class="line">          flex-direction: column;</span><br><span class="line">          align-items: center;</span><br><span class="line">          margin-left: 60px;</span><br><span class="line">          &amp;:nth-child(1) &#123;</span><br><span class="line">            margin-left: 0px;</span><br><span class="line">          &#125;</span><br><span class="line">          .entry-icon &#123;</span><br><span class="line">            width: 40px;</span><br><span class="line">            height: 40px;</span><br><span class="line">            border-radius: 10px;</span><br><span class="line">            background: #f5f6f8;</span><br><span class="line">            background-size: cover;</span><br><span class="line">            &amp;.approval &#123;</span><br><span class="line">              background-image: url(&#x27;~@/assets/common/approval.png&#x27;);</span><br><span class="line">            &#125;</span><br><span class="line">             &amp;.social &#123;</span><br><span class="line">              background-image: url(&#x27;~@/assets/common/social.png&#x27;);</span><br><span class="line">            &#125;</span><br><span class="line">             &amp;.salary &#123;</span><br><span class="line">              background-image: url(&#x27;~@/assets/common/salary.png&#x27;);</span><br><span class="line">            &#125;</span><br><span class="line">            &amp;.role &#123;</span><br><span class="line">              background-image: url(&#x27;~@/assets/common/role.png&#x27;);</span><br><span class="line">            &#125;</span><br><span class="line">             &amp;.bpm &#123;</span><br><span class="line">              background-image: url(&#x27;~@/assets/common/bpm.png&#x27;);</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          span &#123;</span><br><span class="line">            color: #697086;</span><br><span class="line">            font-size: 14px;</span><br><span class="line">            margin-top: 8px;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      // 图表数据</span><br><span class="line">      .chart-container &#123;</span><br><span class="line">        display: flex;</span><br><span class="line">        .chart-info &#123;</span><br><span class="line">         width: 240px;</span><br><span class="line">          margin-top: 10px;</span><br><span class="line">          .info-main &#123;</span><br><span class="line">            padding: 10px;</span><br><span class="line">            display: flex;</span><br><span class="line">            flex-direction: column;</span><br><span class="line">            :nth-child(1) &#123;</span><br><span class="line">              font-size: 14px;</span><br><span class="line">              color: #697086;</span><br><span class="line">            &#125;</span><br><span class="line">            :nth-child(2) &#123;</span><br><span class="line">              margin-top: 10px;</span><br><span class="line">              font-size: 30px;</span><br><span class="line">              color: #04c9be;</span><br><span class="line">              font-weight: 500;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          .info-list &#123;</span><br><span class="line">            background: #f5f6f8;</span><br><span class="line">            border-radius: 4px;</span><br><span class="line">            padding: 12px 15px;</span><br><span class="line">            display: flex;</span><br><span class="line">            flex-wrap: wrap;</span><br><span class="line">            align-items: center;</span><br><span class="line">            .info-list-item &#123;</span><br><span class="line">              width: 50%;</span><br><span class="line">              margin-top: 10px;</span><br><span class="line">              display: flex;</span><br><span class="line">              flex-direction: column;</span><br><span class="line"></span><br><span class="line">              :nth-child(1) &#123;</span><br><span class="line">                font-size: 14px;</span><br><span class="line">                color: #697086;</span><br><span class="line">              &#125;</span><br><span class="line">              :nth-child(2) &#123;</span><br><span class="line">                margin-top: 10px;</span><br><span class="line">                font-size: 30px;</span><br><span class="line">                color: #383c4e;</span><br><span class="line">                font-weight: 500;</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        .chart &#123;</span><br><span class="line">          flex:1</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      // 帮助链接</span><br><span class="line">      .help &#123;</span><br><span class="line">        display: flex;</span><br><span class="line">        .help-left &#123;</span><br><span class="line">          width: 40%;</span><br><span class="line">        &#125;</span><br><span class="line">        .help-right &#123;</span><br><span class="line">          flex: 1;</span><br><span class="line">        &#125;</span><br><span class="line">        .help-list &#123;</span><br><span class="line">          .help-block &#123;</span><br><span class="line">            background: #f5f6f8;</span><br><span class="line">            border-radius: 4px;</span><br><span class="line">            width: 264px;</span><br><span class="line">            height: 54px;</span><br><span class="line">            padding: 17px 10px;</span><br><span class="line">            font-size: 14px;</span><br><span class="line">            color: #697086;</span><br><span class="line">            margin-top: 10px;</span><br><span class="line">            i &#123;</span><br><span class="line">              width: 14px;</span><br><span class="line">              height: 14px;</span><br><span class="line">              display: inline-block;</span><br><span class="line">              background-size: cover;</span><br><span class="line">              vertical-align: middle;</span><br><span class="line">            &#125;</span><br><span class="line">            i.icon-help &#123;</span><br><span class="line">              background-image: url(&quot;~@/assets/common/help.png&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">             i.icon-support &#123;</span><br><span class="line">              background-image: url(&quot;~@/assets/common/support.png&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">             i.icon-add &#123;</span><br><span class="line">              background-image: url(&quot;~@/assets/common/add.png&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">             i.icon-entry &#123;</span><br><span class="line">              background-image: url(&quot;~@/assets/common/entry.png&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      // 通知公告</span><br><span class="line">      .information-list &#123;</span><br><span class="line">        margin-top: 20px;</span><br><span class="line">        .information-list-item &#123;</span><br><span class="line">          display: flex;</span><br><span class="line">          align-items: center;</span><br><span class="line">          margin:15px 0;</span><br><span class="line">          img &#123;</span><br><span class="line">            width: 40px;</span><br><span class="line">            height: 40px;</span><br><span class="line">            border: 50%;</span><br><span class="line">          &#125;</span><br><span class="line">         .col &#123;</span><br><span class="line">           color: #8a97f8;</span><br><span class="line">         &#125;</span><br><span class="line">         div :nth-child(2) &#123;</span><br><span class="line">          color: #697086;</span><br><span class="line">          font-size: 14px;</span><br><span class="line">         &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="3-首页—个人信息展示"><a href="#3-首页—个人信息展示" class="headerlink" title="3.首页—个人信息展示"></a>3.首页—个人信息展示</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022030345.png" alt="image.png"></p><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022031149.png" alt="image.png"></p><ul><li>在getters中开放公司名称和所在部门属性-代码位置(<strong>src/store/getters.js</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> getters = &#123;</span><br><span class="line">  <span class="attr">sidebar</span>: <span class="function"><span class="params">state</span> =&gt;</span> state.<span class="property">app</span>.<span class="property">sidebar</span>,</span><br><span class="line">  <span class="attr">device</span>: <span class="function"><span class="params">state</span> =&gt;</span> state.<span class="property">app</span>.<span class="property">device</span>,</span><br><span class="line">  <span class="attr">token</span>: <span class="function"><span class="params">state</span> =&gt;</span> state.<span class="property">user</span>.<span class="property">token</span>,</span><br><span class="line">  <span class="attr">userId</span>: <span class="function"><span class="params">state</span> =&gt;</span> state.<span class="property">user</span>.<span class="property">userInfo</span>.<span class="property">userId</span>,</span><br><span class="line">  <span class="attr">avatar</span>: <span class="function"><span class="params">state</span> =&gt;</span> state.<span class="property">user</span>.<span class="property">userInfo</span>.<span class="property">staffPhoto</span>, <span class="comment">// 头像</span></span><br><span class="line">  <span class="attr">name</span>: <span class="function"><span class="params">state</span> =&gt;</span> state.<span class="property">user</span>.<span class="property">userInfo</span>.<span class="property">username</span>, <span class="comment">// 用户名称</span></span><br><span class="line">  <span class="attr">routes</span>: <span class="function"><span class="params">state</span> =&gt;</span> state.<span class="property">user</span>.<span class="property">routes</span>,</span><br><span class="line">  <span class="attr">company</span>: <span class="function"><span class="params">state</span> =&gt;</span> state.<span class="property">user</span>.<span class="property">userInfo</span>.<span class="property">company</span>, <span class="comment">// 公司名称</span></span><br><span class="line">  <span class="attr">departmentName</span>: <span class="function"><span class="params">state</span> =&gt;</span> state.<span class="property">user</span>.<span class="property">userInfo</span>.<span class="property">departmentName</span> <span class="comment">// 部门名称</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> getters</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>在首页将个人信息的数据替换成Vuex中的数据-代码位置(<strong>src/views/dashboard/index.vue</strong>)</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;dashboard&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;container&quot;&gt;</span><br><span class="line">      &lt;!-- 左侧内容 --&gt;</span><br><span class="line">      &lt;div class=&quot;left&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;panel&quot;&gt;</span><br><span class="line">          &lt;!-- 个人信息 --&gt;</span><br><span class="line">          &lt;div class=&quot;user-info&quot;&gt;</span><br><span class="line">            &lt;img v-if=&quot;avatar&quot; class=&quot;avatar&quot; :src=&quot;avatar&quot; alt=&quot;&quot;&gt;</span><br><span class="line">            &lt;span v-else class=&quot;username&quot;&gt;&#123;&#123; name?.charAt(0) &#125;&#125;&lt;/span&gt;</span><br><span class="line">            &lt;div class=&quot;company-info&quot;&gt;</span><br><span class="line">              &lt;div class=&quot;title&quot;&gt;</span><br><span class="line">                江苏传智播客教育科技股份有限公司</span><br><span class="line">                &lt;span&gt;体验版&lt;/span&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">              &lt;div class=&quot;depart&quot;&gt;&#123;&#123; name &#125;&#125; ｜ &#123;&#123; company &#125;&#125;-&#123;&#123; departmentName &#125;&#125;&lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">          &lt;!-- 代办 --&gt;</span><br><span class="line">          &lt;div class=&quot;todo-list&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;todo-item&quot;&gt;</span><br><span class="line">              &lt;span&gt;组织总人数&lt;/span&gt;</span><br><span class="line">              &lt;!-- 起始值 终点值 动画时间 --&gt;</span><br><span class="line">              &lt;count-to</span><br><span class="line">                :start-val=&quot;0&quot;</span><br><span class="line">                :end-val=&quot;228&quot;</span><br><span class="line">                :duration=&quot;1000&quot;</span><br><span class="line">              /&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;todo-item&quot;&gt;</span><br><span class="line">              &lt;span&gt;正式员工&lt;/span&gt;</span><br><span class="line">              &lt;count-to</span><br><span class="line">                :start-val=&quot;0&quot;</span><br><span class="line">                :end-val=&quot;334&quot;</span><br><span class="line">                :duration=&quot;1000&quot;</span><br><span class="line">              /&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;todo-item&quot;&gt;</span><br><span class="line">              &lt;span&gt;合同待签署&lt;/span&gt;</span><br><span class="line">              &lt;count-to</span><br><span class="line">                :start-val=&quot;0&quot;</span><br><span class="line">                :end-val=&quot;345&quot;</span><br><span class="line">                :duration=&quot;1000&quot;</span><br><span class="line">              /&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;todo-item&quot;&gt;</span><br><span class="line">              &lt;span&gt;待入职&lt;/span&gt;</span><br><span class="line">              &lt;count-to</span><br><span class="line">                :start-val=&quot;0&quot;</span><br><span class="line">                :end-val=&quot;890&quot;</span><br><span class="line">                :duration=&quot;1000&quot;</span><br><span class="line">              /&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;todo-item&quot;&gt;</span><br><span class="line">              &lt;span&gt;本月待转正&lt;/span&gt;</span><br><span class="line">              &lt;count-to</span><br><span class="line">                :start-val=&quot;0&quot;</span><br><span class="line">                :end-val=&quot;117&quot;</span><br><span class="line">                :duration=&quot;1000&quot;</span><br><span class="line">              /&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;todo-item&quot;&gt;</span><br><span class="line">              &lt;span&gt;本月待离职&lt;/span&gt;</span><br><span class="line">              &lt;count-to</span><br><span class="line">                :start-val=&quot;0&quot;</span><br><span class="line">                :end-val=&quot;234&quot;</span><br><span class="line">                :duration=&quot;1000&quot;</span><br><span class="line">              /&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;todo-item&quot;&gt;</span><br><span class="line">              &lt;span&gt;接口总访问&lt;/span&gt;</span><br><span class="line">              &lt;count-to</span><br><span class="line">                :start-val=&quot;0&quot;</span><br><span class="line">                :end-val=&quot;789&quot;</span><br><span class="line">                :duration=&quot;1000&quot;</span><br><span class="line">              /&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;!-- 快捷入口 --&gt;</span><br><span class="line">        &lt;div class=&quot;panel&quot;&gt;</span><br><span class="line">          &lt;div class=&quot;panel-title&quot;&gt;快捷入口&lt;/div&gt;</span><br><span class="line">          &lt;div class=&quot;quick-entry&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;entry-item&quot;&gt;</span><br><span class="line">              &lt;div class=&quot;entry-icon approval&quot; /&gt;</span><br><span class="line">              &lt;span&gt;假期审批&lt;/span&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;entry-item&quot;&gt;</span><br><span class="line">              &lt;div class=&quot;entry-icon social&quot; /&gt;</span><br><span class="line">              &lt;span&gt;社保管理&lt;/span&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;entry-item&quot;&gt;</span><br><span class="line">              &lt;div class=&quot;entry-icon role&quot; /&gt;</span><br><span class="line">              &lt;span&gt;角色管理&lt;/span&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;entry-item&quot;&gt;</span><br><span class="line">              &lt;div class=&quot;entry-icon salary&quot; /&gt;</span><br><span class="line">              &lt;span&gt;薪资设置&lt;/span&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;entry-item&quot;&gt;</span><br><span class="line">              &lt;div class=&quot;entry-icon bpm&quot; /&gt;</span><br><span class="line">              &lt;span&gt;流程设置&lt;/span&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;!-- 图表数据 --&gt;</span><br><span class="line">        &lt;div class=&quot;panel&quot;&gt;</span><br><span class="line">          &lt;div class=&quot;panel-title&quot;&gt;社保申报数据&lt;/div&gt;</span><br><span class="line">          &lt;div class=&quot;chart-container&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;chart-info&quot;&gt;</span><br><span class="line">              &lt;div class=&quot;info-main&quot;&gt;</span><br><span class="line">                &lt;span&gt;申报人数&lt;/span&gt;</span><br><span class="line">                &lt;count-to</span><br><span class="line">                  :start-val=&quot;0&quot;</span><br><span class="line">                  :end-val=&quot;223&quot;</span><br><span class="line">                  :duration=&quot;1000&quot;</span><br><span class="line">                /&gt;</span><br><span class="line"></span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">              &lt;div class=&quot;info-list&quot;&gt;</span><br><span class="line">                &lt;div class=&quot;info-list-item&quot;&gt;</span><br><span class="line">                  &lt;span&gt;待申报(人)&lt;/span&gt;</span><br><span class="line">                  &lt;count-to</span><br><span class="line">                    :start-val=&quot;0&quot;</span><br><span class="line">                    :end-val=&quot;117&quot;</span><br><span class="line">                    :duration=&quot;1000&quot;</span><br><span class="line">                  /&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div class=&quot;info-list-item&quot;&gt;</span><br><span class="line">                  &lt;span&gt;申报中(人)&lt;/span&gt;</span><br><span class="line">                  &lt;count-to</span><br><span class="line">                    :start-val=&quot;0&quot;</span><br><span class="line">                    :end-val=&quot;167&quot;</span><br><span class="line">                    :duration=&quot;1000&quot;</span><br><span class="line">                  /&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div class=&quot;info-list-item&quot;&gt;</span><br><span class="line">                  &lt;span&gt;已申报(人)&lt;/span&gt;</span><br><span class="line">                  &lt;count-to</span><br><span class="line">                    :start-val=&quot;0&quot;</span><br><span class="line">                    :end-val=&quot;24&quot;</span><br><span class="line">                    :duration=&quot;1000&quot;</span><br><span class="line">                  /&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;chart&quot;&gt;</span><br><span class="line">              &lt;!-- 图表 --&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;!-- 图表数据 --&gt;</span><br><span class="line">        &lt;div class=&quot;panel&quot;&gt;</span><br><span class="line">          &lt;div class=&quot;panel-title&quot;&gt;公积金申报数据&lt;/div&gt;</span><br><span class="line">          &lt;div class=&quot;chart-container&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;chart-info&quot;&gt;</span><br><span class="line">              &lt;div class=&quot;info-main&quot;&gt;</span><br><span class="line">                &lt;span&gt;申报人数&lt;/span&gt;</span><br><span class="line">                &lt;count-to</span><br><span class="line">                  :start-val=&quot;0&quot;</span><br><span class="line">                  :end-val=&quot;335&quot;</span><br><span class="line">                  :duration=&quot;1000&quot;</span><br><span class="line">                /&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">              &lt;div class=&quot;info-list&quot;&gt;</span><br><span class="line">                &lt;div class=&quot;info-list-item&quot;&gt;</span><br><span class="line">                  &lt;span&gt;待申报(人)&lt;/span&gt;</span><br><span class="line">                  &lt;count-to</span><br><span class="line">                    :start-val=&quot;0&quot;</span><br><span class="line">                    :end-val=&quot;345&quot;</span><br><span class="line">                    :duration=&quot;1000&quot;</span><br><span class="line">                  /&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div class=&quot;info-list-item&quot;&gt;</span><br><span class="line">                  &lt;span&gt;申报中(人)&lt;/span&gt;</span><br><span class="line">                  &lt;count-to</span><br><span class="line">                    :start-val=&quot;0&quot;</span><br><span class="line">                    :end-val=&quot;109&quot;</span><br><span class="line">                    :duration=&quot;1000&quot;</span><br><span class="line">                  /&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div class=&quot;info-list-item&quot;&gt;</span><br><span class="line">                  &lt;span&gt;已申报(人)&lt;/span&gt;</span><br><span class="line">                  &lt;count-to</span><br><span class="line">                    :start-val=&quot;0&quot;</span><br><span class="line">                    :end-val=&quot;77&quot;</span><br><span class="line">                    :duration=&quot;1000&quot;</span><br><span class="line">                  /&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;chart&quot;&gt;</span><br><span class="line">              &lt;!-- 图表 --&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;!-- 右侧内容 --&gt;</span><br><span class="line">      &lt;div class=&quot;right&quot;&gt;</span><br><span class="line">        &lt;!-- 帮助链接 --&gt;</span><br><span class="line">        &lt;div class=&quot;panel&quot;&gt;</span><br><span class="line">          &lt;div class=&quot;help&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;help-left&quot;&gt;</span><br><span class="line">              &lt;div class=&quot;panel-title&quot;&gt;帮助链接&lt;/div&gt;</span><br><span class="line">              &lt;div class=&quot;help-list&quot;&gt;</span><br><span class="line">                &lt;div class=&quot;help-block&quot;&gt;</span><br><span class="line">                  &lt;i class=&quot;icon-entry&quot; /&gt;</span><br><span class="line">                  入门指南</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div class=&quot;help-block&quot;&gt;</span><br><span class="line">                  &lt;i class=&quot;icon-help&quot; /&gt;</span><br><span class="line">                  在线帮助手册</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div class=&quot;help-block&quot;&gt;</span><br><span class="line">                  &lt;i class=&quot;icon-support&quot; /&gt;</span><br><span class="line">                  联系技术支持</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div class=&quot;help-block&quot;&gt;</span><br><span class="line">                  &lt;i class=&quot;icon-add&quot; /&gt;</span><br><span class="line">                  添加链接</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;help-right&quot;&gt;</span><br><span class="line">              &lt;div class=&quot;calendar&quot;&gt;</span><br><span class="line">                &lt;!-- &lt;el-calendar /&gt; --&gt;</span><br><span class="line">                &lt;el-calendar /&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;!-- 通知公告 --&gt;</span><br><span class="line">        &lt;div class=&quot;panel&quot;&gt;</span><br><span class="line">          &lt;div class=&quot;panel-title&quot;&gt;通知公告&lt;/div&gt;</span><br><span class="line">          &lt;div class=&quot;information-list&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;information-list-item&quot;&gt;</span><br><span class="line">              &lt;img src=&quot;@/assets/common/img.jpeg&quot; alt=&quot;&quot;&gt;</span><br><span class="line">              &lt;div&gt;</span><br><span class="line">                &lt;p&gt;</span><br><span class="line">                  &lt;span class=&quot;col&quot;&gt;朱继柳&lt;/span&gt; 发布了</span><br><span class="line">                  第1期“传智大讲堂”互动讨论获奖名单公布</span><br><span class="line">                &lt;/p&gt;</span><br><span class="line">                &lt;p&gt;2018-07-21 15:21:38&lt;/p&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;information-list-item&quot;&gt;</span><br><span class="line">              &lt;img src=&quot;@/assets/common/img.jpeg&quot; alt=&quot;&quot;&gt;</span><br><span class="line">              &lt;div&gt;</span><br><span class="line">                &lt;p&gt;</span><br><span class="line">                  &lt;span class=&quot;col&quot;&gt;朱继柳&lt;/span&gt; 发布了</span><br><span class="line">                  第1期“传智大讲堂”互动讨论获奖名单公布</span><br><span class="line">                &lt;/p&gt;</span><br><span class="line">                &lt;p&gt;2018-07-21 15:21:38&lt;/p&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;information-list-item&quot;&gt;</span><br><span class="line">              &lt;img src=&quot;@/assets/common/img.jpeg&quot; alt=&quot;&quot;&gt;</span><br><span class="line">              &lt;div&gt;</span><br><span class="line">                &lt;p&gt;</span><br><span class="line">                  &lt;span class=&quot;col&quot;&gt;朱继柳&lt;/span&gt; 发布了</span><br><span class="line">                  第1期“传智大讲堂”互动讨论获奖名单公布</span><br><span class="line">                &lt;/p&gt;</span><br><span class="line">                &lt;p&gt;2018-07-21 15:21:38&lt;/p&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import CountTo from &#x27;vue-count-to&#x27;</span><br><span class="line">import &#123; mapGetters &#125; from &#x27;vuex&#x27;</span><br><span class="line">export default &#123;</span><br><span class="line">  components: &#123;</span><br><span class="line">    CountTo</span><br><span class="line">  &#125;,</span><br><span class="line">  // 计算属性</span><br><span class="line">  computed: &#123;</span><br><span class="line">    ...mapGetters([&#x27;name&#x27;, &#x27;avatar&#x27;, &#x27;company&#x27;, &#x27;departmentName&#x27;]) // 映射给了计算属性</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&quot;scss&quot;&gt;</span><br><span class="line">.dashboard &#123;</span><br><span class="line">  background: #f5f6f8;</span><br><span class="line">  width: 100%;</span><br><span class="line">  min-height: calc(100vh - 80px);</span><br><span class="line"></span><br><span class="line">  ::v-deep .el-calendar-day &#123;</span><br><span class="line">  height:  40px;</span><br><span class="line"> &#125;</span><br><span class="line"> ::v-deep .el-calendar-table__row td,::v-deep .el-calendar-table tr td:first-child, ::v-deep .el-calendar-table__row td.prev&#123;</span><br><span class="line">  border:none;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line">.date-content &#123;</span><br><span class="line">  height: 40px;</span><br><span class="line">  text-align: center;</span><br><span class="line">  line-height: 40px;</span><br><span class="line">  font-size: 14px;</span><br><span class="line">&#125;</span><br><span class="line">.date-content .rest &#123;</span><br><span class="line">  color: #fff;</span><br><span class="line">  border-radius: 50%;</span><br><span class="line">  background: rgb(250, 124, 77);</span><br><span class="line">  width: 20px;</span><br><span class="line">  height: 20px;</span><br><span class="line">  line-height: 20px;</span><br><span class="line">  display: inline-block;</span><br><span class="line">  font-size: 12px;</span><br><span class="line">  margin-left: 10px;</span><br><span class="line">&#125;</span><br><span class="line">.date-content .text&#123;</span><br><span class="line">  width: 20px;</span><br><span class="line">  height: 20px;</span><br><span class="line">  line-height: 20px;</span><br><span class="line"> display: inline-block;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">::v-deep .el-calendar-table td.is-selected .text&#123;</span><br><span class="line">   background: #409eff;</span><br><span class="line">   color: #fff;</span><br><span class="line">   border-radius: 50%;</span><br><span class="line"> &#125;</span><br><span class="line"> ::v-deep .el-calendar__header &#123;</span><br><span class="line">   display: none</span><br><span class="line"> &#125;</span><br><span class="line">  .container &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    .right &#123;</span><br><span class="line">      width: 40%;</span><br><span class="line">      .panel &#123;</span><br><span class="line">        margin-left: 8px;</span><br><span class="line">      &#125;</span><br><span class="line">      :nth-child(1) &#123;</span><br><span class="line">        margin-top: 0;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    .left &#123;</span><br><span class="line">      flex: 1;</span><br><span class="line">      :nth-child(1) &#123;</span><br><span class="line">        margin-top: 0;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    .panel &#123;</span><br><span class="line">      background-color: #fff;</span><br><span class="line"></span><br><span class="line">      margin-top: 8px;</span><br><span class="line">      padding: 20px;</span><br><span class="line">      .panel-title &#123;</span><br><span class="line">        font-size: 16px;</span><br><span class="line">        color: #383c4e;</span><br><span class="line">        font-weight: 500;</span><br><span class="line">      &#125;</span><br><span class="line">      // 用户信息样式</span><br><span class="line">      .user-info &#123;</span><br><span class="line">        display: flex;</span><br><span class="line">        .avatar &#123;</span><br><span class="line">          width: 48px;</span><br><span class="line">          height: 48px;</span><br><span class="line">          border-radius: 12px;</span><br><span class="line">          background-color: #d9d9d9;</span><br><span class="line">          line-height: 48px;</span><br><span class="line">          text-align: center;</span><br><span class="line">        &#125;</span><br><span class="line">         .username &#123;</span><br><span class="line">           width: 30px;</span><br><span class="line">           height: 30px;</span><br><span class="line">           text-align: center;</span><br><span class="line">           line-height: 30px;</span><br><span class="line">           border-radius: 50%;</span><br><span class="line">           background: #04c9be;</span><br><span class="line">           color: #fff;</span><br><span class="line">           margin-right: 4px;</span><br><span class="line">         &#125;</span><br><span class="line">        .company-info &#123;</span><br><span class="line">          margin-left: 10px;</span><br><span class="line">          height: 48px;</span><br><span class="line">          display: flex;</span><br><span class="line">          flex-direction: column;</span><br><span class="line">          justify-content: space-around;</span><br><span class="line">          .title &#123;</span><br><span class="line">            color: #383c4e;</span><br><span class="line">            font-weight: 500;</span><br><span class="line">            font-size: 16px;</span><br><span class="line">            font-family: PingFang SC, PingFang SC-Medium;</span><br><span class="line">            span &#123;</span><br><span class="line">              font-size: 12px;</span><br><span class="line">              background: #f5f6f8;</span><br><span class="line">              text-align: center;</span><br><span class="line">              padding: 2px 8px;</span><br><span class="line">              border-radius: 2px;</span><br><span class="line">              color: #697086;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          .depart &#123;</span><br><span class="line">            font-size: 14px;</span><br><span class="line">            color: #697086;</span><br><span class="line">            font-weight: 400;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      // 代办样式</span><br><span class="line">      .todo-list &#123;</span><br><span class="line">        margin-top: 10px;</span><br><span class="line">        display: flex;</span><br><span class="line">        flex-wrap: wrap;</span><br><span class="line">        .todo-item &#123;</span><br><span class="line">          width: 18%;</span><br><span class="line">          height: 90px;</span><br><span class="line">          display: flex;</span><br><span class="line">          flex-direction: column;</span><br><span class="line">          padding: 10px;</span><br><span class="line">          justify-content: space-around;</span><br><span class="line">          :nth-child(1) &#123;</span><br><span class="line">            color: #697086;</span><br><span class="line">            font-size: 14px;</span><br><span class="line">          &#125;</span><br><span class="line">          :nth-child(2) &#123;</span><br><span class="line">            color: #383c4e;</span><br><span class="line">            font-size: 30px;</span><br><span class="line">            font-weight: 500;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      // 快捷入口</span><br><span class="line">      .quick-entry &#123;</span><br><span class="line">        margin-top: 16px;</span><br><span class="line">        display: flex;</span><br><span class="line">        .entry-item &#123;</span><br><span class="line">          display: flex;</span><br><span class="line">          flex-direction: column;</span><br><span class="line">          align-items: center;</span><br><span class="line">          margin-left: 60px;</span><br><span class="line">          &amp;:nth-child(1) &#123;</span><br><span class="line">            margin-left: 0px;</span><br><span class="line">          &#125;</span><br><span class="line">          .entry-icon &#123;</span><br><span class="line">            width: 40px;</span><br><span class="line">            height: 40px;</span><br><span class="line">            border-radius: 10px;</span><br><span class="line">            background: #f5f6f8;</span><br><span class="line">            background-size: cover;</span><br><span class="line">            &amp;.approval &#123;</span><br><span class="line">              background-image: url(&#x27;~@/assets/common/approval.png&#x27;);</span><br><span class="line">            &#125;</span><br><span class="line">             &amp;.social &#123;</span><br><span class="line">              background-image: url(&#x27;~@/assets/common/social.png&#x27;);</span><br><span class="line">            &#125;</span><br><span class="line">             &amp;.salary &#123;</span><br><span class="line">              background-image: url(&#x27;~@/assets/common/salary.png&#x27;);</span><br><span class="line">            &#125;</span><br><span class="line">            &amp;.role &#123;</span><br><span class="line">              background-image: url(&#x27;~@/assets/common/role.png&#x27;);</span><br><span class="line">            &#125;</span><br><span class="line">             &amp;.bpm &#123;</span><br><span class="line">              background-image: url(&#x27;~@/assets/common/bpm.png&#x27;);</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          span &#123;</span><br><span class="line">            color: #697086;</span><br><span class="line">            font-size: 14px;</span><br><span class="line">            margin-top: 8px;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      // 图表数据</span><br><span class="line">      .chart-container &#123;</span><br><span class="line">        display: flex;</span><br><span class="line">        .chart-info &#123;</span><br><span class="line">         width: 240px;</span><br><span class="line">          margin-top: 10px;</span><br><span class="line">          .info-main &#123;</span><br><span class="line">            padding: 10px;</span><br><span class="line">            display: flex;</span><br><span class="line">            flex-direction: column;</span><br><span class="line">            :nth-child(1) &#123;</span><br><span class="line">              font-size: 14px;</span><br><span class="line">              color: #697086;</span><br><span class="line">            &#125;</span><br><span class="line">            :nth-child(2) &#123;</span><br><span class="line">              margin-top: 10px;</span><br><span class="line">              font-size: 30px;</span><br><span class="line">              color: #04c9be;</span><br><span class="line">              font-weight: 500;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          .info-list &#123;</span><br><span class="line">            background: #f5f6f8;</span><br><span class="line">            border-radius: 4px;</span><br><span class="line">            padding: 12px 15px;</span><br><span class="line">            display: flex;</span><br><span class="line">            flex-wrap: wrap;</span><br><span class="line">            align-items: center;</span><br><span class="line">            .info-list-item &#123;</span><br><span class="line">              width: 50%;</span><br><span class="line">              margin-top: 10px;</span><br><span class="line">              display: flex;</span><br><span class="line">              flex-direction: column;</span><br><span class="line"></span><br><span class="line">              :nth-child(1) &#123;</span><br><span class="line">                font-size: 14px;</span><br><span class="line">                color: #697086;</span><br><span class="line">              &#125;</span><br><span class="line">              :nth-child(2) &#123;</span><br><span class="line">                margin-top: 10px;</span><br><span class="line">                font-size: 30px;</span><br><span class="line">                color: #383c4e;</span><br><span class="line">                font-weight: 500;</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        .chart &#123;</span><br><span class="line">          flex:1</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      // 帮助链接</span><br><span class="line">      .help &#123;</span><br><span class="line">        display: flex;</span><br><span class="line">        .help-left &#123;</span><br><span class="line">          width: 40%;</span><br><span class="line">        &#125;</span><br><span class="line">        .help-right &#123;</span><br><span class="line">          flex: 1;</span><br><span class="line">        &#125;</span><br><span class="line">        .help-list &#123;</span><br><span class="line">          .help-block &#123;</span><br><span class="line">            background: #f5f6f8;</span><br><span class="line">            border-radius: 4px;</span><br><span class="line">            width: 264px;</span><br><span class="line">            height: 54px;</span><br><span class="line">            padding: 17px 10px;</span><br><span class="line">            font-size: 14px;</span><br><span class="line">            color: #697086;</span><br><span class="line">            margin-top: 10px;</span><br><span class="line">            i &#123;</span><br><span class="line">              width: 14px;</span><br><span class="line">              height: 14px;</span><br><span class="line">              display: inline-block;</span><br><span class="line">              background-size: cover;</span><br><span class="line">              vertical-align: middle;</span><br><span class="line">            &#125;</span><br><span class="line">            i.icon-help &#123;</span><br><span class="line">              background-image: url(&quot;~@/assets/common/help.png&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">             i.icon-support &#123;</span><br><span class="line">              background-image: url(&quot;~@/assets/common/support.png&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">             i.icon-add &#123;</span><br><span class="line">              background-image: url(&quot;~@/assets/common/add.png&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">             i.icon-entry &#123;</span><br><span class="line">              background-image: url(&quot;~@/assets/common/entry.png&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      // 通知公告</span><br><span class="line">      .information-list &#123;</span><br><span class="line">        margin-top: 20px;</span><br><span class="line">        .information-list-item &#123;</span><br><span class="line">          display: flex;</span><br><span class="line">          align-items: center;</span><br><span class="line">          margin:15px 0;</span><br><span class="line">          img &#123;</span><br><span class="line">            width: 40px;</span><br><span class="line">            height: 40px;</span><br><span class="line">            border: 50%;</span><br><span class="line">          &#125;</span><br><span class="line">         .col &#123;</span><br><span class="line">           color: #8a97f8;</span><br><span class="line">         &#125;</span><br><span class="line">         div :nth-child(2) &#123;</span><br><span class="line">          color: #697086;</span><br><span class="line">          font-size: 14px;</span><br><span class="line">         &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="4-首页—企业数据获取"><a href="#4-首页—企业数据获取" class="headerlink" title="4.首页—企业数据获取"></a>4.首页—企业数据获取</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022031893.png" alt="image.png"></p><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022031396.png" alt="image.png"></p><ul><li>封装获取数据的API-代码位置(<strong>src/api/home.js</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">&#x27;@/utils/request&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取首页数据</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">getHomeData</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;/home/data&#x27;</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>初始化时获取数据，并替换企业数据-代码位置(<strong>src/views/dashboard/index.vue</strong>)</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;dashboard&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;container&quot;&gt;</span><br><span class="line">      &lt;!-- 左侧内容 --&gt;</span><br><span class="line">      &lt;div class=&quot;left&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;panel&quot;&gt;</span><br><span class="line">          &lt;!-- 个人信息 --&gt;</span><br><span class="line">          &lt;div class=&quot;user-info&quot;&gt;</span><br><span class="line">            &lt;img v-if=&quot;avatar&quot; class=&quot;avatar&quot; :src=&quot;avatar&quot; alt=&quot;&quot;&gt;</span><br><span class="line">            &lt;span v-else class=&quot;username&quot;&gt;&#123;&#123; name?.charAt(0) &#125;&#125;&lt;/span&gt;</span><br><span class="line">            &lt;div class=&quot;company-info&quot;&gt;</span><br><span class="line">              &lt;div class=&quot;title&quot;&gt;</span><br><span class="line">                江苏传智播客教育科技股份有限公司</span><br><span class="line">                &lt;span&gt;体验版&lt;/span&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">              &lt;div class=&quot;depart&quot;&gt;&#123;&#123; name &#125;&#125; ｜ &#123;&#123; company &#125;&#125;-&#123;&#123; departmentName &#125;&#125;&lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">          &lt;!-- 代办 --&gt;</span><br><span class="line">          &lt;div class=&quot;todo-list&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;todo-item&quot;&gt;</span><br><span class="line">              &lt;span&gt;组织总人数&lt;/span&gt;</span><br><span class="line">              &lt;!-- 起始值 终点值 动画时间 --&gt;</span><br><span class="line">              &lt;count-to</span><br><span class="line">                :start-val=&quot;0&quot;</span><br><span class="line">                :end-val=&quot;homeData.employeeTotal&quot;</span><br><span class="line">                :duration=&quot;1000&quot;</span><br><span class="line">              /&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;todo-item&quot;&gt;</span><br><span class="line">              &lt;span&gt;正式员工&lt;/span&gt;</span><br><span class="line">              &lt;count-to</span><br><span class="line">                :start-val=&quot;0&quot;</span><br><span class="line">                :end-val=&quot;homeData.regularEmployeeTotal&quot;</span><br><span class="line">                :duration=&quot;1000&quot;</span><br><span class="line">              /&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;todo-item&quot;&gt;</span><br><span class="line">              &lt;span&gt;合同待签署&lt;/span&gt;</span><br><span class="line">              &lt;count-to</span><br><span class="line">                :start-val=&quot;0&quot;</span><br><span class="line">                :end-val=&quot;homeData.contractSignTotal&quot;</span><br><span class="line">                :duration=&quot;1000&quot;</span><br><span class="line">              /&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;todo-item&quot;&gt;</span><br><span class="line">              &lt;span&gt;待入职&lt;/span&gt;</span><br><span class="line">              &lt;count-to</span><br><span class="line">                :start-val=&quot;0&quot;</span><br><span class="line">                :end-val=&quot;homeData.toBeEmployed&quot;</span><br><span class="line">                :duration=&quot;1000&quot;</span><br><span class="line">              /&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;todo-item&quot;&gt;</span><br><span class="line">              &lt;span&gt;本月待转正&lt;/span&gt;</span><br><span class="line">              &lt;count-to</span><br><span class="line">                :start-val=&quot;0&quot;</span><br><span class="line">                :end-val=&quot;homeData.toBeConfirmed&quot;</span><br><span class="line">                :duration=&quot;1000&quot;</span><br><span class="line">              /&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;todo-item&quot;&gt;</span><br><span class="line">              &lt;span&gt;本月待离职&lt;/span&gt;</span><br><span class="line">              &lt;count-to</span><br><span class="line">                :start-val=&quot;0&quot;</span><br><span class="line">                :end-val=&quot;homeData.toBeDismissed&quot;</span><br><span class="line">                :duration=&quot;1000&quot;</span><br><span class="line">              /&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;todo-item&quot;&gt;</span><br><span class="line">              &lt;span&gt;接口总访问&lt;/span&gt;</span><br><span class="line">              &lt;count-to</span><br><span class="line">                :start-val=&quot;0&quot;</span><br><span class="line">                :end-val=&quot;homeData.interfaceAccessTotal&quot;</span><br><span class="line">                :duration=&quot;1000&quot;</span><br><span class="line">              /&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;!-- 快捷入口 --&gt;</span><br><span class="line">        &lt;div class=&quot;panel&quot;&gt;</span><br><span class="line">          &lt;div class=&quot;panel-title&quot;&gt;快捷入口&lt;/div&gt;</span><br><span class="line">          &lt;div class=&quot;quick-entry&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;entry-item&quot;&gt;</span><br><span class="line">              &lt;div class=&quot;entry-icon approval&quot; /&gt;</span><br><span class="line">              &lt;span&gt;假期审批&lt;/span&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;entry-item&quot;&gt;</span><br><span class="line">              &lt;div class=&quot;entry-icon social&quot; /&gt;</span><br><span class="line">              &lt;span&gt;社保管理&lt;/span&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;entry-item&quot;&gt;</span><br><span class="line">              &lt;div class=&quot;entry-icon role&quot; /&gt;</span><br><span class="line">              &lt;span&gt;角色管理&lt;/span&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;entry-item&quot;&gt;</span><br><span class="line">              &lt;div class=&quot;entry-icon salary&quot; /&gt;</span><br><span class="line">              &lt;span&gt;薪资设置&lt;/span&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;entry-item&quot;&gt;</span><br><span class="line">              &lt;div class=&quot;entry-icon bpm&quot; /&gt;</span><br><span class="line">              &lt;span&gt;流程设置&lt;/span&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;!-- 图表数据 --&gt;</span><br><span class="line">        &lt;div class=&quot;panel&quot;&gt;</span><br><span class="line">          &lt;div class=&quot;panel-title&quot;&gt;社保申报数据&lt;/div&gt;</span><br><span class="line">          &lt;div class=&quot;chart-container&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;chart-info&quot;&gt;</span><br><span class="line">              &lt;div class=&quot;info-main&quot;&gt;</span><br><span class="line">                &lt;span&gt;申报人数&lt;/span&gt;</span><br><span class="line">                &lt;!-- homeData: &#123;&#125; --&gt;</span><br><span class="line">                &lt;count-to</span><br><span class="line">                  :start-val=&quot;0&quot;</span><br><span class="line">                  :end-val=&quot;homeData.socialInsurance?.declarationTotal&quot;</span><br><span class="line">                  :duration=&quot;1000&quot;</span><br><span class="line">                /&gt;</span><br><span class="line"></span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">              &lt;div class=&quot;info-list&quot;&gt;</span><br><span class="line">                &lt;div class=&quot;info-list-item&quot;&gt;</span><br><span class="line">                  &lt;span&gt;待申报(人)&lt;/span&gt;</span><br><span class="line">                  &lt;count-to</span><br><span class="line">                    :start-val=&quot;0&quot;</span><br><span class="line">                    :end-val=&quot;homeData.socialInsurance?.toDeclareTotal&quot;</span><br><span class="line">                    :duration=&quot;1000&quot;</span><br><span class="line">                  /&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div class=&quot;info-list-item&quot;&gt;</span><br><span class="line">                  &lt;span&gt;申报中(人)&lt;/span&gt;</span><br><span class="line">                  &lt;count-to</span><br><span class="line">                    :start-val=&quot;0&quot;</span><br><span class="line">                    :end-val=&quot;homeData.socialInsurance?.declaringTotal&quot;</span><br><span class="line">                    :duration=&quot;1000&quot;</span><br><span class="line">                  /&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div class=&quot;info-list-item&quot;&gt;</span><br><span class="line">                  &lt;span&gt;已申报(人)&lt;/span&gt;</span><br><span class="line">                  &lt;count-to</span><br><span class="line">                    :start-val=&quot;0&quot;</span><br><span class="line">                    :end-val=&quot;homeData.socialInsurance?.declaredTotal&quot;</span><br><span class="line">                    :duration=&quot;1000&quot;</span><br><span class="line">                  /&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;chart&quot;&gt;</span><br><span class="line">              &lt;!-- 图表 --&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;!-- 图表数据 --&gt;</span><br><span class="line">        &lt;div class=&quot;panel&quot;&gt;</span><br><span class="line">          &lt;div class=&quot;panel-title&quot;&gt;公积金申报数据&lt;/div&gt;</span><br><span class="line">          &lt;div class=&quot;chart-container&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;chart-info&quot;&gt;</span><br><span class="line">              &lt;div class=&quot;info-main&quot;&gt;</span><br><span class="line">                &lt;span&gt;申报人数&lt;/span&gt;</span><br><span class="line">                &lt;count-to</span><br><span class="line">                  :start-val=&quot;0&quot;</span><br><span class="line">                  :end-val=&quot;homeData.providentFund?.declarationTotal&quot;</span><br><span class="line">                  :duration=&quot;1000&quot;</span><br><span class="line">                /&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">              &lt;div class=&quot;info-list&quot;&gt;</span><br><span class="line">                &lt;div class=&quot;info-list-item&quot;&gt;</span><br><span class="line">                  &lt;span&gt;待申报(人)&lt;/span&gt;</span><br><span class="line">                  &lt;count-to</span><br><span class="line">                    :start-val=&quot;0&quot;</span><br><span class="line">                    :end-val=&quot;homeData.providentFund?.toDeclareTotal&quot;</span><br><span class="line">                    :duration=&quot;1000&quot;</span><br><span class="line">                  /&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div class=&quot;info-list-item&quot;&gt;</span><br><span class="line">                  &lt;span&gt;申报中(人)&lt;/span&gt;</span><br><span class="line">                  &lt;count-to</span><br><span class="line">                    :start-val=&quot;0&quot;</span><br><span class="line">                    :end-val=&quot;homeData.providentFund?.declaringTotal&quot;</span><br><span class="line">                    :duration=&quot;1000&quot;</span><br><span class="line">                  /&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div class=&quot;info-list-item&quot;&gt;</span><br><span class="line">                  &lt;span&gt;已申报(人)&lt;/span&gt;</span><br><span class="line">                  &lt;count-to</span><br><span class="line">                    :start-val=&quot;0&quot;</span><br><span class="line">                    :end-val=&quot;homeData.providentFund?.declaredTotal&quot;</span><br><span class="line">                    :duration=&quot;1000&quot;</span><br><span class="line">                  /&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;chart&quot;&gt;</span><br><span class="line">              &lt;!-- 图表 --&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;!-- 右侧内容 --&gt;</span><br><span class="line">      &lt;div class=&quot;right&quot;&gt;</span><br><span class="line">        &lt;!-- 帮助链接 --&gt;</span><br><span class="line">        &lt;div class=&quot;panel&quot;&gt;</span><br><span class="line">          &lt;div class=&quot;help&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;help-left&quot;&gt;</span><br><span class="line">              &lt;div class=&quot;panel-title&quot;&gt;帮助链接&lt;/div&gt;</span><br><span class="line">              &lt;div class=&quot;help-list&quot;&gt;</span><br><span class="line">                &lt;div class=&quot;help-block&quot;&gt;</span><br><span class="line">                  &lt;i class=&quot;icon-entry&quot; /&gt;</span><br><span class="line">                  入门指南</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div class=&quot;help-block&quot;&gt;</span><br><span class="line">                  &lt;i class=&quot;icon-help&quot; /&gt;</span><br><span class="line">                  在线帮助手册</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div class=&quot;help-block&quot;&gt;</span><br><span class="line">                  &lt;i class=&quot;icon-support&quot; /&gt;</span><br><span class="line">                  联系技术支持</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div class=&quot;help-block&quot;&gt;</span><br><span class="line">                  &lt;i class=&quot;icon-add&quot; /&gt;</span><br><span class="line">                  添加链接</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;help-right&quot;&gt;</span><br><span class="line">              &lt;div class=&quot;calendar&quot;&gt;</span><br><span class="line">                &lt;!-- &lt;el-calendar /&gt; --&gt;</span><br><span class="line">                &lt;el-calendar /&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;!-- 通知公告 --&gt;</span><br><span class="line">        &lt;div class=&quot;panel&quot;&gt;</span><br><span class="line">          &lt;div class=&quot;panel-title&quot;&gt;通知公告&lt;/div&gt;</span><br><span class="line">          &lt;div class=&quot;information-list&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;information-list-item&quot;&gt;</span><br><span class="line">              &lt;img src=&quot;@/assets/common/img.jpeg&quot; alt=&quot;&quot;&gt;</span><br><span class="line">              &lt;div&gt;</span><br><span class="line">                &lt;p&gt;</span><br><span class="line">                  &lt;span class=&quot;col&quot;&gt;朱继柳&lt;/span&gt; 发布了</span><br><span class="line">                  第1期“传智大讲堂”互动讨论获奖名单公布</span><br><span class="line">                &lt;/p&gt;</span><br><span class="line">                &lt;p&gt;2018-07-21 15:21:38&lt;/p&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;information-list-item&quot;&gt;</span><br><span class="line">              &lt;img src=&quot;@/assets/common/img.jpeg&quot; alt=&quot;&quot;&gt;</span><br><span class="line">              &lt;div&gt;</span><br><span class="line">                &lt;p&gt;</span><br><span class="line">                  &lt;span class=&quot;col&quot;&gt;朱继柳&lt;/span&gt; 发布了</span><br><span class="line">                  第1期“传智大讲堂”互动讨论获奖名单公布</span><br><span class="line">                &lt;/p&gt;</span><br><span class="line">                &lt;p&gt;2018-07-21 15:21:38&lt;/p&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;information-list-item&quot;&gt;</span><br><span class="line">              &lt;img src=&quot;@/assets/common/img.jpeg&quot; alt=&quot;&quot;&gt;</span><br><span class="line">              &lt;div&gt;</span><br><span class="line">                &lt;p&gt;</span><br><span class="line">                  &lt;span class=&quot;col&quot;&gt;朱继柳&lt;/span&gt; 发布了</span><br><span class="line">                  第1期“传智大讲堂”互动讨论获奖名单公布</span><br><span class="line">                &lt;/p&gt;</span><br><span class="line">                &lt;p&gt;2018-07-21 15:21:38&lt;/p&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import CountTo from &#x27;vue-count-to&#x27;</span><br><span class="line">import &#123; mapGetters &#125; from &#x27;vuex&#x27;</span><br><span class="line">import &#123; getHomeData &#125; from &#x27;@/api/home&#x27;</span><br><span class="line">export default &#123;</span><br><span class="line">  components: &#123;</span><br><span class="line">    CountTo</span><br><span class="line">  &#125;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      homeData: &#123;&#125; // 存放首页数据的对象</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  // 计算属性</span><br><span class="line">  computed: &#123;</span><br><span class="line">    ...mapGetters([&#x27;name&#x27;, &#x27;avatar&#x27;, &#x27;company&#x27;, &#x27;departmentName&#x27;]) // 映射给了计算属性</span><br><span class="line">  &#125;,</span><br><span class="line">  created() &#123;</span><br><span class="line">    this.getHomeData()</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    async getHomeData() &#123;</span><br><span class="line">      this.homeData = await getHomeData()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&quot;scss&quot;&gt;</span><br><span class="line">.dashboard &#123;</span><br><span class="line">  background: #f5f6f8;</span><br><span class="line">  width: 100%;</span><br><span class="line">  min-height: calc(100vh - 80px);</span><br><span class="line"></span><br><span class="line">  ::v-deep .el-calendar-day &#123;</span><br><span class="line">  height:  40px;</span><br><span class="line"> &#125;</span><br><span class="line"> ::v-deep .el-calendar-table__row td,::v-deep .el-calendar-table tr td:first-child, ::v-deep .el-calendar-table__row td.prev&#123;</span><br><span class="line">  border:none;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line">.date-content &#123;</span><br><span class="line">  height: 40px;</span><br><span class="line">  text-align: center;</span><br><span class="line">  line-height: 40px;</span><br><span class="line">  font-size: 14px;</span><br><span class="line">&#125;</span><br><span class="line">.date-content .rest &#123;</span><br><span class="line">  color: #fff;</span><br><span class="line">  border-radius: 50%;</span><br><span class="line">  background: rgb(250, 124, 77);</span><br><span class="line">  width: 20px;</span><br><span class="line">  height: 20px;</span><br><span class="line">  line-height: 20px;</span><br><span class="line">  display: inline-block;</span><br><span class="line">  font-size: 12px;</span><br><span class="line">  margin-left: 10px;</span><br><span class="line">&#125;</span><br><span class="line">.date-content .text&#123;</span><br><span class="line">  width: 20px;</span><br><span class="line">  height: 20px;</span><br><span class="line">  line-height: 20px;</span><br><span class="line"> display: inline-block;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">::v-deep .el-calendar-table td.is-selected .text&#123;</span><br><span class="line">   background: #409eff;</span><br><span class="line">   color: #fff;</span><br><span class="line">   border-radius: 50%;</span><br><span class="line"> &#125;</span><br><span class="line"> ::v-deep .el-calendar__header &#123;</span><br><span class="line">   display: none</span><br><span class="line"> &#125;</span><br><span class="line">  .container &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    .right &#123;</span><br><span class="line">      width: 40%;</span><br><span class="line">      .panel &#123;</span><br><span class="line">        margin-left: 8px;</span><br><span class="line">      &#125;</span><br><span class="line">      :nth-child(1) &#123;</span><br><span class="line">        margin-top: 0;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    .left &#123;</span><br><span class="line">      flex: 1;</span><br><span class="line">      :nth-child(1) &#123;</span><br><span class="line">        margin-top: 0;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    .panel &#123;</span><br><span class="line">      background-color: #fff;</span><br><span class="line"></span><br><span class="line">      margin-top: 8px;</span><br><span class="line">      padding: 20px;</span><br><span class="line">      .panel-title &#123;</span><br><span class="line">        font-size: 16px;</span><br><span class="line">        color: #383c4e;</span><br><span class="line">        font-weight: 500;</span><br><span class="line">      &#125;</span><br><span class="line">      // 用户信息样式</span><br><span class="line">      .user-info &#123;</span><br><span class="line">        display: flex;</span><br><span class="line">        .avatar &#123;</span><br><span class="line">          width: 48px;</span><br><span class="line">          height: 48px;</span><br><span class="line">          border-radius: 12px;</span><br><span class="line">          background-color: #d9d9d9;</span><br><span class="line">          line-height: 48px;</span><br><span class="line">          text-align: center;</span><br><span class="line">        &#125;</span><br><span class="line">         .username &#123;</span><br><span class="line">           width: 30px;</span><br><span class="line">           height: 30px;</span><br><span class="line">           text-align: center;</span><br><span class="line">           line-height: 30px;</span><br><span class="line">           border-radius: 50%;</span><br><span class="line">           background: #04c9be;</span><br><span class="line">           color: #fff;</span><br><span class="line">           margin-right: 4px;</span><br><span class="line">         &#125;</span><br><span class="line">        .company-info &#123;</span><br><span class="line">          margin-left: 10px;</span><br><span class="line">          height: 48px;</span><br><span class="line">          display: flex;</span><br><span class="line">          flex-direction: column;</span><br><span class="line">          justify-content: space-around;</span><br><span class="line">          .title &#123;</span><br><span class="line">            color: #383c4e;</span><br><span class="line">            font-weight: 500;</span><br><span class="line">            font-size: 16px;</span><br><span class="line">            font-family: PingFang SC, PingFang SC-Medium;</span><br><span class="line">            span &#123;</span><br><span class="line">              font-size: 12px;</span><br><span class="line">              background: #f5f6f8;</span><br><span class="line">              text-align: center;</span><br><span class="line">              padding: 2px 8px;</span><br><span class="line">              border-radius: 2px;</span><br><span class="line">              color: #697086;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          .depart &#123;</span><br><span class="line">            font-size: 14px;</span><br><span class="line">            color: #697086;</span><br><span class="line">            font-weight: 400;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      // 代办样式</span><br><span class="line">      .todo-list &#123;</span><br><span class="line">        margin-top: 10px;</span><br><span class="line">        display: flex;</span><br><span class="line">        flex-wrap: wrap;</span><br><span class="line">        .todo-item &#123;</span><br><span class="line">          width: 18%;</span><br><span class="line">          height: 90px;</span><br><span class="line">          display: flex;</span><br><span class="line">          flex-direction: column;</span><br><span class="line">          padding: 10px;</span><br><span class="line">          justify-content: space-around;</span><br><span class="line">          :nth-child(1) &#123;</span><br><span class="line">            color: #697086;</span><br><span class="line">            font-size: 14px;</span><br><span class="line">          &#125;</span><br><span class="line">          :nth-child(2) &#123;</span><br><span class="line">            color: #383c4e;</span><br><span class="line">            font-size: 30px;</span><br><span class="line">            font-weight: 500;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      // 快捷入口</span><br><span class="line">      .quick-entry &#123;</span><br><span class="line">        margin-top: 16px;</span><br><span class="line">        display: flex;</span><br><span class="line">        .entry-item &#123;</span><br><span class="line">          display: flex;</span><br><span class="line">          flex-direction: column;</span><br><span class="line">          align-items: center;</span><br><span class="line">          margin-left: 60px;</span><br><span class="line">          &amp;:nth-child(1) &#123;</span><br><span class="line">            margin-left: 0px;</span><br><span class="line">          &#125;</span><br><span class="line">          .entry-icon &#123;</span><br><span class="line">            width: 40px;</span><br><span class="line">            height: 40px;</span><br><span class="line">            border-radius: 10px;</span><br><span class="line">            background: #f5f6f8;</span><br><span class="line">            background-size: cover;</span><br><span class="line">            &amp;.approval &#123;</span><br><span class="line">              background-image: url(&#x27;~@/assets/common/approval.png&#x27;);</span><br><span class="line">            &#125;</span><br><span class="line">             &amp;.social &#123;</span><br><span class="line">              background-image: url(&#x27;~@/assets/common/social.png&#x27;);</span><br><span class="line">            &#125;</span><br><span class="line">             &amp;.salary &#123;</span><br><span class="line">              background-image: url(&#x27;~@/assets/common/salary.png&#x27;);</span><br><span class="line">            &#125;</span><br><span class="line">            &amp;.role &#123;</span><br><span class="line">              background-image: url(&#x27;~@/assets/common/role.png&#x27;);</span><br><span class="line">            &#125;</span><br><span class="line">             &amp;.bpm &#123;</span><br><span class="line">              background-image: url(&#x27;~@/assets/common/bpm.png&#x27;);</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          span &#123;</span><br><span class="line">            color: #697086;</span><br><span class="line">            font-size: 14px;</span><br><span class="line">            margin-top: 8px;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      // 图表数据</span><br><span class="line">      .chart-container &#123;</span><br><span class="line">        display: flex;</span><br><span class="line">        .chart-info &#123;</span><br><span class="line">         width: 240px;</span><br><span class="line">          margin-top: 10px;</span><br><span class="line">          .info-main &#123;</span><br><span class="line">            padding: 10px;</span><br><span class="line">            display: flex;</span><br><span class="line">            flex-direction: column;</span><br><span class="line">            :nth-child(1) &#123;</span><br><span class="line">              font-size: 14px;</span><br><span class="line">              color: #697086;</span><br><span class="line">            &#125;</span><br><span class="line">            :nth-child(2) &#123;</span><br><span class="line">              margin-top: 10px;</span><br><span class="line">              font-size: 30px;</span><br><span class="line">              color: #04c9be;</span><br><span class="line">              font-weight: 500;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          .info-list &#123;</span><br><span class="line">            background: #f5f6f8;</span><br><span class="line">            border-radius: 4px;</span><br><span class="line">            padding: 12px 15px;</span><br><span class="line">            display: flex;</span><br><span class="line">            flex-wrap: wrap;</span><br><span class="line">            align-items: center;</span><br><span class="line">            .info-list-item &#123;</span><br><span class="line">              width: 50%;</span><br><span class="line">              margin-top: 10px;</span><br><span class="line">              display: flex;</span><br><span class="line">              flex-direction: column;</span><br><span class="line"></span><br><span class="line">              :nth-child(1) &#123;</span><br><span class="line">                font-size: 14px;</span><br><span class="line">                color: #697086;</span><br><span class="line">              &#125;</span><br><span class="line">              :nth-child(2) &#123;</span><br><span class="line">                margin-top: 10px;</span><br><span class="line">                font-size: 30px;</span><br><span class="line">                color: #383c4e;</span><br><span class="line">                font-weight: 500;</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        .chart &#123;</span><br><span class="line">          flex:1</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      // 帮助链接</span><br><span class="line">      .help &#123;</span><br><span class="line">        display: flex;</span><br><span class="line">        .help-left &#123;</span><br><span class="line">          width: 40%;</span><br><span class="line">        &#125;</span><br><span class="line">        .help-right &#123;</span><br><span class="line">          flex: 1;</span><br><span class="line">        &#125;</span><br><span class="line">        .help-list &#123;</span><br><span class="line">          .help-block &#123;</span><br><span class="line">            background: #f5f6f8;</span><br><span class="line">            border-radius: 4px;</span><br><span class="line">            width: 264px;</span><br><span class="line">            height: 54px;</span><br><span class="line">            padding: 17px 10px;</span><br><span class="line">            font-size: 14px;</span><br><span class="line">            color: #697086;</span><br><span class="line">            margin-top: 10px;</span><br><span class="line">            i &#123;</span><br><span class="line">              width: 14px;</span><br><span class="line">              height: 14px;</span><br><span class="line">              display: inline-block;</span><br><span class="line">              background-size: cover;</span><br><span class="line">              vertical-align: middle;</span><br><span class="line">            &#125;</span><br><span class="line">            i.icon-help &#123;</span><br><span class="line">              background-image: url(&quot;~@/assets/common/help.png&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">             i.icon-support &#123;</span><br><span class="line">              background-image: url(&quot;~@/assets/common/support.png&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">             i.icon-add &#123;</span><br><span class="line">              background-image: url(&quot;~@/assets/common/add.png&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">             i.icon-entry &#123;</span><br><span class="line">              background-image: url(&quot;~@/assets/common/entry.png&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      // 通知公告</span><br><span class="line">      .information-list &#123;</span><br><span class="line">        margin-top: 20px;</span><br><span class="line">        .information-list-item &#123;</span><br><span class="line">          display: flex;</span><br><span class="line">          align-items: center;</span><br><span class="line">          margin:15px 0;</span><br><span class="line">          img &#123;</span><br><span class="line">            width: 40px;</span><br><span class="line">            height: 40px;</span><br><span class="line">            border: 50%;</span><br><span class="line">          &#125;</span><br><span class="line">         .col &#123;</span><br><span class="line">           color: #8a97f8;</span><br><span class="line">         &#125;</span><br><span class="line">         div :nth-child(2) &#123;</span><br><span class="line">          color: #697086;</span><br><span class="line">          font-size: 14px;</span><br><span class="line">         &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="5-首页—通知消息获取"><a href="#5-首页—通知消息获取" class="headerlink" title="5.首页—通知消息获取"></a>5.首页—通知消息获取</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022031478.png" alt="image.png"></p><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022032659.png" alt="image.png"></p><ul><li>封装获取消息的API-代码位置(<strong>src/api/home.js</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">getMessageList</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;/home/notice&#x27;</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>初始化时获取消息列表-代码位置(<strong>src/views/dashboard/index.vue</strong>)</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;dashboard&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;container&quot;&gt;</span><br><span class="line">      &lt;!-- 左侧内容 --&gt;</span><br><span class="line">      &lt;div class=&quot;left&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;panel&quot;&gt;</span><br><span class="line">          &lt;!-- 个人信息 --&gt;</span><br><span class="line">          &lt;div class=&quot;user-info&quot;&gt;</span><br><span class="line">            &lt;img v-if=&quot;avatar&quot; class=&quot;avatar&quot; :src=&quot;avatar&quot; alt=&quot;&quot;&gt;</span><br><span class="line">            &lt;span v-else class=&quot;username&quot;&gt;&#123;&#123; name?.charAt(0) &#125;&#125;&lt;/span&gt;</span><br><span class="line">            &lt;div class=&quot;company-info&quot;&gt;</span><br><span class="line">              &lt;div class=&quot;title&quot;&gt;</span><br><span class="line">                江苏传智播客教育科技股份有限公司</span><br><span class="line">                &lt;span&gt;体验版&lt;/span&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">              &lt;div class=&quot;depart&quot;&gt;&#123;&#123; name &#125;&#125; ｜ &#123;&#123; company &#125;&#125;-&#123;&#123; departmentName &#125;&#125;&lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">          &lt;!-- 代办 --&gt;</span><br><span class="line">          &lt;div class=&quot;todo-list&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;todo-item&quot;&gt;</span><br><span class="line">              &lt;span&gt;组织总人数&lt;/span&gt;</span><br><span class="line">              &lt;!-- 起始值 终点值 动画时间 --&gt;</span><br><span class="line">              &lt;count-to</span><br><span class="line">                :start-val=&quot;0&quot;</span><br><span class="line">                :end-val=&quot;homeData.employeeTotal&quot;</span><br><span class="line">                :duration=&quot;1000&quot;</span><br><span class="line">              /&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;todo-item&quot;&gt;</span><br><span class="line">              &lt;span&gt;正式员工&lt;/span&gt;</span><br><span class="line">              &lt;count-to</span><br><span class="line">                :start-val=&quot;0&quot;</span><br><span class="line">                :end-val=&quot;homeData.regularEmployeeTotal&quot;</span><br><span class="line">                :duration=&quot;1000&quot;</span><br><span class="line">              /&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;todo-item&quot;&gt;</span><br><span class="line">              &lt;span&gt;合同待签署&lt;/span&gt;</span><br><span class="line">              &lt;count-to</span><br><span class="line">                :start-val=&quot;0&quot;</span><br><span class="line">                :end-val=&quot;homeData.contractSignTotal&quot;</span><br><span class="line">                :duration=&quot;1000&quot;</span><br><span class="line">              /&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;todo-item&quot;&gt;</span><br><span class="line">              &lt;span&gt;待入职&lt;/span&gt;</span><br><span class="line">              &lt;count-to</span><br><span class="line">                :start-val=&quot;0&quot;</span><br><span class="line">                :end-val=&quot;homeData.toBeEmployed&quot;</span><br><span class="line">                :duration=&quot;1000&quot;</span><br><span class="line">              /&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;todo-item&quot;&gt;</span><br><span class="line">              &lt;span&gt;本月待转正&lt;/span&gt;</span><br><span class="line">              &lt;count-to</span><br><span class="line">                :start-val=&quot;0&quot;</span><br><span class="line">                :end-val=&quot;homeData.toBeConfirmed&quot;</span><br><span class="line">                :duration=&quot;1000&quot;</span><br><span class="line">              /&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;todo-item&quot;&gt;</span><br><span class="line">              &lt;span&gt;本月待离职&lt;/span&gt;</span><br><span class="line">              &lt;count-to</span><br><span class="line">                :start-val=&quot;0&quot;</span><br><span class="line">                :end-val=&quot;homeData.toBeDismissed&quot;</span><br><span class="line">                :duration=&quot;1000&quot;</span><br><span class="line">              /&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;todo-item&quot;&gt;</span><br><span class="line">              &lt;span&gt;接口总访问&lt;/span&gt;</span><br><span class="line">              &lt;count-to</span><br><span class="line">                :start-val=&quot;0&quot;</span><br><span class="line">                :end-val=&quot;homeData.interfaceAccessTotal&quot;</span><br><span class="line">                :duration=&quot;1000&quot;</span><br><span class="line">              /&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;!-- 快捷入口 --&gt;</span><br><span class="line">        &lt;div class=&quot;panel&quot;&gt;</span><br><span class="line">          &lt;div class=&quot;panel-title&quot;&gt;快捷入口&lt;/div&gt;</span><br><span class="line">          &lt;div class=&quot;quick-entry&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;entry-item&quot;&gt;</span><br><span class="line">              &lt;div class=&quot;entry-icon approval&quot; /&gt;</span><br><span class="line">              &lt;span&gt;假期审批&lt;/span&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;entry-item&quot;&gt;</span><br><span class="line">              &lt;div class=&quot;entry-icon social&quot; /&gt;</span><br><span class="line">              &lt;span&gt;社保管理&lt;/span&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;entry-item&quot;&gt;</span><br><span class="line">              &lt;div class=&quot;entry-icon role&quot; /&gt;</span><br><span class="line">              &lt;span&gt;角色管理&lt;/span&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;entry-item&quot;&gt;</span><br><span class="line">              &lt;div class=&quot;entry-icon salary&quot; /&gt;</span><br><span class="line">              &lt;span&gt;薪资设置&lt;/span&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;entry-item&quot;&gt;</span><br><span class="line">              &lt;div class=&quot;entry-icon bpm&quot; /&gt;</span><br><span class="line">              &lt;span&gt;流程设置&lt;/span&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;!-- 图表数据 --&gt;</span><br><span class="line">        &lt;div class=&quot;panel&quot;&gt;</span><br><span class="line">          &lt;div class=&quot;panel-title&quot;&gt;社保申报数据&lt;/div&gt;</span><br><span class="line">          &lt;div class=&quot;chart-container&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;chart-info&quot;&gt;</span><br><span class="line">              &lt;div class=&quot;info-main&quot;&gt;</span><br><span class="line">                &lt;span&gt;申报人数&lt;/span&gt;</span><br><span class="line">                &lt;!-- homeData: &#123;&#125; --&gt;</span><br><span class="line">                &lt;count-to</span><br><span class="line">                  :start-val=&quot;0&quot;</span><br><span class="line">                  :end-val=&quot;homeData.socialInsurance?.declarationTotal&quot;</span><br><span class="line">                  :duration=&quot;1000&quot;</span><br><span class="line">                /&gt;</span><br><span class="line"></span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">              &lt;div class=&quot;info-list&quot;&gt;</span><br><span class="line">                &lt;div class=&quot;info-list-item&quot;&gt;</span><br><span class="line">                  &lt;span&gt;待申报(人)&lt;/span&gt;</span><br><span class="line">                  &lt;count-to</span><br><span class="line">                    :start-val=&quot;0&quot;</span><br><span class="line">                    :end-val=&quot;homeData.socialInsurance?.toDeclareTotal&quot;</span><br><span class="line">                    :duration=&quot;1000&quot;</span><br><span class="line">                  /&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div class=&quot;info-list-item&quot;&gt;</span><br><span class="line">                  &lt;span&gt;申报中(人)&lt;/span&gt;</span><br><span class="line">                  &lt;count-to</span><br><span class="line">                    :start-val=&quot;0&quot;</span><br><span class="line">                    :end-val=&quot;homeData.socialInsurance?.declaringTotal&quot;</span><br><span class="line">                    :duration=&quot;1000&quot;</span><br><span class="line">                  /&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div class=&quot;info-list-item&quot;&gt;</span><br><span class="line">                  &lt;span&gt;已申报(人)&lt;/span&gt;</span><br><span class="line">                  &lt;count-to</span><br><span class="line">                    :start-val=&quot;0&quot;</span><br><span class="line">                    :end-val=&quot;homeData.socialInsurance?.declaredTotal&quot;</span><br><span class="line">                    :duration=&quot;1000&quot;</span><br><span class="line">                  /&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;chart&quot;&gt;</span><br><span class="line">              &lt;!-- 图表 --&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;!-- 图表数据 --&gt;</span><br><span class="line">        &lt;div class=&quot;panel&quot;&gt;</span><br><span class="line">          &lt;div class=&quot;panel-title&quot;&gt;公积金申报数据&lt;/div&gt;</span><br><span class="line">          &lt;div class=&quot;chart-container&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;chart-info&quot;&gt;</span><br><span class="line">              &lt;div class=&quot;info-main&quot;&gt;</span><br><span class="line">                &lt;span&gt;申报人数&lt;/span&gt;</span><br><span class="line">                &lt;count-to</span><br><span class="line">                  :start-val=&quot;0&quot;</span><br><span class="line">                  :end-val=&quot;homeData.providentFund?.declarationTotal&quot;</span><br><span class="line">                  :duration=&quot;1000&quot;</span><br><span class="line">                /&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">              &lt;div class=&quot;info-list&quot;&gt;</span><br><span class="line">                &lt;div class=&quot;info-list-item&quot;&gt;</span><br><span class="line">                  &lt;span&gt;待申报(人)&lt;/span&gt;</span><br><span class="line">                  &lt;count-to</span><br><span class="line">                    :start-val=&quot;0&quot;</span><br><span class="line">                    :end-val=&quot;homeData.providentFund?.toDeclareTotal&quot;</span><br><span class="line">                    :duration=&quot;1000&quot;</span><br><span class="line">                  /&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div class=&quot;info-list-item&quot;&gt;</span><br><span class="line">                  &lt;span&gt;申报中(人)&lt;/span&gt;</span><br><span class="line">                  &lt;count-to</span><br><span class="line">                    :start-val=&quot;0&quot;</span><br><span class="line">                    :end-val=&quot;homeData.providentFund?.declaringTotal&quot;</span><br><span class="line">                    :duration=&quot;1000&quot;</span><br><span class="line">                  /&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div class=&quot;info-list-item&quot;&gt;</span><br><span class="line">                  &lt;span&gt;已申报(人)&lt;/span&gt;</span><br><span class="line">                  &lt;count-to</span><br><span class="line">                    :start-val=&quot;0&quot;</span><br><span class="line">                    :end-val=&quot;homeData.providentFund?.declaredTotal&quot;</span><br><span class="line">                    :duration=&quot;1000&quot;</span><br><span class="line">                  /&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;chart&quot;&gt;</span><br><span class="line">              &lt;!-- 图表 --&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;!-- 右侧内容 --&gt;</span><br><span class="line">      &lt;div class=&quot;right&quot;&gt;</span><br><span class="line">        &lt;!-- 帮助链接 --&gt;</span><br><span class="line">        &lt;div class=&quot;panel&quot;&gt;</span><br><span class="line">          &lt;div class=&quot;help&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;help-left&quot;&gt;</span><br><span class="line">              &lt;div class=&quot;panel-title&quot;&gt;帮助链接&lt;/div&gt;</span><br><span class="line">              &lt;div class=&quot;help-list&quot;&gt;</span><br><span class="line">                &lt;div class=&quot;help-block&quot;&gt;</span><br><span class="line">                  &lt;i class=&quot;icon-entry&quot; /&gt;</span><br><span class="line">                  入门指南</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div class=&quot;help-block&quot;&gt;</span><br><span class="line">                  &lt;i class=&quot;icon-help&quot; /&gt;</span><br><span class="line">                  在线帮助手册</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div class=&quot;help-block&quot;&gt;</span><br><span class="line">                  &lt;i class=&quot;icon-support&quot; /&gt;</span><br><span class="line">                  联系技术支持</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div class=&quot;help-block&quot;&gt;</span><br><span class="line">                  &lt;i class=&quot;icon-add&quot; /&gt;</span><br><span class="line">                  添加链接</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;help-right&quot;&gt;</span><br><span class="line">              &lt;div class=&quot;calendar&quot;&gt;</span><br><span class="line">                &lt;!-- &lt;el-calendar /&gt; --&gt;</span><br><span class="line">                &lt;el-calendar /&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;!-- 通知公告 --&gt;</span><br><span class="line">        &lt;div class=&quot;panel&quot;&gt;</span><br><span class="line">          &lt;div class=&quot;panel-title&quot;&gt;通知公告&lt;/div&gt;</span><br><span class="line">          &lt;div class=&quot;information-list&quot;&gt;</span><br><span class="line">            &lt;div v-for=&quot;(item,index) in list&quot; :key=&quot;index&quot; class=&quot;information-list-item&quot;&gt;</span><br><span class="line">              &lt;img :src=&quot;item.icon&quot; alt=&quot;&quot;&gt;</span><br><span class="line">              &lt;div&gt;</span><br><span class="line">                &lt;p&gt;</span><br><span class="line">                  &#123;&#123; item.notice &#125;&#125;</span><br><span class="line">                &lt;/p&gt;</span><br><span class="line">                &lt;p&gt;&#123;&#123; item.createTime &#125;&#125;&lt;/p&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import CountTo from &#x27;vue-count-to&#x27;</span><br><span class="line">import &#123; mapGetters &#125; from &#x27;vuex&#x27;</span><br><span class="line">import &#123; getHomeData, getMessageList &#125; from &#x27;@/api/home&#x27;</span><br><span class="line">export default &#123;</span><br><span class="line">  components: &#123;</span><br><span class="line">    CountTo</span><br><span class="line">  &#125;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      homeData: &#123;&#125;, // 存放首页数据的对象</span><br><span class="line">      list: []</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  // 计算属性</span><br><span class="line">  computed: &#123;</span><br><span class="line">    ...mapGetters([&#x27;name&#x27;, &#x27;avatar&#x27;, &#x27;company&#x27;, &#x27;departmentName&#x27;]) // 映射给了计算属性</span><br><span class="line">  &#125;,</span><br><span class="line">  created() &#123;</span><br><span class="line">    this.getHomeData()</span><br><span class="line">    this.getMessageList()</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    async getHomeData() &#123;</span><br><span class="line">      this.homeData = await getHomeData()</span><br><span class="line">    &#125;,</span><br><span class="line">    async getMessageList() &#123;</span><br><span class="line">      this.list = await getMessageList()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&quot;scss&quot;&gt;</span><br><span class="line">.dashboard &#123;</span><br><span class="line">  background: #f5f6f8;</span><br><span class="line">  width: 100%;</span><br><span class="line">  min-height: calc(100vh - 80px);</span><br><span class="line"></span><br><span class="line">  ::v-deep .el-calendar-day &#123;</span><br><span class="line">  height:  40px;</span><br><span class="line"> &#125;</span><br><span class="line"> ::v-deep .el-calendar-table__row td,::v-deep .el-calendar-table tr td:first-child, ::v-deep .el-calendar-table__row td.prev&#123;</span><br><span class="line">  border:none;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line">.date-content &#123;</span><br><span class="line">  height: 40px;</span><br><span class="line">  text-align: center;</span><br><span class="line">  line-height: 40px;</span><br><span class="line">  font-size: 14px;</span><br><span class="line">&#125;</span><br><span class="line">.date-content .rest &#123;</span><br><span class="line">  color: #fff;</span><br><span class="line">  border-radius: 50%;</span><br><span class="line">  background: rgb(250, 124, 77);</span><br><span class="line">  width: 20px;</span><br><span class="line">  height: 20px;</span><br><span class="line">  line-height: 20px;</span><br><span class="line">  display: inline-block;</span><br><span class="line">  font-size: 12px;</span><br><span class="line">  margin-left: 10px;</span><br><span class="line">&#125;</span><br><span class="line">.date-content .text&#123;</span><br><span class="line">  width: 20px;</span><br><span class="line">  height: 20px;</span><br><span class="line">  line-height: 20px;</span><br><span class="line"> display: inline-block;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">::v-deep .el-calendar-table td.is-selected .text&#123;</span><br><span class="line">   background: #409eff;</span><br><span class="line">   color: #fff;</span><br><span class="line">   border-radius: 50%;</span><br><span class="line"> &#125;</span><br><span class="line"> ::v-deep .el-calendar__header &#123;</span><br><span class="line">   display: none</span><br><span class="line"> &#125;</span><br><span class="line">  .container &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    .right &#123;</span><br><span class="line">      width: 40%;</span><br><span class="line">      .panel &#123;</span><br><span class="line">        margin-left: 8px;</span><br><span class="line">      &#125;</span><br><span class="line">      :nth-child(1) &#123;</span><br><span class="line">        margin-top: 0;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    .left &#123;</span><br><span class="line">      flex: 1;</span><br><span class="line">      :nth-child(1) &#123;</span><br><span class="line">        margin-top: 0;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    .panel &#123;</span><br><span class="line">      background-color: #fff;</span><br><span class="line"></span><br><span class="line">      margin-top: 8px;</span><br><span class="line">      padding: 20px;</span><br><span class="line">      .panel-title &#123;</span><br><span class="line">        font-size: 16px;</span><br><span class="line">        color: #383c4e;</span><br><span class="line">        font-weight: 500;</span><br><span class="line">      &#125;</span><br><span class="line">      // 用户信息样式</span><br><span class="line">      .user-info &#123;</span><br><span class="line">        display: flex;</span><br><span class="line">        .avatar &#123;</span><br><span class="line">          width: 48px;</span><br><span class="line">          height: 48px;</span><br><span class="line">          border-radius: 12px;</span><br><span class="line">          background-color: #d9d9d9;</span><br><span class="line">          line-height: 48px;</span><br><span class="line">          text-align: center;</span><br><span class="line">        &#125;</span><br><span class="line">         .username &#123;</span><br><span class="line">           width: 30px;</span><br><span class="line">           height: 30px;</span><br><span class="line">           text-align: center;</span><br><span class="line">           line-height: 30px;</span><br><span class="line">           border-radius: 50%;</span><br><span class="line">           background: #04c9be;</span><br><span class="line">           color: #fff;</span><br><span class="line">           margin-right: 4px;</span><br><span class="line">         &#125;</span><br><span class="line">        .company-info &#123;</span><br><span class="line">          margin-left: 10px;</span><br><span class="line">          height: 48px;</span><br><span class="line">          display: flex;</span><br><span class="line">          flex-direction: column;</span><br><span class="line">          justify-content: space-around;</span><br><span class="line">          .title &#123;</span><br><span class="line">            color: #383c4e;</span><br><span class="line">            font-weight: 500;</span><br><span class="line">            font-size: 16px;</span><br><span class="line">            font-family: PingFang SC, PingFang SC-Medium;</span><br><span class="line">            span &#123;</span><br><span class="line">              font-size: 12px;</span><br><span class="line">              background: #f5f6f8;</span><br><span class="line">              text-align: center;</span><br><span class="line">              padding: 2px 8px;</span><br><span class="line">              border-radius: 2px;</span><br><span class="line">              color: #697086;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          .depart &#123;</span><br><span class="line">            font-size: 14px;</span><br><span class="line">            color: #697086;</span><br><span class="line">            font-weight: 400;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      // 代办样式</span><br><span class="line">      .todo-list &#123;</span><br><span class="line">        margin-top: 10px;</span><br><span class="line">        display: flex;</span><br><span class="line">        flex-wrap: wrap;</span><br><span class="line">        .todo-item &#123;</span><br><span class="line">          width: 18%;</span><br><span class="line">          height: 90px;</span><br><span class="line">          display: flex;</span><br><span class="line">          flex-direction: column;</span><br><span class="line">          padding: 10px;</span><br><span class="line">          justify-content: space-around;</span><br><span class="line">          :nth-child(1) &#123;</span><br><span class="line">            color: #697086;</span><br><span class="line">            font-size: 14px;</span><br><span class="line">          &#125;</span><br><span class="line">          :nth-child(2) &#123;</span><br><span class="line">            color: #383c4e;</span><br><span class="line">            font-size: 30px;</span><br><span class="line">            font-weight: 500;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      // 快捷入口</span><br><span class="line">      .quick-entry &#123;</span><br><span class="line">        margin-top: 16px;</span><br><span class="line">        display: flex;</span><br><span class="line">        .entry-item &#123;</span><br><span class="line">          display: flex;</span><br><span class="line">          flex-direction: column;</span><br><span class="line">          align-items: center;</span><br><span class="line">          margin-left: 60px;</span><br><span class="line">          &amp;:nth-child(1) &#123;</span><br><span class="line">            margin-left: 0px;</span><br><span class="line">          &#125;</span><br><span class="line">          .entry-icon &#123;</span><br><span class="line">            width: 40px;</span><br><span class="line">            height: 40px;</span><br><span class="line">            border-radius: 10px;</span><br><span class="line">            background: #f5f6f8;</span><br><span class="line">            background-size: cover;</span><br><span class="line">            &amp;.approval &#123;</span><br><span class="line">              background-image: url(&#x27;~@/assets/common/approval.png&#x27;);</span><br><span class="line">            &#125;</span><br><span class="line">             &amp;.social &#123;</span><br><span class="line">              background-image: url(&#x27;~@/assets/common/social.png&#x27;);</span><br><span class="line">            &#125;</span><br><span class="line">             &amp;.salary &#123;</span><br><span class="line">              background-image: url(&#x27;~@/assets/common/salary.png&#x27;);</span><br><span class="line">            &#125;</span><br><span class="line">            &amp;.role &#123;</span><br><span class="line">              background-image: url(&#x27;~@/assets/common/role.png&#x27;);</span><br><span class="line">            &#125;</span><br><span class="line">             &amp;.bpm &#123;</span><br><span class="line">              background-image: url(&#x27;~@/assets/common/bpm.png&#x27;);</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          span &#123;</span><br><span class="line">            color: #697086;</span><br><span class="line">            font-size: 14px;</span><br><span class="line">            margin-top: 8px;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      // 图表数据</span><br><span class="line">      .chart-container &#123;</span><br><span class="line">        display: flex;</span><br><span class="line">        .chart-info &#123;</span><br><span class="line">         width: 240px;</span><br><span class="line">          margin-top: 10px;</span><br><span class="line">          .info-main &#123;</span><br><span class="line">            padding: 10px;</span><br><span class="line">            display: flex;</span><br><span class="line">            flex-direction: column;</span><br><span class="line">            :nth-child(1) &#123;</span><br><span class="line">              font-size: 14px;</span><br><span class="line">              color: #697086;</span><br><span class="line">            &#125;</span><br><span class="line">            :nth-child(2) &#123;</span><br><span class="line">              margin-top: 10px;</span><br><span class="line">              font-size: 30px;</span><br><span class="line">              color: #04c9be;</span><br><span class="line">              font-weight: 500;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          .info-list &#123;</span><br><span class="line">            background: #f5f6f8;</span><br><span class="line">            border-radius: 4px;</span><br><span class="line">            padding: 12px 15px;</span><br><span class="line">            display: flex;</span><br><span class="line">            flex-wrap: wrap;</span><br><span class="line">            align-items: center;</span><br><span class="line">            .info-list-item &#123;</span><br><span class="line">              width: 50%;</span><br><span class="line">              margin-top: 10px;</span><br><span class="line">              display: flex;</span><br><span class="line">              flex-direction: column;</span><br><span class="line"></span><br><span class="line">              :nth-child(1) &#123;</span><br><span class="line">                font-size: 14px;</span><br><span class="line">                color: #697086;</span><br><span class="line">              &#125;</span><br><span class="line">              :nth-child(2) &#123;</span><br><span class="line">                margin-top: 10px;</span><br><span class="line">                font-size: 30px;</span><br><span class="line">                color: #383c4e;</span><br><span class="line">                font-weight: 500;</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        .chart &#123;</span><br><span class="line">          flex:1</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      // 帮助链接</span><br><span class="line">      .help &#123;</span><br><span class="line">        display: flex;</span><br><span class="line">        .help-left &#123;</span><br><span class="line">          width: 40%;</span><br><span class="line">        &#125;</span><br><span class="line">        .help-right &#123;</span><br><span class="line">          flex: 1;</span><br><span class="line">        &#125;</span><br><span class="line">        .help-list &#123;</span><br><span class="line">          .help-block &#123;</span><br><span class="line">            background: #f5f6f8;</span><br><span class="line">            border-radius: 4px;</span><br><span class="line">            width: 264px;</span><br><span class="line">            height: 54px;</span><br><span class="line">            padding: 17px 10px;</span><br><span class="line">            font-size: 14px;</span><br><span class="line">            color: #697086;</span><br><span class="line">            margin-top: 10px;</span><br><span class="line">            i &#123;</span><br><span class="line">              width: 14px;</span><br><span class="line">              height: 14px;</span><br><span class="line">              display: inline-block;</span><br><span class="line">              background-size: cover;</span><br><span class="line">              vertical-align: middle;</span><br><span class="line">            &#125;</span><br><span class="line">            i.icon-help &#123;</span><br><span class="line">              background-image: url(&quot;~@/assets/common/help.png&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">             i.icon-support &#123;</span><br><span class="line">              background-image: url(&quot;~@/assets/common/support.png&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">             i.icon-add &#123;</span><br><span class="line">              background-image: url(&quot;~@/assets/common/add.png&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">             i.icon-entry &#123;</span><br><span class="line">              background-image: url(&quot;~@/assets/common/entry.png&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      // 通知公告</span><br><span class="line">      .information-list &#123;</span><br><span class="line">        margin-top: 20px;</span><br><span class="line">        .information-list-item &#123;</span><br><span class="line">          display: flex;</span><br><span class="line">          align-items: center;</span><br><span class="line">          margin:15px 0;</span><br><span class="line">          img &#123;</span><br><span class="line">            width: 40px;</span><br><span class="line">            height: 40px;</span><br><span class="line">            border: 50%;</span><br><span class="line">          &#125;</span><br><span class="line">         .col &#123;</span><br><span class="line">           color: #8a97f8;</span><br><span class="line">         &#125;</span><br><span class="line">         div :nth-child(2) &#123;</span><br><span class="line">          color: #697086;</span><br><span class="line">          font-size: 14px;</span><br><span class="line">         &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="6-首页—echarts图表的应用"><a href="#6-首页—echarts图表的应用" class="headerlink" title="6.首页—echarts图表的应用"></a>6.首页—echarts图表的应用</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022032825.png" alt="image.png"></p><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022032556.png" alt="image.png"></p><ul><li>安装echarts包</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm i echarts </span><br><span class="line">$ yarn add echarts</span><br></pre></td></tr></table></figure><ul><li>放置两个图表的div，并给定高宽，代码位置(<strong>src/views/dashboard/index.vue</strong>)</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;chart&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 图表 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">ref</span>=<span class="string">&quot;social&quot;</span> <span class="attr">style</span>=<span class="string">&quot; width: 100%; height:100% &quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;chart&quot;</span>&gt;</span></span><br><span class="line">              <span class="comment">&lt;!-- 图表 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">ref</span>=<span class="string">&quot;provident&quot;</span> <span class="attr">style</span>=<span class="string">&quot; width: 100%; height:100% &quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>在mounted中初始化图表-代码位置(<strong>src/views/dashboard/index.vue</strong>)</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">import CountTo from &#x27;vue-count-to&#x27;</span><br><span class="line">import &#123; mapGetters &#125; from &#x27;vuex&#x27;</span><br><span class="line">import &#123; getHomeData, getMessageList &#125; from &#x27;@/api/home&#x27;</span><br><span class="line">import * as echarts from &#x27;echarts&#x27; // 引入所有的echarts</span><br><span class="line">export default &#123;</span><br><span class="line">  components: &#123;</span><br><span class="line">    CountTo</span><br><span class="line">  &#125;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      homeData: &#123;&#125;, // 存放首页数据的对象</span><br><span class="line">      list: []</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  // 计算属性</span><br><span class="line">  computed: &#123;</span><br><span class="line">    ...mapGetters([&#x27;name&#x27;, &#x27;avatar&#x27;, &#x27;company&#x27;, &#x27;departmentName&#x27;]) // 映射给了计算属性</span><br><span class="line">  &#125;,</span><br><span class="line">  watch: &#123;</span><br><span class="line">    homeData() &#123;</span><br><span class="line">      console.log(this.homeData)</span><br><span class="line">      // 设置图表</span><br><span class="line">      this.social.setOption(&#123;</span><br><span class="line">        xAxis: &#123;</span><br><span class="line">          type: &#x27;category&#x27;,</span><br><span class="line">          boundaryGap: false,</span><br><span class="line">          data: this.homeData.socialInsurance?.xAxis</span><br><span class="line">        &#125;,</span><br><span class="line">        yAxis: &#123;</span><br><span class="line">          type: &#x27;value&#x27;</span><br><span class="line">        &#125;,</span><br><span class="line">        series: [</span><br><span class="line">          &#123;</span><br><span class="line">            data: this.homeData.socialInsurance?.yAxis,</span><br><span class="line">            type: &#x27;line&#x27;,</span><br><span class="line">            areaStyle: &#123;</span><br><span class="line">              color: &#x27;#04c9be&#x27; // 填充颜色</span><br><span class="line">            &#125;,</span><br><span class="line">            lineStyle: &#123;</span><br><span class="line">              color: &#x27;#04c9be&#x27; // 线的颜色</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;)</span><br><span class="line">      this.provident.setOption(&#123;</span><br><span class="line">        xAxis: &#123;</span><br><span class="line">          type: &#x27;category&#x27;,</span><br><span class="line">          boundaryGap: false,</span><br><span class="line">          data: this.homeData.providentFund?.xAxis</span><br><span class="line">        &#125;,</span><br><span class="line">        yAxis: &#123;</span><br><span class="line">          type: &#x27;value&#x27;</span><br><span class="line">        &#125;,</span><br><span class="line">        series: [</span><br><span class="line">          &#123;</span><br><span class="line">            data: this.homeData.providentFund?.yAxis,</span><br><span class="line">            type: &#x27;line&#x27;,</span><br><span class="line">            areaStyle: &#123;</span><br><span class="line">              color: &#x27;#04c9be&#x27; // 填充颜色</span><br><span class="line">            &#125;,</span><br><span class="line">            lineStyle: &#123;</span><br><span class="line">              color: &#x27;#04c9be&#x27; // 线的颜色</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  created() &#123;</span><br><span class="line">    this.getHomeData()</span><br><span class="line">    this.getMessageList()</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted() &#123;</span><br><span class="line">    // 获取展示的数据 设置给图表</span><br><span class="line">    // 监听homeData的变化</span><br><span class="line">    this.social = echarts.init(this.$refs.social) // 初始化echart</span><br><span class="line">    // data中没有声明 不是响应式</span><br><span class="line">    this.provident = echarts.init(this.$refs.provident)</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    async getHomeData() &#123;</span><br><span class="line">      this.homeData = await getHomeData()</span><br><span class="line">    &#125;,</span><br><span class="line">    async getMessageList() &#123;</span><br><span class="line">      this.list = await getMessageList()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><blockquote><p>这里为什么要用watch，因为获取数据在created，初始化图表在mounted，执行mouted时，数据并不能保证能够获取到，所以采用获取watch监听数据变化，只要数据变化，就设置图表的options</p><p>为什么 this.social和this.provident 并没有在data中声明，注意，在data中声明的表示它是响应式数据，即它的变化要引起template模板的刷新，但是这里我们只是记录一下当前图表的实例，实例本身会有setOption来影响图表的动态渲染，所以这里并没有必要在data中声明这两个变量</p></blockquote><h2 id="7-首页—echarts图表的按需导入"><a href="#7-首页—echarts图表的按需导入" class="headerlink" title="7.首页—echarts图表的按需导入"></a>7.首页—echarts图表的按需导入</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022032276.png" alt="image.png"></p><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022032728.png" alt="image.png"></p><ul><li>echarts图表的按需导入-代码位置(<strong>src/views/dashboard/index.vue</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> echarts <span class="keyword">from</span> <span class="string">&#x27;echarts/core&#x27;</span> <span class="comment">// 引入核心包</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">LineChart</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;echarts/charts&#x27;</span> <span class="comment">// 引入折线图</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">GridComponent</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;echarts/components&#x27;</span> <span class="comment">// 引入组件</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">CanvasRenderer</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;echarts/renderers&#x27;</span></span><br><span class="line">echarts.<span class="title function_">use</span>([</span><br><span class="line">  <span class="title class_">LineChart</span>,</span><br><span class="line">  <span class="title class_">GridComponent</span>,</span><br><span class="line">  <span class="title class_">CanvasRenderer</span></span><br><span class="line">])</span><br></pre></td></tr></table></figure><h2 id="8-路由模式—将路由改成history模式"><a href="#8-路由模式—将路由改成history模式" class="headerlink" title="8.路由模式—将路由改成history模式"></a>8.路由模式—将路由改成history模式</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022032051.png" alt="image.png"></p><ul><li>hash模式带#，#后面的地址变化不会引起页面的刷新</li><li><p>history没有#，地址变化会引起页面刷新，更符合页面地址的规范（开发环境不刷新-webpack配置）</p></li><li><p>将路由模式修改成history模式-代码位置(<strong>src/router/index.js)</strong></p></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">createRouter</span> = (<span class="params"></span>) =&gt; <span class="keyword">new</span> <span class="title class_">Router</span>(&#123;</span><br><span class="line">  <span class="attr">mode</span>: <span class="string">&#x27;history&#x27;</span>, <span class="comment">// require service support</span></span><br><span class="line">  <span class="attr">scrollBehavior</span>: <span class="function">() =&gt;</span> (&#123; <span class="attr">y</span>: <span class="number">0</span> &#125;),</span><br><span class="line">  <span class="attr">routes</span>: constantRoutes <span class="comment">// 默认引入静态路由</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="9-打包分析—分析"><a href="#9-打包分析—分析" class="headerlink" title="9. 打包分析—分析"></a>9. 打包分析—分析</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022033137.png" alt="image.png"></p><ul><li>打包分析代码</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm run preview -- --report</span><br></pre></td></tr></table></figure><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022033453.png" alt="image.png"></p><ul><li>去除main.js中对于mock.js的引用</li></ul><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022033582.png" alt="image.png"> </p><h2 id="10-CDN加速"><a href="#10-CDN加速" class="headerlink" title="10.CDN加速"></a>10.CDN加速</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022033676.png" alt="image.png"></p><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022033312.png" alt="image.png"></p><blockquote><p>将几个比较大的多在打包时排除，这样可以缩小整体打包的大小，保证js的加载速度，排除的包采用cdn的方式用外链去引入，cdn本名为分发服务器，意为更近的访问区间更快的访问速度将所需要的文件返回给客户端</p></blockquote><ul><li>webpack排除打包-代码位置(<strong>vue.config.js</strong>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">configureWebpack</span>: &#123;</span><br><span class="line">   <span class="comment">// provide the app&#x27;s title in webpack&#x27;s name field, so that</span></span><br><span class="line">   <span class="comment">// it can be accessed in index.html to inject the correct title.</span></span><br><span class="line">   <span class="attr">name</span>: name,</span><br><span class="line">   <span class="attr">resolve</span>: &#123;</span><br><span class="line">     <span class="attr">alias</span>: &#123;</span><br><span class="line">       <span class="string">&#x27;@&#x27;</span>: <span class="title function_">resolve</span>(<span class="string">&#x27;src&#x27;</span>)</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;,</span><br><span class="line">   <span class="comment">// 配置需要排出的包</span></span><br><span class="line">   <span class="attr">externals</span>: &#123;</span><br><span class="line">     <span class="string">&#x27;vue&#x27;</span>: <span class="string">&#x27;Vue&#x27;</span>,</span><br><span class="line">     <span class="string">&#x27;element-ui&#x27;</span>: <span class="string">&#x27;ELEMENT&#x27;</span>,</span><br><span class="line">     <span class="string">&#x27;cos-js-sdk-v5&#x27;</span>: <span class="string">&#x27;COS&#x27;</span></span><br><span class="line">   &#125;</span><br><span class="line"> &#125;,</span><br></pre></td></tr></table></figure><ul><li>在html中采用外链引入排除的文件-代码位置(<strong>public/index.html</strong>)</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge,chrome=1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;icon&quot;</span> <span class="attr">href</span>=<span class="string">&quot;&lt;%= BASE_URL %&gt;favicon.ico&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>&lt;%= webpackConfig.name %&gt;<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/element-ui/2.15.13/theme-chalk/index.min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">noscript</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">strong</span>&gt;</span>We&#x27;re sorry but &lt;%= webpackConfig.name %&gt; doesn&#x27;t work properly without JavaScript enabled. Please enable it to continue.<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">noscript</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- built files will be auto injected --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://lf9-cdn-tos.bytecdntp.com/cdn/expire-1-M/vue/2.6.14/vue.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/element-ui/2.15.13/index.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/cos-js-sdk-v5/dist/cos-js-sdk-v5.min.js&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="11-项目打包—安装nginx"><a href="#11-项目打包—安装nginx" class="headerlink" title="11.项目打包—安装nginx"></a>11.项目打包—安装nginx</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022033819.png" alt="image.png"></p><ul><li>执行打包命令</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm run build:prod</span><br><span class="line">$ yarn build:prod</span><br></pre></td></tr></table></figure><blockquote><p>得到dist文件包</p></blockquote><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022034323.png" alt="image.png"></p><ul><li>安装nginx-mac</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew install nginx  <span class="comment"># mac安装nginx</span></span><br></pre></td></tr></table></figure><ul><li>查看版本-mac</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ nginx -v  <span class="comment"># 查看版本</span></span><br></pre></td></tr></table></figure><ul><li>查看nginx-mac</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew info nginx <span class="comment">#查看nginx</span></span><br></pre></td></tr></table></figure><ul><li>nginx-windows版本</li></ul><blockquote><p>直接解压就可以直接使用</p></blockquote><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022034029.png" alt="image.png"> </p><p>注意：<strong>mac安装</strong>可能遇到的问题</p><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022034596.png" alt="image.png"><br>遇到某个包发生错误，直接使用brew安装这个包，再安装nginx</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ brew install pcre2  <span class="comment"># 安装出错的包</span></span><br><span class="line">$ brew install nginx  <span class="comment"># 安装nginx</span></span><br></pre></td></tr></table></figure><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022034417.png" alt="image.png"><br>遇到这个错误，可以直接执行该命令，安装对应的工具，再安装nginx</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$  xcode-select --install  <span class="comment"># 安装对应工具</span></span><br><span class="line">$  brew install nginx  <span class="comment"># 安装nginx</span></span><br></pre></td></tr></table></figure><h2 id="12-mac-windows环境下nginx部署启动项目"><a href="#12-mac-windows环境下nginx部署启动项目" class="headerlink" title="12.mac/windows环境下nginx部署启动项目"></a>12.mac/windows环境下nginx部署启动项目</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022034722.png" alt="image.png"></p><ul><li>mac查看nginx的相关目录</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">brew info nginx <span class="comment">#查看nginx</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022034929.png" alt="image.png"></p><p>mac-nginx安装目录-/opt/homebrew/Cellar/nginx/1.23.3<br>mac-配置文件路-/opt/homebrew/etc/nginx/nginx.conf </p><ul><li>将打包的文件放置到安装目录/html下</li></ul><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022034743.png" alt="image.png"></p><ul><li>mac-启动服务命令</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ /opt/homebrew/Cellar/nginx/1.23.3/bin/nginx <span class="comment">#启动命令</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>mac-重启服务</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ /opt/homebrew/Cellar/nginx/1.23.3/bin/nginx -s stop  <span class="comment">#停止命令</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>注意： mac版本的nginx的默认端口为8080</p></blockquote><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022035816.png" alt="image.png"></p><ul><li>windows版本启动服务</li></ul><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022035328.png" alt="image.png"> </p><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022035685.png" alt="image.png"></p><ul><li>windows下停止服务</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ./nginx -s stop  <span class="comment">#停止命令</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>注意: nginx默认的访问端口为80</p><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022036360.png" alt="image.png"></p><h2 id="13-nginx解决history的404问题"><a href="#13-nginx解决history的404问题" class="headerlink" title="13.nginx解决history的404问题"></a>13.nginx解决history的404问题</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022037731.png" alt="image.png"></p><ul><li>修改mac-windows配置文件</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">   try_files <span class="variable">$uri</span> <span class="variable">$uri</span>/ /index.html;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>设置不论请求什么地址，都返回index.html</p></blockquote><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022037823.png" alt="image.png"><br><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022037405.png" alt="image.png"><br>windows配置文件<br><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022037483.png" alt="image.png"></p><ul><li>mac重启服务</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ /opt/homebrew/Cellar/nginx/1.23.3/bin/nginx -s reload  <span class="comment">#重启</span></span><br></pre></td></tr></table></figure><ul><li>windows重启服务</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ./nginx -s reload  <span class="comment">#重启</span></span><br></pre></td></tr></table></figure><h2 id="15-nginx配置代理解决生产环境跨域问题"><a href="#15-nginx配置代理解决生产环境跨域问题" class="headerlink" title="15.nginx配置代理解决生产环境跨域问题"></a>15.nginx配置代理解决生产环境跨域问题</h2><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022037985.png" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/8435673/1677862058407-f6b3725c-a57c-4711-acff-3088574d814b.png#averageHue=%23fdfdfd&amp;clientId=u0f540d11-b7d4-4&amp;from=paste&amp;height=270&amp;id=uf3364958&amp;name=image.png&amp;originHeight=540&amp;originWidth=1918&amp;originalType=binary&amp;ratio=2&amp;rotation=0&amp;showTitle=false&amp;size=53889&amp;status=done&amp;style=none&amp;taskId=uda212cc3-d7e4-47b7-83bf-5b394037c9d&amp;title=&amp;width=959" alt="image.png"></p><ul><li>nginx解决生产环境跨域</li></ul><p><img src="https://izdloyl-blog.oss-cn-hangzhou.aliyuncs.com/202408022037384.png" alt="image.png"></p><ul><li>修改配置文件</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">location /prod-api  &#123;</span><br><span class="line">  proxy_pass https://heimahr-t.itheima.net;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>mac重启服务</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ /opt/homebrew/Cellar/nginx/1.23.3/bin/nginx -s reload  <span class="comment">#重启</span></span><br></pre></td></tr></table></figure><ul><li>windows重启服务</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ./nginx -s reload  <span class="comment">#重启</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue3</title>
      <link href="/2024/08/01/vue-vue3%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/"/>
      <url>/2024/08/01/vue-vue3%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="Vue3快速上手"><a href="#Vue3快速上手" class="headerlink" title="Vue3快速上手"></a>Vue3快速上手</h1><p><img src="https://user-images.githubusercontent.com/499550/93624428-53932780-f9ae-11ea-8d16-af949e16a09f.png" style="width:200px" /></p><h2 id="1-Vue3简介"><a href="#1-Vue3简介" class="headerlink" title="1.Vue3简介"></a>1.Vue3简介</h2><ul><li>2020年9月18日，Vue.js发布3.0版本，代号：One Piece（海贼王）</li><li>耗时2年多、<a href="https://github.com/vuejs/vue-next/graphs/commit-activity">2600+次提交</a>、<a href="https://github.com/vuejs/rfcs/tree/master/active-rfcs">30+个RFC</a>、<a href="https://github.com/vuejs/vue-next/pulls?q=is%3Apr+is%3Amerged+-author%3Aapp%2Fdependabot-preview+">600+次PR</a>、<a href="https://github.com/vuejs/vue-next/graphs/contributors">99位贡献者</a> </li><li>github上的tags地址：<a href="https://github.com/vuejs/vue-next/releases/tag/v3.0.0">https://github.com/vuejs/vue-next/releases/tag/v3.0.0</a></li></ul><h2 id="2-Vue3带来了什么"><a href="#2-Vue3带来了什么" class="headerlink" title="2.Vue3带来了什么"></a>2.Vue3带来了什么</h2><h3 id="1-性能的提升"><a href="#1-性能的提升" class="headerlink" title="1.性能的提升"></a>1.性能的提升</h3><ul><li><p>打包大小减少41%</p></li><li><p>初次渲染快55%, 更新渲染快133%</p></li><li><p>内存减少54%</p><p>……</p></li></ul><h3 id="2-源码的升级"><a href="#2-源码的升级" class="headerlink" title="2.源码的升级"></a>2.源码的升级</h3><ul><li><p>使用Proxy代替defineProperty实现响应式</p></li><li><p>重写虚拟DOM的实现和Tree-Shaking</p><p>……</p></li></ul><h3 id="3-拥抱TypeScript"><a href="#3-拥抱TypeScript" class="headerlink" title="3.拥抱TypeScript"></a>3.拥抱TypeScript</h3><ul><li>Vue3可以更好的支持TypeScript</li></ul><h3 id="4-新的特性"><a href="#4-新的特性" class="headerlink" title="4.新的特性"></a>4.新的特性</h3><ol><li><p>Composition API（组合API）</p><ul><li>setup配置</li><li>ref与reactive</li><li>watch与watchEffect</li><li>provide与inject</li><li>……</li></ul></li><li>新的内置组件<ul><li>Fragment </li><li>Teleport</li><li>Suspense</li></ul></li><li><p>其他改变</p><ul><li>新的生命周期钩子</li><li>data 选项应始终被声明为一个函数</li><li>移除keyCode支持作为 v-on 的修饰符</li><li>……</li></ul></li></ol><h1 id="一、创建Vue3-0工程"><a href="#一、创建Vue3-0工程" class="headerlink" title="一、创建Vue3.0工程"></a>一、创建Vue3.0工程</h1><h2 id="1-使用-vue-cli-创建"><a href="#1-使用-vue-cli-创建" class="headerlink" title="1.使用 vue-cli 创建"></a>1.使用 vue-cli 创建</h2><p>官方文档：<a href="https://cli.vuejs.org/zh/guide/creating-a-project.html#vue-create">https://cli.vuejs.org/zh/guide/creating-a-project.html#vue-create</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 查看@vue/cli版本，确保@vue/cli版本在4.5.0以上</span></span><br><span class="line">vue --version</span><br><span class="line"><span class="comment">## 安装或者升级你的@vue/cli</span></span><br><span class="line">npm install -g @vue/cli</span><br><span class="line"><span class="comment">## 创建</span></span><br><span class="line">vue create vue_test</span><br><span class="line"><span class="comment">## 启动</span></span><br><span class="line"><span class="built_in">cd</span> vue_test</span><br><span class="line">npm run serve</span><br></pre></td></tr></table></figure><h2 id="2-使用-vite-创建"><a href="#2-使用-vite-创建" class="headerlink" title="2.使用 vite 创建"></a>2.使用 vite 创建</h2><p>官方文档：<a href="https://v3.cn.vuejs.org/guide/installation.html#vite">https://v3.cn.vuejs.org/guide/installation.html#vite</a></p><p>vite官网：<a href="https://vitejs.cn">https://vitejs.cn</a></p><ul><li>什么是vite？—— 新一代前端构建工具。</li><li>优势如下：<ul><li>开发环境中，无需打包操作，可快速的冷启动。</li><li>轻量快速的热重载（HMR）。</li><li>真正的按需编译，不再等待整个应用编译完成。</li></ul></li><li>传统构建 与 vite构建对比图</li></ul><p><img src="https://cn.vitejs.dev/assets/bundler.37740380.png" style="width:500px;height:280px;float:left" /><img src="https://cn.vitejs.dev/assets/esm.3070012d.png" style="width:480px;height:280px" /></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 创建工程</span></span><br><span class="line">npm init vite-app &lt;project-name&gt;</span><br><span class="line"><span class="comment">## 进入工程目录</span></span><br><span class="line"><span class="built_in">cd</span> &lt;project-name&gt;</span><br><span class="line"><span class="comment">## 安装依赖</span></span><br><span class="line">npm install</span><br><span class="line"><span class="comment">## 运行</span></span><br><span class="line">npm run dev</span><br></pre></td></tr></table></figure><h1 id="二、常用-Composition-API"><a href="#二、常用-Composition-API" class="headerlink" title="二、常用 Composition API"></a>二、常用 Composition API</h1><p>官方文档: <a href="https://v3.cn.vuejs.org/guide/composition-api-introduction.html">https://v3.cn.vuejs.org/guide/composition-api-introduction.html</a></p><h2 id="1-拉开序幕的setup"><a href="#1-拉开序幕的setup" class="headerlink" title="1.拉开序幕的setup"></a>1.拉开序幕的setup</h2><ol><li>理解：Vue3.0中一个新的配置项，值为一个函数。</li><li>setup是所有<strong style="color:#DD5145">Composition API（组合API）</strong><i style="color:gray;font-weight:bold">“ 表演的舞台 ”</i>。</li><li>组件中所用到的：数据、方法等等，均要配置在setup中。</li><li>setup函数的两种返回值：<ol><li>若返回一个对象，则对象中的属性、方法, 在模板中均可以直接使用。（重点关注！）</li><li><span style="color:#aad">若返回一个渲染函数：则可以自定义渲染内容。（了解）</span></li></ol></li><li>注意点：<ol><li>尽量不要与Vue2.x配置混用<ul><li>Vue2.x配置（data、methos、computed…）中<strong style="color:#DD5145">可以访问到</strong>setup中的属性、方法。</li><li>但在setup中<strong style="color:#DD5145">不能访问到</strong>Vue2.x配置（data、methos、computed…）。</li><li>如果有重名, 后者会覆盖前者。</li></ul></li><li>setup不能是一个async函数，因为返回值不再是return的对象, 而是promise, 模板看不到return对象中的属性。（后期也可以返回一个Promise实例，但需要Suspense和异步组件的配合）</li></ol></li></ol><h2 id="2-ref函数"><a href="#2-ref函数" class="headerlink" title="2.ref函数"></a>2.ref函数</h2><ul><li>作用: 定义一个响应式的数据</li><li>语法: <code>const xxx = ref(initValue)</code> <ul><li>创建一个包含响应式数据的<strong style="color:#DD5145">引用对象（reference对象，简称ref对象）</strong>。</li><li>JS中操作数据： <code>xxx.value</code></li><li>模板中读取数据: 不需要.value，直接：<code>&lt;div&gt;&#123;&#123;xxx&#125;&#125;&lt;/div&gt;</code></li></ul></li><li>备注：<ul><li>接收的数据可以是：基本类型、也可以是对象类型。</li><li>基本类型的数据：响应式依然是靠<code>Object.defineProperty()</code>的<code>get</code>与<code>set</code>完成的。</li><li>对象类型的数据：内部 <i style="color:gray;font-weight:bold">“ 求助 ”</i> 了Vue3.0中的一个新函数—— <code>reactive</code>函数。</li></ul></li></ul><h2 id="3-reactive函数"><a href="#3-reactive函数" class="headerlink" title="3.reactive函数"></a>3.reactive函数</h2><ul><li>作用: 定义一个<strong style="color:#DD5145">对象类型</strong>的响应式数据（基本类型不要用它，要用<code>ref</code>函数）</li><li>语法：<code>const 代理对象= reactive(源对象)</code>接收一个对象（或数组），返回一个<strong style="color:#DD5145">代理对象（Proxy的实例对象，简称proxy对象）</strong></li><li>reactive定义的响应式数据是“深层次的”。</li><li>内部基于 ES6 的 Proxy 实现，通过代理对象操作源对象内部数据进行操作。</li></ul><h2 id="4-Vue3-0中的响应式原理"><a href="#4-Vue3-0中的响应式原理" class="headerlink" title="4.Vue3.0中的响应式原理"></a>4.Vue3.0中的响应式原理</h2><h3 id="vue2-x的响应式"><a href="#vue2-x的响应式" class="headerlink" title="vue2.x的响应式"></a>vue2.x的响应式</h3><ul><li><p>实现原理：</p><ul><li><p>对象类型：通过<code>Object.defineProperty()</code>对属性的读取、修改进行拦截（数据劫持）。</p></li><li><p>数组类型：通过重写更新数组的一系列方法来实现拦截。（对数组的变更方法进行了包裹）。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(data, <span class="string">&#x27;count&#x27;</span>, &#123;</span><br><span class="line">    get () &#123;&#125;, </span><br><span class="line">    set () &#123;&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ul></li><li><p>存在问题：</p><ul><li>新增属性、删除属性, 界面不会更新。</li><li>直接通过下标修改数组, 界面不会自动更新。</li></ul></li></ul><h3 id="Vue3-0的响应式"><a href="#Vue3-0的响应式" class="headerlink" title="Vue3.0的响应式"></a>Vue3.0的响应式</h3><ul><li><p>实现原理: </p><ul><li>通过Proxy（代理）:  拦截对象中任意属性的变化, 包括：属性值的读写、属性的添加、属性的删除等。</li><li>通过Reflect（反射）:  对源对象的属性进行操作。</li><li><p>MDN文档中描述的Proxy与Reflect：</p><ul><li><p>Proxy：<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Proxy">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Proxy</a></p></li><li><p>Reflect：<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Reflect">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Reflect</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="title class_">Proxy</span>(data, &#123;</span><br><span class="line"><span class="comment">// 拦截读取属性值</span></span><br><span class="line">    get (target, prop) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Reflect</span>.<span class="title function_">get</span>(target, prop)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 拦截设置属性值或添加新属性</span></span><br><span class="line">    set (target, prop, value) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Reflect</span>.<span class="title function_">set</span>(target, prop, value)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 拦截删除属性</span></span><br><span class="line">    deleteProperty (target, prop) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Reflect</span>.<span class="title function_">deleteProperty</span>(target, prop)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">proxy.<span class="property">name</span> = <span class="string">&#x27;tom&#x27;</span>   </span><br></pre></td></tr></table></figure></li></ul></li></ul></li></ul><h2 id="5-reactive对比ref"><a href="#5-reactive对比ref" class="headerlink" title="5.reactive对比ref"></a>5.reactive对比ref</h2><ul><li>从定义数据角度对比：<ul><li>ref用来定义：<strong style="color:#DD5145">基本类型数据</strong>。</li><li>reactive用来定义：<strong style="color:#DD5145">对象（或数组）类型数据</strong>。</li><li>备注：ref也可以用来定义<strong style="color:#DD5145">对象（或数组）类型数据</strong>, 它内部会自动通过<code>reactive</code>转为<strong style="color:#DD5145">代理对象</strong>。</li></ul></li><li>从原理角度对比：<ul><li>ref通过<code>Object.defineProperty()</code>的<code>get</code>与<code>set</code>来实现响应式（数据劫持）。</li><li>reactive通过使用<strong style="color:#DD5145">Proxy</strong>来实现响应式（数据劫持）, 并通过<strong style="color:#DD5145">Reflect</strong>操作<strong style="color:orange">源对象</strong>内部的数据。</li></ul></li><li>从使用角度对比：<ul><li>ref定义的数据：操作数据<strong style="color:#DD5145">需要</strong><code>.value</code>，读取数据时模板中直接读取<strong style="color:#DD5145">不需要</strong><code>.value</code>。</li><li>reactive定义的数据：操作数据与读取数据：<strong style="color:#DD5145">均不需要</strong><code>.value</code>。</li></ul></li></ul><h2 id="6-setup的两个注意点"><a href="#6-setup的两个注意点" class="headerlink" title="6.setup的两个注意点"></a>6.setup的两个注意点</h2><ul><li><p>setup执行的时机</p><ul><li>在beforeCreate之前执行一次，this是undefined。</li></ul></li><li><p>setup的参数</p><ul><li>props：值为对象，包含：组件外部传递过来，且组件内部声明接收了的属性。</li><li>context：上下文对象<ul><li>attrs: 值为对象，包含：组件外部传递过来，但没有在props配置中声明的属性, 相当于 <code>this.$attrs</code>。</li><li>slots: 收到的插槽内容, 相当于 <code>this.$slots</code>。</li><li>emit: 分发自定义事件的函数, 相当于 <code>this.$emit</code>。</li></ul></li></ul></li></ul><h2 id="7-计算属性与监视"><a href="#7-计算属性与监视" class="headerlink" title="7.计算属性与监视"></a>7.计算属性与监视</h2><h3 id="1-computed函数"><a href="#1-computed函数" class="headerlink" title="1.computed函数"></a>1.computed函数</h3><ul><li><p>与Vue2.x中computed配置功能一致</p></li><li><p>写法</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;computed&#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="title function_">setup</span>(<span class="params"></span>)&#123;</span><br><span class="line">    ...</span><br><span class="line"><span class="comment">//计算属性——简写</span></span><br><span class="line">    <span class="keyword">let</span> fullName = <span class="title function_">computed</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> person.<span class="property">firstName</span> + <span class="string">&#x27;-&#x27;</span> + person.<span class="property">lastName</span></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="comment">//计算属性——完整</span></span><br><span class="line">    <span class="keyword">let</span> fullName = <span class="title function_">computed</span>(&#123;</span><br><span class="line">        <span class="title function_">get</span>(<span class="params"></span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> person.<span class="property">firstName</span> + <span class="string">&#x27;-&#x27;</span> + person.<span class="property">lastName</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="title function_">set</span>(<span class="params">value</span>)&#123;</span><br><span class="line">            <span class="keyword">const</span> nameArr = value.<span class="title function_">split</span>(<span class="string">&#x27;-&#x27;</span>)</span><br><span class="line">            person.<span class="property">firstName</span> = nameArr[<span class="number">0</span>]</span><br><span class="line">            person.<span class="property">lastName</span> = nameArr[<span class="number">1</span>]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="2-watch函数"><a href="#2-watch函数" class="headerlink" title="2.watch函数"></a>2.watch函数</h3><ul><li><p>与Vue2.x中watch配置功能一致</p></li><li><p>两个小“坑”：</p><ul><li>监视reactive定义的响应式数据时：oldValue无法正确获取、强制开启了深度监视（deep配置失效）。</li><li>监视reactive定义的响应式数据中某个属性时：deep配置有效。</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//情况一：监视ref定义的响应式数据</span></span><br><span class="line"><span class="title function_">watch</span>(sum,<span class="function">(<span class="params">newValue,oldValue</span>)=&gt;</span>&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;sum变化了&#x27;</span>,newValue,oldValue)</span><br><span class="line">&#125;,&#123;<span class="attr">immediate</span>:<span class="literal">true</span>&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//情况二：监视多个ref定义的响应式数据</span></span><br><span class="line"><span class="title function_">watch</span>([sum,msg],<span class="function">(<span class="params">newValue,oldValue</span>)=&gt;</span>&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;sum或msg变化了&#x27;</span>,newValue,oldValue)</span><br><span class="line">&#125;) </span><br><span class="line"></span><br><span class="line"><span class="comment">/* 情况三：监视reactive定义的响应式数据</span></span><br><span class="line"><span class="comment">若watch监视的是reactive定义的响应式数据，则无法正确获得oldValue！！</span></span><br><span class="line"><span class="comment">若watch监视的是reactive定义的响应式数据，则强制开启了深度监视 </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title function_">watch</span>(person,<span class="function">(<span class="params">newValue,oldValue</span>)=&gt;</span>&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;person变化了&#x27;</span>,newValue,oldValue)</span><br><span class="line">&#125;,&#123;<span class="attr">immediate</span>:<span class="literal">true</span>,<span class="attr">deep</span>:<span class="literal">false</span>&#125;) <span class="comment">//此处的deep配置不再奏效</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//情况四：监视reactive定义的响应式数据中的某个属性</span></span><br><span class="line"><span class="title function_">watch</span>(<span class="function">()=&gt;</span>person.<span class="property">job</span>,<span class="function">(<span class="params">newValue,oldValue</span>)=&gt;</span>&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;person的job变化了&#x27;</span>,newValue,oldValue)</span><br><span class="line">&#125;,&#123;<span class="attr">immediate</span>:<span class="literal">true</span>,<span class="attr">deep</span>:<span class="literal">true</span>&#125;) </span><br><span class="line"></span><br><span class="line"><span class="comment">//情况五：监视reactive定义的响应式数据中的某些属性</span></span><br><span class="line"><span class="title function_">watch</span>([<span class="function">()=&gt;</span>person.<span class="property">job</span>,<span class="function">()=&gt;</span>person.<span class="property">name</span>],<span class="function">(<span class="params">newValue,oldValue</span>)=&gt;</span>&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;person的job变化了&#x27;</span>,newValue,oldValue)</span><br><span class="line">&#125;,&#123;<span class="attr">immediate</span>:<span class="literal">true</span>,<span class="attr">deep</span>:<span class="literal">true</span>&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//特殊情况</span></span><br><span class="line"><span class="title function_">watch</span>(<span class="function">()=&gt;</span>person.<span class="property">job</span>,<span class="function">(<span class="params">newValue,oldValue</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;person的job变化了&#x27;</span>,newValue,oldValue)</span><br><span class="line">&#125;,&#123;<span class="attr">deep</span>:<span class="literal">true</span>&#125;) <span class="comment">//此处由于监视的是reactive定义的对象中的某个属性，所以deep配置有效</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="3-watchEffect函数"><a href="#3-watchEffect函数" class="headerlink" title="3.watchEffect函数"></a>3.watchEffect函数</h3><ul><li><p>watch的套路是：既要指明监视的属性，也要指明监视的回调。</p></li><li><p>watchEffect的套路是：不用指明监视哪个属性，监视的回调中用到哪个属性，那就监视哪个属性。</p></li><li><p>watchEffect有点像computed：</p><ul><li>但computed注重的计算出来的值（回调函数的返回值），所以必须要写返回值。</li><li>而watchEffect更注重的是过程（回调函数的函数体），所以不用写返回值。</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//watchEffect所指定的回调中用到的数据只要发生变化，则直接重新执行回调。</span></span><br><span class="line"><span class="title function_">watchEffect</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">const</span> x1 = sum.<span class="property">value</span></span><br><span class="line">    <span class="keyword">const</span> x2 = person.<span class="property">age</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;watchEffect配置的回调执行了&#x27;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ul><h2 id="8-生命周期"><a href="#8-生命周期" class="headerlink" title="8.生命周期"></a>8.生命周期</h2><div style="border:1px solid black;width:380px;float:left;margin-right:20px;"><strong>vue2.x的生命周期</strong><img src="https://v2.cn.vuejs.org/images/lifecycle.png" alt="lifecycle_2" style="zoom:33%;width:1200px" /></div><div style="border:1px solid black;width:510px;height:985px;float:left"><strong>vue3.0的生命周期</strong><img src="https://cn.vuejs.org/assets/lifecycle_zh-CN.FtDDVyNA.png" alt="lifecycle_2" style="zoom:33%;width:2500px" /></div><ul><li>Vue3.0中可以继续使用Vue2.x中的生命周期钩子，但有有两个被更名：<ul><li><code>beforeDestroy</code>改名为 <code>beforeUnmount</code></li><li><code>destroyed</code>改名为 <code>unmounted</code></li></ul></li><li>Vue3.0也提供了 Composition API 形式的生命周期钩子，与Vue2.x中钩子对应关系如下：<ul><li><code>beforeCreate</code>===&gt;<code>setup()</code></li><li><code>created</code>=======&gt;<code>setup()</code></li><li><code>beforeMount</code> ===&gt;<code>onBeforeMount</code></li><li><code>mounted</code>=======&gt;<code>onMounted</code></li><li><code>beforeUpdate</code>===&gt;<code>onBeforeUpdate</code></li><li><code>updated</code> =======&gt;<code>onUpdated</code></li><li><code>beforeUnmount</code> ==&gt;<code>onBeforeUnmount</code></li><li><code>unmounted</code> =====&gt;<code>onUnmounted</code></li></ul></li></ul><h2 id="9-自定义hook函数"><a href="#9-自定义hook函数" class="headerlink" title="9.自定义hook函数"></a>9.自定义hook函数</h2><ul><li><p>什么是hook？—— 本质是一个函数，把setup函数中使用的Composition API进行了封装。</p></li><li><p>类似于vue2.x中的mixin。</p></li><li><p>自定义hook的优势: 复用代码, 让setup中的逻辑更清楚易懂。</p></li></ul><h2 id="10-toRef"><a href="#10-toRef" class="headerlink" title="10.toRef"></a>10.toRef</h2><ul><li>作用：创建一个 ref 对象，其value值指向另一个对象中的某个属性。</li><li>语法：<code>const name = toRef(person,&#39;name&#39;)</code></li><li>应用:   要将响应式对象中的某个属性单独提供给外部使用时。</li></ul><ul><li>扩展：<code>toRefs</code> 与<code>toRef</code>功能一致，但可以批量创建多个 ref 对象，语法：<code>toRefs(person)</code></li></ul><h1 id="三、其它-Composition-API"><a href="#三、其它-Composition-API" class="headerlink" title="三、其它 Composition API"></a>三、其它 Composition API</h1><h2 id="1-shallowReactive-与-shallowRef"><a href="#1-shallowReactive-与-shallowRef" class="headerlink" title="1.shallowReactive 与 shallowRef"></a>1.shallowReactive 与 shallowRef</h2><ul><li>shallowReactive：只处理对象最外层属性的响应式（浅响应式）。</li><li><p>shallowRef：只处理基本数据类型的响应式, 不进行对象的响应式处理。</p></li><li><p>什么时候使用?</p><ul><li>如果有一个对象数据，结构比较深, 但变化时只是外层属性变化 ===&gt; shallowReactive。</li><li>如果有一个对象数据，后续功能不会修改该对象中的属性，而是生新的对象来替换 ===&gt; shallowRef。</li></ul></li></ul><h2 id="2-readonly-与-shallowReadonly"><a href="#2-readonly-与-shallowReadonly" class="headerlink" title="2.readonly 与 shallowReadonly"></a>2.readonly 与 shallowReadonly</h2><ul><li>readonly: 让一个响应式数据变为只读的（深只读）。</li><li>shallowReadonly：让一个响应式数据变为只读的（浅只读）。</li><li>应用场景: 不希望数据被修改时。</li></ul><h2 id="3-toRaw-与-markRaw"><a href="#3-toRaw-与-markRaw" class="headerlink" title="3.toRaw 与 markRaw"></a>3.toRaw 与 markRaw</h2><ul><li>toRaw：<ul><li>作用：将一个由<code>reactive</code>生成的<strong style="color:orange">响应式对象</strong>转为<strong style="color:orange">普通对象</strong>。</li><li>使用场景：用于读取响应式对象对应的普通对象，对这个普通对象的所有操作，不会引起页面更新。</li></ul></li><li>markRaw：<ul><li>作用：标记一个对象，使其永远不会再成为响应式对象。</li><li>应用场景:<ol><li>有些值不应被设置为响应式的，例如复杂的第三方类库等。</li><li>当渲染具有不可变数据源的大列表时，跳过响应式转换可以提高性能。</li></ol></li></ul></li></ul><h2 id="4-customRef"><a href="#4-customRef" class="headerlink" title="4.customRef"></a>4.customRef</h2><ul><li><p>作用：创建一个自定义的 ref，并对其依赖项跟踪和更新触发进行显式控制。</p></li><li><p>实现防抖效果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;input type=&quot;text&quot; v-model=&quot;keyword&quot;&gt;</span><br><span class="line">&lt;h3&gt;&#123;&#123;keyword&#125;&#125;&lt;/h3&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import &#123;ref,customRef&#125; from &#x27;vue&#x27;</span><br><span class="line">export default &#123;</span><br><span class="line">name:&#x27;Demo&#x27;,</span><br><span class="line">setup()&#123;</span><br><span class="line">// let keyword = ref(&#x27;hello&#x27;) //使用Vue准备好的内置ref</span><br><span class="line">//自定义一个myRef</span><br><span class="line">function myRef(value,delay)&#123;</span><br><span class="line">let timer</span><br><span class="line">//通过customRef去实现自定义</span><br><span class="line">return customRef((track,trigger)=&gt;&#123;</span><br><span class="line">return&#123;</span><br><span class="line">get()&#123;</span><br><span class="line">track() //告诉Vue这个value值是需要被“追踪”的</span><br><span class="line">return value</span><br><span class="line">&#125;,</span><br><span class="line">set(newValue)&#123;</span><br><span class="line">clearTimeout(timer)</span><br><span class="line">timer = setTimeout(()=&gt;&#123;</span><br><span class="line">value = newValue</span><br><span class="line">trigger() //告诉Vue去更新界面</span><br><span class="line">&#125;,delay)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line">let keyword = myRef(&#x27;hello&#x27;,500) //使用程序员自定义的ref</span><br><span class="line">return &#123;</span><br><span class="line">keyword</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ul><h2 id="5-provide-与-inject"><a href="#5-provide-与-inject" class="headerlink" title="5.provide 与 inject"></a>5.provide 与 inject</h2><p><img src="https://cn.vuejs.org/assets/provide-inject.tIACH1Z-.png" style="width:600px" /></p><ul><li><p>作用：实现<strong style="color:#DD5145">祖与后代组件间</strong>通信</p></li><li><p>套路：父组件有一个 <code>provide</code> 选项来提供数据，后代组件有一个 <code>inject</code> 选项来开始使用这些数据</p></li><li><p>具体写法：</p><ol><li><p>祖组件中：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">setup</span>(<span class="params"></span>)&#123;</span><br><span class="line">......</span><br><span class="line">    <span class="keyword">let</span> car = <span class="title function_">reactive</span>(&#123;<span class="attr">name</span>:<span class="string">&#x27;奔驰&#x27;</span>,<span class="attr">price</span>:<span class="string">&#x27;40万&#x27;</span>&#125;)</span><br><span class="line">    <span class="title function_">provide</span>(<span class="string">&#x27;car&#x27;</span>,car)</span><br><span class="line">    ......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>后代组件中：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">setup</span>(<span class="params">props,context</span>)&#123;</span><br><span class="line">......</span><br><span class="line">    <span class="keyword">const</span> car = <span class="title function_">inject</span>(<span class="string">&#x27;car&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> &#123;car&#125;</span><br><span class="line">......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol></li></ul><h2 id="6-响应式数据的判断"><a href="#6-响应式数据的判断" class="headerlink" title="6.响应式数据的判断"></a>6.响应式数据的判断</h2><ul><li>isRef: 检查一个值是否为一个 ref 对象</li><li>isReactive: 检查一个对象是否是由 <code>reactive</code> 创建的响应式代理</li><li>isReadonly: 检查一个对象是否是由 <code>readonly</code> 创建的只读代理</li><li>isProxy: 检查一个对象是否是由 <code>reactive</code> 或者 <code>readonly</code> 方法创建的代理</li></ul><h1 id="四、Composition-API-的优势"><a href="#四、Composition-API-的优势" class="headerlink" title="四、Composition API 的优势"></a>四、Composition API 的优势</h1><h2 id="1-Options-API-存在的问题"><a href="#1-Options-API-存在的问题" class="headerlink" title="1.Options API 存在的问题"></a>1.Options API 存在的问题</h2><p>使用传统OptionsAPI中，新增或者修改一个需求，就需要分别在data，methods，computed里修改 。</p><div style="width:600px;height:370px;overflow:hidden;float:left">    <img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f84e4e2c02424d9a99862ade0a2e4114~tplv-k3u1fbpfcp-watermark.image" style="width:600px;float:left" /></div><div style="width:300px;height:370px;overflow:hidden;float:left">    <img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e5ac7e20d1784887a826f6360768a368~tplv-k3u1fbpfcp-watermark.image" style="zoom:50%;width:560px;left" /> </div><h2 id="2-Composition-API-的优势"><a href="#2-Composition-API-的优势" class="headerlink" title="2.Composition API 的优势"></a>2.Composition API 的优势</h2><p>我们可以更加优雅的组织我们的代码，函数。让相关功能的代码更加有序的组织在一起。</p><div style="width:500px;height:340px;overflow:hidden;float:left">    <img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/bc0be8211fc54b6c941c036791ba4efe~tplv-k3u1fbpfcp-watermark.image"style="height:360px"/></div><div style="width:430px;height:340px;overflow:hidden;float:left">    <img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6cc55165c0e34069a75fe36f8712eb80~tplv-k3u1fbpfcp-watermark.image"style="height:360px"/></div><h1 id="五、新的组件"><a href="#五、新的组件" class="headerlink" title="五、新的组件"></a>五、新的组件</h1><h2 id="1-Fragment"><a href="#1-Fragment" class="headerlink" title="1.Fragment"></a>1.Fragment</h2><ul><li>在Vue2中: 组件必须有一个根标签</li><li>在Vue3中: 组件可以没有根标签, 内部会将多个标签包含在一个Fragment虚拟元素中</li><li>好处: 减少标签层级, 减小内存占用</li></ul><h2 id="2-Teleport"><a href="#2-Teleport" class="headerlink" title="2.Teleport"></a>2.Teleport</h2><ul><li><p>什么是Teleport？—— <code>Teleport</code> 是一种能够将我们的<strong style="color:#DD5145">组件html结构</strong>移动到指定位置的技术。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;teleport to=&quot;移动位置&quot;&gt;</span><br><span class="line">&lt;div v-if=&quot;isShow&quot; class=&quot;mask&quot;&gt;</span><br><span class="line">&lt;div class=&quot;dialog&quot;&gt;</span><br><span class="line">&lt;h3&gt;我是一个弹窗&lt;/h3&gt;</span><br><span class="line">&lt;button @click=&quot;isShow = false&quot;&gt;关闭弹窗&lt;/button&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/teleport&gt;</span><br></pre></td></tr></table></figure></li></ul><h2 id="3-Suspense"><a href="#3-Suspense" class="headerlink" title="3.Suspense"></a>3.Suspense</h2><ul><li><p>等待异步组件时渲染一些额外内容，让应用有更好的用户体验</p></li><li><p>使用步骤：</p><ul><li><p>异步引入组件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;defineAsyncComponent&#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Child</span> = <span class="title function_">defineAsyncComponent</span>(<span class="function">()=&gt;</span><span class="keyword">import</span>(<span class="string">&#x27;./components/Child.vue&#x27;</span>))</span><br></pre></td></tr></table></figure></li><li><p>使用<code>Suspense</code>包裹组件，并配置好<code>default</code> 与 <code>fallback</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div class=&quot;app&quot;&gt;</span><br><span class="line">&lt;h3&gt;我是App组件&lt;/h3&gt;</span><br><span class="line">&lt;Suspense&gt;</span><br><span class="line">&lt;template v-slot:default&gt;</span><br><span class="line">&lt;Child/&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;template v-slot:fallback&gt;</span><br><span class="line">&lt;h3&gt;加载中.....&lt;/h3&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;/Suspense&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h1 id="六、其他"><a href="#六、其他" class="headerlink" title="六、其他"></a>六、其他</h1><h2 id="1-全局API的转移"><a href="#1-全局API的转移" class="headerlink" title="1.全局API的转移"></a>1.全局API的转移</h2><ul><li><p>Vue 2.x 有许多全局 API 和配置。</p><ul><li><p>例如：注册全局组件、注册全局指令等。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//注册全局组件</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">component</span>(<span class="string">&#x27;MyButton&#x27;</span>, &#123;</span><br><span class="line">  <span class="attr">data</span>: <span class="function">() =&gt;</span> (&#123;</span><br><span class="line">    <span class="attr">count</span>: <span class="number">0</span></span><br><span class="line">  &#125;),</span><br><span class="line">  <span class="attr">template</span>: <span class="string">&#x27;&lt;button @click=&quot;count++&quot;&gt;Clicked &#123;&#123; count &#125;&#125; times.&lt;/button&gt;&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//注册全局指令</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">directive</span>(<span class="string">&#x27;focus&#x27;</span>, &#123;</span><br><span class="line">  <span class="attr">inserted</span>: <span class="function"><span class="params">el</span> =&gt;</span> el.<span class="title function_">focus</span>()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>Vue3.0中对这些API做出了调整：</p><ul><li><p>将全局的API，即：<code>Vue.xxx</code>调整到应用实例（<code>app</code>）上</p><p>| 2.x 全局 API（<code>Vue</code>） | 3.x 实例 API (<code>app</code>)                        |<br>| ————————————- | —————————————————————- |<br>| Vue.config.xxxx           | app.config.xxxx                             |<br>| Vue.config.productionTip  | <strong style="color:#DD5145">移除</strong> |<br>| Vue.component             | app.component                               |<br>| Vue.directive             | app.directive                               |<br>| Vue.mixin                 | app.mixin                                   |<br>| Vue.use                   | app.use                                     |<br>| Vue.prototype             | app.config.globalProperties                 |</p></li></ul></li></ul><h2 id="2-其他改变"><a href="#2-其他改变" class="headerlink" title="2.其他改变"></a>2.其他改变</h2><ul><li><p>data选项应始终被声明为一个函数。</p></li><li><p>过度类名的更改：</p><ul><li><p>Vue2.x写法</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.v-enter</span>,</span><br><span class="line"><span class="selector-class">.v-leave-to</span> &#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.v-leave</span>,</span><br><span class="line"><span class="selector-class">.v-enter-to</span> &#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>Vue3.x写法</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.v-enter-from</span>,</span><br><span class="line"><span class="selector-class">.v-leave-to</span> &#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.v-leave-from</span>,</span><br><span class="line"><span class="selector-class">.v-enter-to</span> &#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p><strong style="color:#DD5145">移除</strong>keyCode作为 v-on 的修饰符，同时也不再支持<code>config.keyCodes</code></p></li><li><p><strong style="color:#DD5145">移除</strong><code>v-on.native</code>修饰符</p><ul><li><p>父组件中绑定事件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;my-component</span><br><span class="line">  v-on:close=&quot;handleComponentEvent&quot;</span><br><span class="line">  v-on:click=&quot;handleNativeClickEvent&quot;</span><br><span class="line">/&gt;</span><br></pre></td></tr></table></figure></li><li><p>子组件中声明自定义事件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  export default &#123;</span><br><span class="line">    emits: [&#x27;close&#x27;]</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ul></li><li><p><strong style="color:#DD5145">移除</strong>过滤器（filter）</p><blockquote><p>过滤器虽然这看起来很方便，但它需要一个自定义语法，打破大括号内表达式是 “只是 JavaScript” 的假设，这不仅有学习成本，而且有实现成本！建议用方法调用或计算属性去替换过滤器。</p></blockquote></li><li><p>……</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>vue2</title>
      <link href="/2024/08/01/vue-vue2/"/>
      <url>/2024/08/01/vue-vue2/</url>
      
        <content type="html"><![CDATA[<h1 id="笔记"><a href="#笔记" class="headerlink" title="笔记"></a>笔记</h1><h2 id="脚手架文件结构"><a href="#脚手架文件结构" class="headerlink" title="脚手架文件结构"></a>脚手架文件结构</h2><pre><code>├── node_modules ├── public│   ├── favicon.ico: 页签图标│   └── index.html: 主页面├── src│   ├── assets: 存放静态资源│   │   └── logo.png│   │── component: 存放组件│   │   └── HelloWorld.vue│   │── App.vue: 汇总所有组件│   │── main.js: 入口文件├── .gitignore: git版本管制忽略的配置├── babel.config.js: babel的配置文件├── package.json: 应用包配置文件 ├── README.md: 应用描述文件├── package-lock.json：包版本控制文件</code></pre><h2 id="关于不同版本的Vue"><a href="#关于不同版本的Vue" class="headerlink" title="关于不同版本的Vue"></a>关于不同版本的Vue</h2><ol><li>vue.js与vue.runtime.xxx.js的区别：<ol><li>vue.js是完整版的Vue，包含：核心功能 + 模板解析器。</li><li>vue.runtime.xxx.js是运行版的Vue，只包含：核心功能；没有模板解析器。</li></ol></li><li>因为vue.runtime.xxx.js没有模板解析器，所以不能使用template这个配置项，需要使用render函数接收到的createElement函数去指定具体内容。</li></ol><h2 id="vue-config-js配置文件"><a href="#vue-config-js配置文件" class="headerlink" title="vue.config.js配置文件"></a>vue.config.js配置文件</h2><ol><li>使用vue inspect &gt; output.js可以查看到Vue脚手架的默认配置。</li><li>使用vue.config.js可以对脚手架进行个性化定制，详情见：<a href="https://cli.vuejs.org/zh">https://cli.vuejs.org/zh</a></li></ol><h2 id="ref属性"><a href="#ref属性" class="headerlink" title="ref属性"></a>ref属性</h2><ol><li>被用来给元素或子组件注册引用信息（id的替代者）</li><li>应用在html标签上获取的是真实DOM元素，应用在组件标签上是组件实例对象（vc）</li><li>使用方式：<ol><li>打标识：<code>&lt;h1 ref=&quot;xxx&quot;&gt;.....&lt;/h1&gt;</code> 或 <code>&lt;School ref=&quot;xxx&quot;&gt;&lt;/School&gt;</code></li><li>获取：<code>this.$refs.xxx</code></li></ol></li></ol><h2 id="props配置项"><a href="#props配置项" class="headerlink" title="props配置项"></a>props配置项</h2><ol><li><p>功能：让组件接收外部传过来的数据</p></li><li><p>传递数据：<code>&lt;Demo name=&quot;xxx&quot;/&gt;</code></p></li><li><p>接收数据：</p><ol><li><p>第一种方式（只接收）：<code>props:[&#39;name&#39;]</code></p></li><li><p>第二种方式（限制类型）：<code>props:&#123;name:String&#125;</code></p></li><li><p>第三种方式（限制类型、限制必要性、指定默认值）：</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">props</span>:&#123;</span><br><span class="line"><span class="attr">name</span>:&#123;</span><br><span class="line"><span class="attr">type</span>:<span class="title class_">String</span>, <span class="comment">//类型</span></span><br><span class="line"><span class="attr">required</span>:<span class="literal">true</span>, <span class="comment">//必要性</span></span><br><span class="line"><span class="attr">default</span>:<span class="string">&#x27;老王&#x27;</span> <span class="comment">//默认值</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>备注：props是只读的，Vue底层会监测你对props的修改，如果进行了修改，就会发出警告，若业务需求确实需要修改，那么请复制props的内容到data中一份，然后去修改data中的数据。</p></blockquote></li></ol></li></ol><h2 id="mixin-混入"><a href="#mixin-混入" class="headerlink" title="mixin(混入)"></a>mixin(混入)</h2><ol><li><p>功能：可以把多个组件共用的配置提取成一个混入对象</p></li><li><p>使用方式：</p><p> 第一步定义混合：</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    data()&#123;....&#125;,</span><br><span class="line">    methods:&#123;....&#125;</span><br><span class="line">    ....</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 第二步使用混入：</p><p> ​    全局混入：<code>Vue.mixin(xxx)</code><br> ​    局部混入：<code>mixins:[&#39;xxx&#39;]</code></p></li></ol><h2 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h2><ol><li><p>功能：用于增强Vue</p></li><li><p>本质：包含install方法的一个对象，install的第一个参数是Vue，第二个以后的参数是插件使用者传递的数据。</p></li><li><p>定义插件：</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">对象.<span class="property">install</span> = <span class="keyword">function</span> (<span class="params">Vue, options</span>) &#123;</span><br><span class="line">    <span class="comment">// 1. 添加全局过滤器</span></span><br><span class="line">    <span class="title class_">Vue</span>.<span class="title function_">filter</span>(....)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2. 添加全局指令</span></span><br><span class="line">    <span class="title class_">Vue</span>.<span class="title function_">directive</span>(....)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3. 配置全局混入(合)</span></span><br><span class="line">    <span class="title class_">Vue</span>.<span class="title function_">mixin</span>(....)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 4. 添加实例方法</span></span><br><span class="line">    <span class="title class_">Vue</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">$myMethod</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;...&#125;</span><br><span class="line">    <span class="title class_">Vue</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">$myProperty</span> = xxxx</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>使用插件：<code>Vue.use()</code></p></li></ol><h2 id="scoped样式"><a href="#scoped样式" class="headerlink" title="scoped样式"></a>scoped样式</h2><ol><li>作用：让样式在局部生效，防止冲突。</li><li>写法：<code>&lt;style scoped&gt;</code></li></ol><h2 id="总结TodoList案例"><a href="#总结TodoList案例" class="headerlink" title="总结TodoList案例"></a>总结TodoList案例</h2><ol><li><p>组件化编码流程：</p><p> ​    (1).拆分静态组件：组件要按照功能点拆分，命名不要与html元素冲突。</p><p> ​    (2).实现动态组件：考虑好数据的存放位置，数据是一个组件在用，还是一些组件在用：</p><p> ​            1).一个组件在用：放在组件自身即可。</p><p> ​            2). 一些组件在用：放在他们共同的父组件上（<span style="color:red">状态提升</span>）。</p><p> ​    (3).实现交互：从绑定事件开始。</p></li><li><p>props适用于：</p><p> ​    (1).父组件 ==&gt; 子组件 通信</p><p> ​    (2).子组件 ==&gt; 父组件 通信（要求父先给子一个函数）</p></li><li><p>使用v-model时要切记：v-model绑定的值不能是props传过来的值，因为props是不可以修改的！</p></li><li><p>props传过来的若是对象类型的值，修改对象中的属性时Vue不会报错，但不推荐这样做。</p></li></ol><h2 id="webStorage"><a href="#webStorage" class="headerlink" title="webStorage"></a>webStorage</h2><ol><li><p>存储内容大小一般支持5MB左右（不同浏览器可能还不一样）</p></li><li><p>浏览器端通过 Window.sessionStorage 和 Window.localStorage 属性来实现本地存储机制。</p></li><li><p>相关API：</p><ol><li><p><code>xxxxxStorage.setItem(&#39;key&#39;, &#39;value&#39;);</code></p><pre><code>             该方法接受一个键和值作为参数，会把键值对添加到存储中，如果键名存在，则更新其对应的值。</code></pre></li><li><p><code>xxxxxStorage.getItem(&#39;person&#39;);</code></p><p> ​        该方法接受一个键名作为参数，返回键名对应的值。</p></li><li><p><code>xxxxxStorage.removeItem(&#39;key&#39;);</code></p><p> ​        该方法接受一个键名作为参数，并把该键名从存储中删除。</p></li><li><p><code>xxxxxStorage.clear()</code></p><p> ​        该方法会清空存储中的所有数据。</p></li></ol></li><li><p>备注：</p><ol><li>SessionStorage存储的内容会随着浏览器窗口关闭而消失。</li><li>LocalStorage存储的内容，需要手动清除才会消失。</li><li><code>xxxxxStorage.getItem(xxx)</code>如果xxx对应的value获取不到，那么getItem的返回值是null。</li><li><code>JSON.parse(null)</code>的结果依然是null。</li></ol></li></ol><h2 id="组件的自定义事件"><a href="#组件的自定义事件" class="headerlink" title="组件的自定义事件"></a>组件的自定义事件</h2><ol><li><p>一种组件间通信的方式，适用于：<strong style="color:red">子组件 ===&gt; 父组件</strong></p></li><li><p>使用场景：A是父组件，B是子组件，B想给A传数据，那么就要在A中给B绑定自定义事件（<span style="color:red">事件的回调在A中</span>）。</p></li><li><p>绑定自定义事件：</p><ol><li><p>第一种方式，在父组件中：<code>&lt;Demo @atguigu=&quot;test&quot;/&gt;</code>  或 <code>&lt;Demo v-on:atguigu=&quot;test&quot;/&gt;</code></p></li><li><p>第二种方式，在父组件中：</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="title class_">Demo</span> ref=<span class="string">&quot;demo&quot;</span>/&gt;</span><br><span class="line">......</span><br><span class="line"><span class="title function_">mounted</span>(<span class="params"></span>)&#123;</span><br><span class="line">   <span class="variable language_">this</span>.<span class="property">$refs</span>.<span class="property">xxx</span>.$on(<span class="string">&#x27;atguigu&#x27;</span>,<span class="variable language_">this</span>.<span class="property">test</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>若想让自定义事件只能触发一次，可以使用<code>once</code>修饰符，或<code>$once</code>方法。</p></li></ol></li><li><p>触发自定义事件：<code>this.$emit(&#39;atguigu&#39;,数据)</code>        </p></li><li><p>解绑自定义事件<code>this.$off(&#39;atguigu&#39;)</code></p></li><li><p>组件上也可以绑定原生DOM事件，需要使用<code>native</code>修饰符。</p></li><li><p>注意：通过<code>this.$refs.xxx.$on(&#39;atguigu&#39;,回调)</code>绑定自定义事件时，回调<span style="color:red">要么配置在methods中</span>，<span style="color:red">要么用箭头函数</span>，否则this指向会出问题！</p></li></ol><h2 id="全局事件总线（GlobalEventBus）"><a href="#全局事件总线（GlobalEventBus）" class="headerlink" title="全局事件总线（GlobalEventBus）"></a>全局事件总线（GlobalEventBus）</h2><ol><li><p>一种组件间通信的方式，适用于<span style="color:red">任意组件间通信</span>。</p></li><li><p>安装全局事件总线：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">......</span><br><span class="line"><span class="title function_">beforeCreate</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="title class_">Vue</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">$bus</span> = <span class="variable language_">this</span> <span class="comment">//安装全局事件总线，$bus就是当前应用的vm</span></span><br><span class="line">&#125;,</span><br><span class="line">    ......</span><br><span class="line">&#125;) </span><br></pre></td></tr></table></figure></li><li><p>使用事件总线：</p><ol><li><p>接收数据：A组件想接收数据，则在A组件中给$bus绑定自定义事件，事件的<span style="color:red">回调留在A组件自身。</span></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">methods</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="title function_">demo</span>(<span class="params">data</span>)&#123;......&#125;</span><br><span class="line">&#125;</span><br><span class="line">......</span><br><span class="line"><span class="title function_">mounted</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">$bus</span>.$on(<span class="string">&#x27;xxxx&#x27;</span>,<span class="variable language_">this</span>.<span class="property">demo</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>提供数据：<code>this.$bus.$emit(&#39;xxxx&#39;,数据)</code></p></li></ol></li><li><p>最好在beforeDestroy钩子中，用$off去解绑<span style="color:red">当前组件所用到的</span>事件。</p></li></ol><h2 id="消息订阅与发布（pubsub）"><a href="#消息订阅与发布（pubsub）" class="headerlink" title="消息订阅与发布（pubsub）"></a>消息订阅与发布（pubsub）</h2><ol><li><p>一种组件间通信的方式，适用于<span style="color:red">任意组件间通信</span>。</p></li><li><p>使用步骤：</p><ol><li><p>安装pubsub：<code>npm i pubsub-js</code></p></li><li><p>引入: <code>import pubsub from &#39;pubsub-js&#39;</code></p></li><li><p>接收数据：A组件想接收数据，则在A组件中订阅消息，订阅的<span style="color:red">回调留在A组件自身。</span></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">methods</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="title function_">demo</span>(<span class="params">data</span>)&#123;......&#125;</span><br><span class="line">&#125;</span><br><span class="line">......</span><br><span class="line"><span class="title function_">mounted</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">pid</span> = pubsub.<span class="title function_">subscribe</span>(<span class="string">&#x27;xxx&#x27;</span>,<span class="variable language_">this</span>.<span class="property">demo</span>) <span class="comment">//订阅消息</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>提供数据：<code>pubsub.publish(&#39;xxx&#39;,数据)</code></p></li><li><p>最好在beforeDestroy钩子中，用<code>PubSub.unsubscribe(pid)</code>去<span style="color:red">取消订阅。</span></p></li></ol></li></ol><h2 id="nextTick"><a href="#nextTick" class="headerlink" title="nextTick"></a>nextTick</h2><ol><li>语法：<code>this.$nextTick(回调函数)</code></li><li>作用：在下一次 DOM 更新结束后执行其指定的回调。</li><li>什么时候用：当改变数据后，要基于更新后的新DOM进行某些操作时，要在nextTick所指定的回调函数中执行。</li></ol><h2 id="Vue封装的过度与动画"><a href="#Vue封装的过度与动画" class="headerlink" title="Vue封装的过度与动画"></a>Vue封装的过度与动画</h2><ol><li><p>作用：在插入、更新或移除 DOM元素时，在合适的时候给元素添加样式类名。</p></li><li><p>图示：<img src="https://img04.sogoucdn.com/app/a/100520146/5990c1dff7dc7a8fb3b34b4462bd0105" style="width:60%" /></p></li><li><p>写法：</p><ol><li><p>准备好样式：</p><ul><li>元素进入的样式：<ol><li>v-enter：进入的起点</li><li>v-enter-active：进入过程中</li><li>v-enter-to：进入的终点</li></ol></li><li>元素离开的样式：<ol><li>v-leave：离开的起点</li><li>v-leave-active：离开过程中</li><li>v-leave-to：离开的终点</li></ol></li></ul></li><li><p>使用<code>&lt;transition&gt;</code>包裹要过度的元素，并配置name属性：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;transition name=&quot;hello&quot;&gt;</span><br><span class="line">&lt;h1 v-show=&quot;isShow&quot;&gt;你好啊！&lt;/h1&gt;</span><br><span class="line">&lt;/transition&gt;</span><br></pre></td></tr></table></figure></li><li><p>备注：若有多个元素需要过度，则需要使用：<code>&lt;transition-group&gt;</code>，且每个元素都要指定<code>key</code>值。</p></li></ol></li></ol><h2 id="vue脚手架配置代理"><a href="#vue脚手架配置代理" class="headerlink" title="vue脚手架配置代理"></a>vue脚手架配置代理</h2><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><p>​    在vue.config.js中添加如下配置：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">devServer</span>:&#123;</span><br><span class="line">  <span class="attr">proxy</span>:<span class="string">&quot;http://localhost:5000&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>说明：</p><ol><li>优点：配置简单，请求资源时直接发给前端（8080）即可。</li><li>缺点：不能配置多个代理，不能灵活的控制请求是否走代理。</li><li>工作方式：若按照上述配置代理，当请求了前端不存在的资源时，那么该请求会转发给服务器 （优先匹配前端资源）</li></ol><h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><p>​    编写vue.config.js配置具体代理规则：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line"><span class="attr">devServer</span>: &#123;</span><br><span class="line">      <span class="attr">proxy</span>: &#123;</span><br><span class="line">      <span class="string">&#x27;/api1&#x27;</span>: &#123;<span class="comment">// 匹配所有以 &#x27;/api1&#x27;开头的请求路径</span></span><br><span class="line">        <span class="attr">target</span>: <span class="string">&#x27;http://localhost:5000&#x27;</span>,<span class="comment">// 代理目标的基础路径</span></span><br><span class="line">        <span class="attr">changeOrigin</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">pathRewrite</span>: &#123;<span class="string">&#x27;^/api1&#x27;</span>: <span class="string">&#x27;&#x27;</span>&#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">&#x27;/api2&#x27;</span>: &#123;<span class="comment">// 匹配所有以 &#x27;/api2&#x27;开头的请求路径</span></span><br><span class="line">        <span class="attr">target</span>: <span class="string">&#x27;http://localhost:5001&#x27;</span>,<span class="comment">// 代理目标的基础路径</span></span><br><span class="line">        <span class="attr">changeOrigin</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">pathRewrite</span>: &#123;<span class="string">&#x27;^/api2&#x27;</span>: <span class="string">&#x27;&#x27;</span>&#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">   changeOrigin设置为true时，服务器收到的请求头中的host为：localhost:5000</span></span><br><span class="line"><span class="comment">   changeOrigin设置为false时，服务器收到的请求头中的host为：localhost:8080</span></span><br><span class="line"><span class="comment">   changeOrigin默认值为true</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>说明：</p><ol><li>优点：可以配置多个代理，且可以灵活的控制请求是否走代理。</li><li>缺点：配置略微繁琐，请求资源时必须加前缀。</li></ol><h2 id="插槽"><a href="#插槽" class="headerlink" title="插槽"></a>插槽</h2><ol><li><p>作用：让父组件可以向子组件指定位置插入html结构，也是一种组件间通信的方式，适用于 <strong style="color:red">父组件 ===&gt; 子组件</strong> 。</p></li><li><p>分类：默认插槽、具名插槽、作用域插槽</p></li><li><p>使用方式：</p><ol><li><p>默认插槽：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">父组件中：</span><br><span class="line">        &lt;Category&gt;</span><br><span class="line">           &lt;div&gt;html结构1&lt;/div&gt;</span><br><span class="line">        &lt;/Category&gt;</span><br><span class="line">子组件中：</span><br><span class="line">        &lt;template&gt;</span><br><span class="line">            &lt;div&gt;</span><br><span class="line">               &lt;!-- 定义插槽 --&gt;</span><br><span class="line">               &lt;slot&gt;插槽默认内容...&lt;/slot&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/template&gt;</span><br></pre></td></tr></table></figure></li><li><p>具名插槽：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">父组件中：</span><br><span class="line">        &lt;Category&gt;</span><br><span class="line">            &lt;template slot=&quot;center&quot;&gt;</span><br><span class="line">              &lt;div&gt;html结构1&lt;/div&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line"></span><br><span class="line">            &lt;template v-slot:footer&gt;</span><br><span class="line">               &lt;div&gt;html结构2&lt;/div&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">        &lt;/Category&gt;</span><br><span class="line">子组件中：</span><br><span class="line">        &lt;template&gt;</span><br><span class="line">            &lt;div&gt;</span><br><span class="line">               &lt;!-- 定义插槽 --&gt;</span><br><span class="line">               &lt;slot name=&quot;center&quot;&gt;插槽默认内容...&lt;/slot&gt;</span><br><span class="line">               &lt;slot name=&quot;footer&quot;&gt;插槽默认内容...&lt;/slot&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/template&gt;</span><br></pre></td></tr></table></figure></li><li><p>作用域插槽：</p><ol><li><p>理解：<span style="color:red">数据在组件的自身，但根据数据生成的结构需要组件的使用者来决定。</span>（games数据在Category组件中，但使用数据所遍历出来的结构由App组件决定）</p></li><li><p>具体编码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">父组件中：</span><br><span class="line">&lt;Category&gt;</span><br><span class="line">&lt;template scope=&quot;scopeData&quot;&gt;</span><br><span class="line">&lt;!-- 生成的是ul列表 --&gt;</span><br><span class="line">&lt;ul&gt;</span><br><span class="line">&lt;li v-for=&quot;g in scopeData.games&quot; :key=&quot;g&quot;&gt;&#123;&#123;g&#125;&#125;&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;/Category&gt;</span><br><span class="line"></span><br><span class="line">&lt;Category&gt;</span><br><span class="line">&lt;template slot-scope=&quot;scopeData&quot;&gt;</span><br><span class="line">&lt;!-- 生成的是h4标题 --&gt;</span><br><span class="line">&lt;h4 v-for=&quot;g in scopeData.games&quot; :key=&quot;g&quot;&gt;&#123;&#123;g&#125;&#125;&lt;/h4&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;/Category&gt;</span><br><span class="line">子组件中：</span><br><span class="line">        &lt;template&gt;</span><br><span class="line">            &lt;div&gt;</span><br><span class="line">                &lt;slot :games=&quot;games&quot;&gt;&lt;/slot&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/template&gt;</span><br><span class="line"></span><br><span class="line">        &lt;script&gt;</span><br><span class="line">            export default &#123;</span><br><span class="line">                name:&#x27;Category&#x27;,</span><br><span class="line">                props:[&#x27;title&#x27;],</span><br><span class="line">                //数据在子组件自身</span><br><span class="line">                data() &#123;</span><br><span class="line">                    return &#123;</span><br><span class="line">                        games:[&#x27;红色警戒&#x27;,&#x27;穿越火线&#x27;,&#x27;劲舞团&#x27;,&#x27;超级玛丽&#x27;]</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;</span><br><span class="line">        &lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">   </span><br></pre></td></tr></table></figure></li></ol></li></ol></li></ol><h2 id="Vuex"><a href="#Vuex" class="headerlink" title="Vuex"></a>Vuex</h2><h3 id="1-概念"><a href="#1-概念" class="headerlink" title="1.概念"></a>1.概念</h3><p>​        在Vue中实现集中式状态（数据）管理的一个Vue插件，对vue应用中多个组件的共享状态进行集中式的管理（读/写），也是一种组件间通信的方式，且适用于任意组件间通信。</p><h3 id="2-何时使用？"><a href="#2-何时使用？" class="headerlink" title="2.何时使用？"></a>2.何时使用？</h3><p>​        多个组件需要共享数据时</p><h3 id="3-搭建vuex环境"><a href="#3-搭建vuex环境" class="headerlink" title="3.搭建vuex环境"></a>3.搭建vuex环境</h3><ol><li><p>创建文件：<code>src/store/index.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//引入Vue核心库</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="comment">//引入Vuex</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Vuex</span> <span class="keyword">from</span> <span class="string">&#x27;vuex&#x27;</span></span><br><span class="line"><span class="comment">//应用Vuex插件</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">Vuex</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//准备actions对象——响应组件中用户的动作</span></span><br><span class="line"><span class="keyword">const</span> actions = &#123;&#125;</span><br><span class="line"><span class="comment">//准备mutations对象——修改state中的数据</span></span><br><span class="line"><span class="keyword">const</span> mutations = &#123;&#125;</span><br><span class="line"><span class="comment">//准备state对象——保存具体的数据</span></span><br><span class="line"><span class="keyword">const</span> state = &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建并暴露store</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> <span class="title class_">Vuex</span>.<span class="title class_">Store</span>(&#123;</span><br><span class="line">actions,</span><br><span class="line">mutations,</span><br><span class="line">state</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>在<code>main.js</code>中创建vm时传入<code>store</code>配置项</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">......</span><br><span class="line"><span class="comment">//引入store</span></span><br><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">&#x27;./store&#x27;</span></span><br><span class="line">......</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建vm</span></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line"><span class="attr">el</span>:<span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line"><span class="attr">render</span>: <span class="function"><span class="params">h</span> =&gt;</span> <span class="title function_">h</span>(<span class="title class_">App</span>),</span><br><span class="line">store</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ol><h3 id="4-基本使用"><a href="#4-基本使用" class="headerlink" title="4.基本使用"></a>4.基本使用</h3><ol><li><p>初始化数据、配置<code>actions</code>、配置<code>mutations</code>，操作文件<code>store.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//引入Vue核心库</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="comment">//引入Vuex</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Vuex</span> <span class="keyword">from</span> <span class="string">&#x27;vuex&#x27;</span></span><br><span class="line"><span class="comment">//引用Vuex</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">Vuex</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> actions = &#123;</span><br><span class="line">    <span class="comment">//响应组件中加的动作</span></span><br><span class="line"><span class="title function_">jia</span>(<span class="params">context,value</span>)&#123;</span><br><span class="line"><span class="comment">// console.log(&#x27;actions中的jia被调用了&#x27;,miniStore,value)</span></span><br><span class="line">context.<span class="title function_">commit</span>(<span class="string">&#x27;JIA&#x27;</span>,value)</span><br><span class="line">&#125;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> mutations = &#123;</span><br><span class="line">    <span class="comment">//执行加</span></span><br><span class="line"><span class="title function_">JIA</span>(<span class="params">state,value</span>)&#123;</span><br><span class="line"><span class="comment">// console.log(&#x27;mutations中的JIA被调用了&#x27;,state,value)</span></span><br><span class="line">state.<span class="property">sum</span> += value</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化数据</span></span><br><span class="line"><span class="keyword">const</span> state = &#123;</span><br><span class="line">   <span class="attr">sum</span>:<span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建并暴露store</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> <span class="title class_">Vuex</span>.<span class="title class_">Store</span>(&#123;</span><br><span class="line">actions,</span><br><span class="line">mutations,</span><br><span class="line">state,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>组件中读取vuex中的数据：<code>$store.state.sum</code></p></li><li><p>组件中修改vuex中的数据：<code>$store.dispatch(&#39;action中的方法名&#39;,数据)</code> 或 <code>$store.commit(&#39;mutations中的方法名&#39;,数据)</code></p><blockquote><p> 备注：若没有网络请求或其他业务逻辑，组件中也可以越过actions，即不写<code>dispatch</code>，直接编写<code>commit</code></p></blockquote></li></ol><h3 id="5-getters的使用"><a href="#5-getters的使用" class="headerlink" title="5.getters的使用"></a>5.getters的使用</h3><ol><li><p>概念：当state中的数据需要经过加工后再使用时，可以使用getters加工。</p></li><li><p>在<code>store.js</code>中追加<code>getters</code>配置</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">......</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> getters = &#123;</span><br><span class="line"><span class="title function_">bigSum</span>(<span class="params">state</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> state.<span class="property">sum</span> * <span class="number">10</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建并暴露store</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> <span class="title class_">Vuex</span>.<span class="title class_">Store</span>(&#123;</span><br><span class="line">......</span><br><span class="line">getters</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>组件中读取数据：<code>$store.getters.bigSum</code></p></li></ol><h3 id="6-四个map方法的使用"><a href="#6-四个map方法的使用" class="headerlink" title="6.四个map方法的使用"></a>6.四个map方法的使用</h3><ol><li><p><strong>mapState方法：</strong>用于帮助我们映射<code>state</code>中的数据为计算属性</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">computed</span>: &#123;</span><br><span class="line">    <span class="comment">//借助mapState生成计算属性：sum、school、subject（对象写法）</span></span><br><span class="line">     ...<span class="title function_">mapState</span>(&#123;<span class="attr">sum</span>:<span class="string">&#x27;sum&#x27;</span>,<span class="attr">school</span>:<span class="string">&#x27;school&#x27;</span>,<span class="attr">subject</span>:<span class="string">&#x27;subject&#x27;</span>&#125;),</span><br><span class="line">         </span><br><span class="line">    <span class="comment">//借助mapState生成计算属性：sum、school、subject（数组写法）</span></span><br><span class="line">    ...<span class="title function_">mapState</span>([<span class="string">&#x27;sum&#x27;</span>,<span class="string">&#x27;school&#x27;</span>,<span class="string">&#x27;subject&#x27;</span>]),</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure></li><li><p><strong>mapGetters方法：</strong>用于帮助我们映射<code>getters</code>中的数据为计算属性</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">computed</span>: &#123;</span><br><span class="line">    <span class="comment">//借助mapGetters生成计算属性：bigSum（对象写法）</span></span><br><span class="line">    ...<span class="title function_">mapGetters</span>(&#123;<span class="attr">bigSum</span>:<span class="string">&#x27;bigSum&#x27;</span>&#125;),</span><br><span class="line"></span><br><span class="line">    <span class="comment">//借助mapGetters生成计算属性：bigSum（数组写法）</span></span><br><span class="line">    ...<span class="title function_">mapGetters</span>([<span class="string">&#x27;bigSum&#x27;</span>])</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure></li><li><p><strong>mapActions方法：</strong>用于帮助我们生成与<code>actions</code>对话的方法，即：包含<code>$store.dispatch(xxx)</code>的函数</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">methods</span>:&#123;</span><br><span class="line">    <span class="comment">//靠mapActions生成：incrementOdd、incrementWait（对象形式）</span></span><br><span class="line">    ...<span class="title function_">mapActions</span>(&#123;<span class="attr">incrementOdd</span>:<span class="string">&#x27;jiaOdd&#x27;</span>,<span class="attr">incrementWait</span>:<span class="string">&#x27;jiaWait&#x27;</span>&#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//靠mapActions生成：incrementOdd、incrementWait（数组形式）</span></span><br><span class="line">    ...<span class="title function_">mapActions</span>([<span class="string">&#x27;jiaOdd&#x27;</span>,<span class="string">&#x27;jiaWait&#x27;</span>])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>mapMutations方法：</strong>用于帮助我们生成与<code>mutations</code>对话的方法，即：包含<code>$store.commit(xxx)</code>的函数</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">methods</span>:&#123;</span><br><span class="line">    <span class="comment">//靠mapActions生成：increment、decrement（对象形式）</span></span><br><span class="line">    ...<span class="title function_">mapMutations</span>(&#123;<span class="attr">increment</span>:<span class="string">&#x27;JIA&#x27;</span>,<span class="attr">decrement</span>:<span class="string">&#x27;JIAN&#x27;</span>&#125;),</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//靠mapMutations生成：JIA、JIAN（对象形式）</span></span><br><span class="line">    ...<span class="title function_">mapMutations</span>([<span class="string">&#x27;JIA&#x27;</span>,<span class="string">&#x27;JIAN&#x27;</span>]),</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><blockquote><p>备注：mapActions与mapMutations使用时，若需要传递参数需要：在模板中绑定事件时传递好参数，否则参数是事件对象。</p></blockquote><h3 id="7-模块化-命名空间"><a href="#7-模块化-命名空间" class="headerlink" title="7.模块化+命名空间"></a>7.模块化+命名空间</h3><ol><li><p>目的：让代码更好维护，让多种数据分类更加明确。</p></li><li><p>修改<code>store.js</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> countAbout = &#123;</span><br><span class="line">  <span class="attr">namespaced</span>:<span class="literal">true</span>,<span class="comment">//开启命名空间</span></span><br><span class="line">  <span class="attr">state</span>:&#123;<span class="attr">x</span>:<span class="number">1</span>&#125;,</span><br><span class="line">  <span class="attr">mutations</span>: &#123; ... &#125;,</span><br><span class="line">  <span class="attr">actions</span>: &#123; ... &#125;,</span><br><span class="line">  <span class="attr">getters</span>: &#123;</span><br><span class="line">    <span class="title function_">bigSum</span>(<span class="params">state</span>)&#123;</span><br><span class="line">       <span class="keyword">return</span> state.<span class="property">sum</span> * <span class="number">10</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> personAbout = &#123;</span><br><span class="line">  <span class="attr">namespaced</span>:<span class="literal">true</span>,<span class="comment">//开启命名空间</span></span><br><span class="line">  <span class="attr">state</span>:&#123; ... &#125;,</span><br><span class="line">  <span class="attr">mutations</span>: &#123; ... &#125;,</span><br><span class="line">  <span class="attr">actions</span>: &#123; ... &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> store = <span class="keyword">new</span> <span class="title class_">Vuex</span>.<span class="title class_">Store</span>(&#123;</span><br><span class="line">  <span class="attr">modules</span>: &#123;</span><br><span class="line">    countAbout,</span><br><span class="line">    personAbout</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>开启命名空间后，组件中读取state数据：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//方式一：自己直接读取</span></span><br><span class="line"><span class="variable language_">this</span>.<span class="property">$store</span>.<span class="property">state</span>.<span class="property">personAbout</span>.<span class="property">list</span></span><br><span class="line"><span class="comment">//方式二：借助mapState读取：</span></span><br><span class="line">...<span class="title function_">mapState</span>(<span class="string">&#x27;countAbout&#x27;</span>,[<span class="string">&#x27;sum&#x27;</span>,<span class="string">&#x27;school&#x27;</span>,<span class="string">&#x27;subject&#x27;</span>]),</span><br></pre></td></tr></table></figure></li><li><p>开启命名空间后，组件中读取getters数据：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//方式一：自己直接读取</span></span><br><span class="line"><span class="variable language_">this</span>.<span class="property">$store</span>.<span class="property">getters</span>[<span class="string">&#x27;personAbout/firstPersonName&#x27;</span>]</span><br><span class="line"><span class="comment">//方式二：借助mapGetters读取：</span></span><br><span class="line">...<span class="title function_">mapGetters</span>(<span class="string">&#x27;countAbout&#x27;</span>,[<span class="string">&#x27;bigSum&#x27;</span>])</span><br></pre></td></tr></table></figure></li><li><p>开启命名空间后，组件中调用dispatch</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//方式一：自己直接dispatch</span></span><br><span class="line"><span class="variable language_">this</span>.<span class="property">$store</span>.<span class="title function_">dispatch</span>(<span class="string">&#x27;personAbout/addPersonWang&#x27;</span>,person)</span><br><span class="line"><span class="comment">//方式二：借助mapActions：</span></span><br><span class="line">...<span class="title function_">mapActions</span>(<span class="string">&#x27;countAbout&#x27;</span>,&#123;<span class="attr">incrementOdd</span>:<span class="string">&#x27;jiaOdd&#x27;</span>,<span class="attr">incrementWait</span>:<span class="string">&#x27;jiaWait&#x27;</span>&#125;)</span><br></pre></td></tr></table></figure></li><li><p>开启命名空间后，组件中调用commit</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//方式一：自己直接commit</span></span><br><span class="line"><span class="variable language_">this</span>.<span class="property">$store</span>.<span class="title function_">commit</span>(<span class="string">&#x27;personAbout/ADD_PERSON&#x27;</span>,person)</span><br><span class="line"><span class="comment">//方式二：借助mapMutations：</span></span><br><span class="line">...<span class="title function_">mapMutations</span>(<span class="string">&#x27;countAbout&#x27;</span>,&#123;<span class="attr">increment</span>:<span class="string">&#x27;JIA&#x27;</span>,<span class="attr">decrement</span>:<span class="string">&#x27;JIAN&#x27;</span>&#125;),</span><br></pre></td></tr></table></figure><h2 id="路由"><a href="#路由" class="headerlink" title="路由"></a>路由</h2></li><li><p>理解： 一个路由（route）就是一组映射关系（key - value），多个路由需要路由器（router）进行管理。</p></li><li>前端路由：key是路径，value是组件。</li></ol><h3 id="1-基本使用"><a href="#1-基本使用" class="headerlink" title="1.基本使用"></a>1.基本使用</h3><ol><li><p>安装vue-router，命令：<code>npm i vue-router</code></p></li><li><p>应用插件：<code>Vue.use(VueRouter)</code></p></li><li><p>编写router配置项:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//引入VueRouter</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">VueRouter</span> <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"><span class="comment">//引入Luyou 组件</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">About</span> <span class="keyword">from</span> <span class="string">&#x27;../components/About&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Home</span> <span class="keyword">from</span> <span class="string">&#x27;../components/Home&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//创建router实例对象，去管理一组一组的路由规则</span></span><br><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> <span class="title class_">VueRouter</span>(&#123;</span><br><span class="line"><span class="attr">routes</span>:[</span><br><span class="line">&#123;</span><br><span class="line"><span class="attr">path</span>:<span class="string">&#x27;/about&#x27;</span>,</span><br><span class="line"><span class="attr">component</span>:<span class="title class_">About</span></span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line"><span class="attr">path</span>:<span class="string">&#x27;/home&#x27;</span>,</span><br><span class="line"><span class="attr">component</span>:<span class="title class_">Home</span></span><br><span class="line">&#125;</span><br><span class="line">]</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//暴露router</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure></li><li><p>实现切换（active-class可配置高亮样式）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;router-link active-class=&quot;active&quot; to=&quot;/about&quot;&gt;About&lt;/router-link&gt;</span><br></pre></td></tr></table></figure></li><li><p>指定展示位置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;router-view&gt;&lt;/router-view&gt;</span><br></pre></td></tr></table></figure></li></ol><h3 id="2-几个注意点"><a href="#2-几个注意点" class="headerlink" title="2.几个注意点"></a>2.几个注意点</h3><ol><li>路由组件通常存放在<code>pages</code>文件夹，一般组件通常存放在<code>components</code>文件夹。</li><li>通过切换，“隐藏”了的路由组件，默认是被销毁掉的，需要的时候再去挂载。</li><li>每个组件都有自己的<code>$route</code>属性，里面存储着自己的路由信息。</li><li>整个应用只有一个router，可以通过组件的<code>$router</code>属性获取到。</li></ol><h3 id="3-多级路由（多级路由）"><a href="#3-多级路由（多级路由）" class="headerlink" title="3.多级路由（多级路由）"></a>3.多级路由（多级路由）</h3><ol><li><p>配置路由规则，使用children配置项：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">routes</span>:[</span><br><span class="line">&#123;</span><br><span class="line"><span class="attr">path</span>:<span class="string">&#x27;/about&#x27;</span>,</span><br><span class="line"><span class="attr">component</span>:<span class="title class_">About</span>,</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line"><span class="attr">path</span>:<span class="string">&#x27;/home&#x27;</span>,</span><br><span class="line"><span class="attr">component</span>:<span class="title class_">Home</span>,</span><br><span class="line"><span class="attr">children</span>:[ <span class="comment">//通过children配置子级路由</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="attr">path</span>:<span class="string">&#x27;news&#x27;</span>, <span class="comment">//此处一定不要写：/news</span></span><br><span class="line"><span class="attr">component</span>:<span class="title class_">News</span></span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line"><span class="attr">path</span>:<span class="string">&#x27;message&#x27;</span>,<span class="comment">//此处一定不要写：/message</span></span><br><span class="line"><span class="attr">component</span>:<span class="title class_">Message</span></span><br><span class="line">&#125;</span><br><span class="line">]</span><br><span class="line">&#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure></li><li><p>跳转（要写完整路径）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;router-link to=&quot;/home/news&quot;&gt;News&lt;/router-link&gt;</span><br></pre></td></tr></table></figure></li></ol><h3 id="4-路由的query参数"><a href="#4-路由的query参数" class="headerlink" title="4.路由的query参数"></a>4.路由的query参数</h3><ol><li><p>传递参数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 跳转并携带query参数，to的字符串写法 --&gt;</span><br><span class="line">&lt;router-link :to=&quot;/home/message/detail?id=666&amp;title=你好&quot;&gt;跳转&lt;/router-link&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 跳转并携带query参数，to的对象写法 --&gt;</span><br><span class="line">&lt;router-link </span><br><span class="line">:to=&quot;&#123;</span><br><span class="line">path:&#x27;/home/message/detail&#x27;,</span><br><span class="line">query:&#123;</span><br><span class="line">   id:666,</span><br><span class="line">            title:&#x27;你好&#x27;</span><br><span class="line">&#125;</span><br><span class="line">&#125;&quot;</span><br><span class="line">&gt;跳转&lt;/router-link&gt;</span><br></pre></td></tr></table></figure></li><li><p>接收参数：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$route.<span class="property">query</span>.<span class="property">id</span></span><br><span class="line">$route.<span class="property">query</span>.<span class="property">title</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="5-命名路由"><a href="#5-命名路由" class="headerlink" title="5.命名路由"></a>5.命名路由</h3><ol><li><p>作用：可以简化路由的跳转。</p></li><li><p>如何使用</p><ol><li><p>给路由命名：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="attr">path</span>:<span class="string">&#x27;/demo&#x27;</span>,</span><br><span class="line"><span class="attr">component</span>:<span class="title class_">Demo</span>,</span><br><span class="line"><span class="attr">children</span>:[</span><br><span class="line">&#123;</span><br><span class="line"><span class="attr">path</span>:<span class="string">&#x27;test&#x27;</span>,</span><br><span class="line"><span class="attr">component</span>:<span class="title class_">Test</span>,</span><br><span class="line"><span class="attr">children</span>:[</span><br><span class="line">&#123;</span><br><span class="line">                      <span class="attr">name</span>:<span class="string">&#x27;hello&#x27;</span> <span class="comment">//给路由命名</span></span><br><span class="line"><span class="attr">path</span>:<span class="string">&#x27;welcome&#x27;</span>,</span><br><span class="line"><span class="attr">component</span>:<span class="title class_">Hello</span>,</span><br><span class="line">&#125;</span><br><span class="line">]</span><br><span class="line">&#125;</span><br><span class="line">]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>简化跳转：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--简化前，需要写完整的路径 --&gt;</span><br><span class="line">&lt;router-link to=&quot;/demo/test/welcome&quot;&gt;跳转&lt;/router-link&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--简化后，直接通过名字跳转 --&gt;</span><br><span class="line">&lt;router-link :to=&quot;&#123;name:&#x27;hello&#x27;&#125;&quot;&gt;跳转&lt;/router-link&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--简化写法配合传递参数 --&gt;</span><br><span class="line">&lt;router-link </span><br><span class="line">:to=&quot;&#123;</span><br><span class="line">name:&#x27;hello&#x27;,</span><br><span class="line">query:&#123;</span><br><span class="line">   id:666,</span><br><span class="line">            title:&#x27;你好&#x27;</span><br><span class="line">&#125;</span><br><span class="line">&#125;&quot;</span><br><span class="line">&gt;跳转&lt;/router-link&gt;</span><br></pre></td></tr></table></figure></li></ol></li></ol><h3 id="6-路由的params参数"><a href="#6-路由的params参数" class="headerlink" title="6.路由的params参数"></a>6.路由的params参数</h3><ol><li><p>配置路由，声明接收params参数</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="attr">path</span>:<span class="string">&#x27;/home&#x27;</span>,</span><br><span class="line"><span class="attr">component</span>:<span class="title class_">Home</span>,</span><br><span class="line"><span class="attr">children</span>:[</span><br><span class="line">&#123;</span><br><span class="line"><span class="attr">path</span>:<span class="string">&#x27;news&#x27;</span>,</span><br><span class="line"><span class="attr">component</span>:<span class="title class_">News</span></span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line"><span class="attr">component</span>:<span class="title class_">Message</span>,</span><br><span class="line"><span class="attr">children</span>:[</span><br><span class="line">&#123;</span><br><span class="line"><span class="attr">name</span>:<span class="string">&#x27;xiangqing&#x27;</span>,</span><br><span class="line"><span class="attr">path</span>:<span class="string">&#x27;detail/:id/:title&#x27;</span>, <span class="comment">//使用占位符声明接收params参数</span></span><br><span class="line"><span class="attr">component</span>:<span class="title class_">Detail</span></span><br><span class="line">&#125;</span><br><span class="line">]</span><br><span class="line">&#125;</span><br><span class="line">]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>传递参数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 跳转并携带params参数，to的字符串写法 --&gt;</span><br><span class="line">&lt;router-link :to=&quot;/home/message/detail/666/你好&quot;&gt;跳转&lt;/router-link&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 跳转并携带params参数，to的对象写法 --&gt;</span><br><span class="line">&lt;router-link </span><br><span class="line">:to=&quot;&#123;</span><br><span class="line">name:&#x27;xiangqing&#x27;,</span><br><span class="line">params:&#123;</span><br><span class="line">   id:666,</span><br><span class="line">            title:&#x27;你好&#x27;</span><br><span class="line">&#125;</span><br><span class="line">&#125;&quot;</span><br><span class="line">&gt;跳转&lt;/router-link&gt;</span><br></pre></td></tr></table></figure><blockquote><p>特别注意：路由携带params参数时，若使用to的对象写法，则不能使用path配置项，必须使用name配置！</p></blockquote></li><li><p>接收参数：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$route.<span class="property">params</span>.<span class="property">id</span></span><br><span class="line">$route.<span class="property">params</span>.<span class="property">title</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="7-路由的props配置"><a href="#7-路由的props配置" class="headerlink" title="7.路由的props配置"></a>7.路由的props配置</h3><p>​    作用：让路由组件更方便的收到参数</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="attr">name</span>:<span class="string">&#x27;xiangqing&#x27;</span>,</span><br><span class="line"><span class="attr">path</span>:<span class="string">&#x27;detail/:id&#x27;</span>,</span><br><span class="line"><span class="attr">component</span>:<span class="title class_">Detail</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">//第一种写法：props值为对象，该对象中所有的key-value的组合最终都会通过props传给Detail组件</span></span><br><span class="line"><span class="comment">// props:&#123;a:900&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//第二种写法：props值为布尔值，布尔值为true，则把路由收到的所有params参数通过props传给Detail组件</span></span><br><span class="line"><span class="comment">// props:true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//第三种写法：props值为函数，该函数返回的对象中每一组key-value都会通过props传给Detail组件</span></span><br><span class="line"><span class="title function_">props</span>(<span class="params">route</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> &#123;</span><br><span class="line"><span class="attr">id</span>:route.<span class="property">query</span>.<span class="property">id</span>,</span><br><span class="line"><span class="attr">title</span>:route.<span class="property">query</span>.<span class="property">title</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="8-lt-router-link-gt-的replace属性"><a href="#8-lt-router-link-gt-的replace属性" class="headerlink" title="8.&lt;router-link&gt;的replace属性"></a>8.<code>&lt;router-link&gt;</code>的replace属性</h3><ol><li>作用：控制路由跳转时操作浏览器历史记录的模式</li><li>浏览器的历史记录有两种写入方式：分别为<code>push</code>和<code>replace</code>，<code>push</code>是追加历史记录，<code>replace</code>是替换当前记录。路由跳转时候默认为<code>push</code></li><li>如何开启<code>replace</code>模式：<code>&lt;router-link replace .......&gt;News&lt;/router-link&gt;</code></li></ol><h3 id="9-编程式路由导航"><a href="#9-编程式路由导航" class="headerlink" title="9.编程式路由导航"></a>9.编程式路由导航</h3><ol><li><p>作用：不借助<code>&lt;router-link&gt;</code>实现路由跳转，让路由跳转更加灵活</p></li><li><p>具体编码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//$router的两个API</span></span><br><span class="line"><span class="variable language_">this</span>.<span class="property">$router</span>.<span class="title function_">push</span>(&#123;</span><br><span class="line"><span class="attr">name</span>:<span class="string">&#x27;xiangqing&#x27;</span>,</span><br><span class="line"><span class="attr">params</span>:&#123;</span><br><span class="line"><span class="attr">id</span>:xxx,</span><br><span class="line"><span class="attr">title</span>:xxx</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">this</span>.<span class="property">$router</span>.<span class="title function_">replace</span>(&#123;</span><br><span class="line"><span class="attr">name</span>:<span class="string">&#x27;xiangqing&#x27;</span>,</span><br><span class="line"><span class="attr">params</span>:&#123;</span><br><span class="line"><span class="attr">id</span>:xxx,</span><br><span class="line"><span class="attr">title</span>:xxx</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">$router</span>.<span class="title function_">forward</span>() <span class="comment">//前进</span></span><br><span class="line"><span class="variable language_">this</span>.<span class="property">$router</span>.<span class="title function_">back</span>() <span class="comment">//后退</span></span><br><span class="line"><span class="variable language_">this</span>.<span class="property">$router</span>.<span class="title function_">go</span>() <span class="comment">//可前进也可后退</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="10-缓存路由组件"><a href="#10-缓存路由组件" class="headerlink" title="10.缓存路由组件"></a>10.缓存路由组件</h3><ol><li><p>作用：让不展示的路由组件保持挂载，不被销毁。</p></li><li><p>具体编码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;keep-alive include=&quot;News&quot;&gt; </span><br><span class="line">    &lt;router-view&gt;&lt;/router-view&gt;</span><br><span class="line">&lt;/keep-alive&gt;</span><br></pre></td></tr></table></figure></li></ol><h3 id="11-两个新的生命周期钩子"><a href="#11-两个新的生命周期钩子" class="headerlink" title="11.两个新的生命周期钩子"></a>11.两个新的生命周期钩子</h3><ol><li>作用：路由组件所独有的两个钩子，用于捕获路由组件的激活状态。</li><li>具体名字：<ol><li><code>activated</code>路由组件被激活时触发。</li><li><code>deactivated</code>路由组件失活时触发。</li></ol></li></ol><h3 id="12-路由守卫"><a href="#12-路由守卫" class="headerlink" title="12.路由守卫"></a>12.路由守卫</h3><ol><li><p>作用：对路由进行权限控制</p></li><li><p>分类：全局守卫、独享守卫、组件内守卫</p></li><li><p>全局守卫:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//全局前置守卫：初始化时执行、每次路由切换前执行</span></span><br><span class="line">router.<span class="title function_">beforeEach</span>(<span class="function">(<span class="params">to,<span class="keyword">from</span>,next</span>)=&gt;</span>&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;beforeEach&#x27;</span>,to,<span class="keyword">from</span>)</span><br><span class="line"><span class="keyword">if</span>(to.<span class="property">meta</span>.<span class="property">isAuth</span>)&#123; <span class="comment">//判断当前路由是否需要进行权限控制</span></span><br><span class="line"><span class="keyword">if</span>(<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;school&#x27;</span>) === <span class="string">&#x27;atguigu&#x27;</span>)&#123; <span class="comment">//权限控制的具体规则</span></span><br><span class="line"><span class="title function_">next</span>() <span class="comment">//放行</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="title function_">alert</span>(<span class="string">&#x27;暂无权限查看&#x27;</span>)</span><br><span class="line"><span class="comment">// next(&#123;name:&#x27;guanyu&#x27;&#125;)</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="title function_">next</span>() <span class="comment">//放行</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//全局后置守卫：初始化时执行、每次路由切换后执行</span></span><br><span class="line">router.<span class="title function_">afterEach</span>(<span class="function">(<span class="params">to,<span class="keyword">from</span></span>)=&gt;</span>&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;afterEach&#x27;</span>,to,<span class="keyword">from</span>)</span><br><span class="line"><span class="keyword">if</span>(to.<span class="property">meta</span>.<span class="property">title</span>)&#123; </span><br><span class="line"><span class="variable language_">document</span>.<span class="property">title</span> = to.<span class="property">meta</span>.<span class="property">title</span> <span class="comment">//修改网页的title</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable language_">document</span>.<span class="property">title</span> = <span class="string">&#x27;vue_test&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>独享守卫:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">beforeEnter</span>(<span class="params">to,<span class="keyword">from</span>,next</span>)&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;beforeEnter&#x27;</span>,to,<span class="keyword">from</span>)</span><br><span class="line"><span class="keyword">if</span>(to.<span class="property">meta</span>.<span class="property">isAuth</span>)&#123; <span class="comment">//判断当前路由是否需要进行权限控制</span></span><br><span class="line"><span class="keyword">if</span>(<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;school&#x27;</span>) === <span class="string">&#x27;atguigu&#x27;</span>)&#123;</span><br><span class="line"><span class="title function_">next</span>()</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="title function_">alert</span>(<span class="string">&#x27;暂无权限查看&#x27;</span>)</span><br><span class="line"><span class="comment">// next(&#123;name:&#x27;guanyu&#x27;&#125;)</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="title function_">next</span>()</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>组件内守卫：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//进入守卫：通过路由规则，进入该组件时被调用</span></span><br><span class="line">beforeRouteEnter (to, <span class="keyword">from</span>, next) &#123;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">//离开守卫：通过路由规则，离开该组件时被调用</span></span><br><span class="line">beforeRouteLeave (to, <span class="keyword">from</span>, next) &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="13-路由器的两种工作模式"><a href="#13-路由器的两种工作模式" class="headerlink" title="13.路由器的两种工作模式"></a>13.路由器的两种工作模式</h3><ol><li>对于一个url来说，什么是hash值？—— #及其后面的内容就是hash值。</li><li>hash值不会包含在 HTTP 请求中，即：hash值不会带给服务器。</li><li>hash模式：<ol><li>地址中永远带着#号，不美观 。</li><li>若以后将地址通过第三方手机app分享，若app校验严格，则地址会被标记为不合法。</li><li>兼容性较好。</li></ol></li><li>history模式：<ol><li>地址干净，美观 。</li><li>兼容性和hash模式相比略差。</li><li>应用部署上线时需要后端人员支持，解决刷新页面服务端404的问题。</li></ol></li></ol>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>关于</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/custom.css"/>
      <url>/css/custom.css</url>
      
        <content type="html"><![CDATA[:root {  --trans-light: rgba(255, 255, 255, 0.88);  --trans-dark: rgba(25, 25, 25, 0.88);  --border-style: 1px solid rgb(169, 169, 169);  --backdrop-filter: blur(5px) saturate(150%);}/* 页脚与头图透明 */#footer {    background: transparent !important;  }  #page-header {    background: transparent !important;  }    /* 白天模式遮罩透明 */  #footer::before {    background: transparent !important;  }  #page-header::before {    background: transparent !important;  }    /* 夜间模式遮罩透明 */  [data-theme="dark"] #footer::before {    background: transparent !important;  }  [data-theme="dark"] #page-header::before {    background: transparent !important;  }  /* 小冰分类分类磁铁黑夜模式适配 *//* 一般状态 */[data-theme="dark"] .magnet_link_context {  background: #1e1e1e;  color: antiquewhite;}/* 鼠标悬浮状态 */[data-theme="dark"] .magnet_link_context:hover {  background: #3ecdf1;  color: #f2f2f2;}/* 翻页按钮居中 */#pagination {  width: 100%;  margin: auto;}/* 一级菜单居中 *//* #nav .menus_items {  position: absolute !important;  width: fit-content !important;  left: 50% !important;  transform: translateX(-50%) !important;} *//* 子菜单横向展示 */#nav .menus_items .menus_item:hover .menus_item_child {  display: flex !important;}/* 这里的2是代表导航栏的第2个元素，即有子菜单的元素，可以按自己需求修改 */.menus_items .menus_item:nth-child(5) .menus_item_child {  left: -76px;}/* 侧边栏个人信息卡片动态渐变色 */#aside-content > .card-widget.card-info {  background: linear-gradient(    -45deg,    #e8d8b9,    #eccec5,    #a3e9eb,    #bdbdf0,    #eec1ea  );  box-shadow: 0 0 5px rgb(66, 68, 68);  position: relative;  background-size: 400% 400%;  -webkit-animation: Gradient 10s ease infinite;  -moz-animation: Gradient 10s ease infinite;  animation: Gradient 10s ease infinite !important;}@-webkit-keyframes Gradient {  0% {    background-position: 0% 50%;  }  50% {    background-position: 100% 50%;  }  100% {    background-position: 0% 50%;  }}@-moz-keyframes Gradient {  0% {    background-position: 0% 50%;  }  50% {    background-position: 100% 50%;  }  100% {    background-position: 0% 50%;  }}@keyframes Gradient {  0% {    background-position: 0% 50%;  }  50% {    background-position: 100% 50%;  }  100% {    background-position: 0% 50%;  }}/* 黑夜模式适配 */[data-theme="dark"] #aside-content > .card-widget.card-info {  background: #191919ee;}/* 个人信息Follow me按钮 */#aside-content > .card-widget.card-info > #card-info-btn {  background-color: #3eb8be;  border-radius: 8px;}/* 首页文章卡片 */#recent-posts > .recent-post-item {  background: var(--trans-light);  backdrop-filter: var(--backdrop-filter);  border-radius: 25px;  border: var(--border-style);}/* 首页侧栏卡片 */#aside-content .card-widget {  background: var(--trans-light);  backdrop-filter: var(--backdrop-filter);  border-radius: 18px;  border: var(--border-style);}/* 文章页、归档页、普通页面 */div#post,div#page,div#archive {  background: var(--trans-light);  backdrop-filter: var(--backdrop-filter);  border: var(--border-style);  border-radius: 20px;}/* 导航栏 */#page-header.nav-fixed #nav {  background: rgba(255, 255, 255, 0.75);  backdrop-filter: var(--backdrop-filter);}[data-theme="dark"] #page-header.nav-fixed #nav {  background: rgba(0, 0, 0, 0.7) !important;}/* 夜间模式遮罩 */[data-theme="dark"] #recent-posts > .recent-post-item,[data-theme="dark"] #aside-content .card-widget,[data-theme="dark"] div#post,[data-theme="dark"] div#archive,[data-theme="dark"] div#page {  background: var(--trans-dark);}/* 夜间模式页脚页头遮罩透明 */[data-theme="dark"] #footer::before {  background: transparent !important;}[data-theme="dark"] #page-header::before {  background: transparent !important;}/* 阅读模式 */.read-mode #aside-content .card-widget {  background: rgba(158, 204, 171, 0.5) !important;}.read-mode div#post {  background: rgba(158, 204, 171, 0.5) !important;}/* 夜间模式下的阅读模式 */[data-theme="dark"] .read-mode #aside-content .card-widget {  background: rgba(25, 25, 25, 0.9) !important;  color: #ffffff;}[data-theme="dark"] .read-mode div#post {  background: rgba(25, 25, 25, 0.9) !important;  color: #ffffff;}/* 文章页H1-H6图标样式效果 *//* 控制风车转动速度 4s那里可以自己调节快慢 */h1::before,h2::before,h3::before,h4::before,h5::before,h6::before {  -webkit-animation: ccc 4s linear infinite;  animation: ccc 4s linear infinite;}/* 控制风车转动方向 -1turn 为逆时针转动，1turn 为顺时针转动，相同数字部分记得统一修改 */@-webkit-keyframes ccc {  0% {    -webkit-transform: rotate(0deg);    transform: rotate(0deg);  }  to {    -webkit-transform: rotate(-1turn);    transform: rotate(-1turn);  }}@keyframes ccc {  0% {    -webkit-transform: rotate(0deg);    transform: rotate(0deg);  }  to {    -webkit-transform: rotate(-1turn);    transform: rotate(-1turn);  }}/* 设置风车颜色 */#content-inner.layout h1::before {  color: #ef50a8;  margin-left: -1.55rem;  font-size: 1.3rem;  margin-top: -0.23rem;}#content-inner.layout h2::before {  color: #fb7061;  margin-left: -1.35rem;  font-size: 1.1rem;  margin-top: -0.12rem;}#content-inner.layout h3::before {  color: #ffbf00;  margin-left: -1.22rem;  font-size: 0.95rem;  margin-top: -0.09rem;}#content-inner.layout h4::before {  color: #a9e000;  margin-left: -1.05rem;  font-size: 0.8rem;  margin-top: -0.09rem;}#content-inner.layout h5::before {  color: #57c850;  margin-left: -0.9rem;  font-size: 0.7rem;  margin-top: 0rem;}#content-inner.layout h6::before {  color: #5ec1e0;  margin-left: -0.9rem;  font-size: 0.66rem;  margin-top: 0rem;}/* s设置风车hover动效 6s那里可以自己调节快慢*/#content-inner.layout h1:hover,#content-inner.layout h2:hover,#content-inner.layout h3:hover,#content-inner.layout h4:hover,#content-inner.layout h5:hover,#content-inner.layout h6:hover {  color: var(--theme-color);}#content-inner.layout h1:hover::before,#content-inner.layout h2:hover::before,#content-inner.layout h3:hover::before,#content-inner.layout h4:hover::before,#content-inner.layout h5:hover::before,#content-inner.layout h6:hover::before {  color: var(--theme-color);  -webkit-animation: ccc 6s linear infinite;  animation: ccc 6s linear infinite;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>categories</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/universe.css"/>
      <url>/css/universe.css</url>
      
        <content type="html"><![CDATA[/* 背景宇宙星光  */#universe{    display: block;    position: fixed;    margin: 0;    padding: 0;    border: 0;    outline: 0;    left: 0;    top: 0;    width: 100%;    height: 100%;    pointer-events: none;    /* 这个是调置顶的优先级的，-1在文章页下面，背景上面，个人推荐这种 */    z-index: -1;  }]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>照片</title>
      <link href="/gallery/index.html"/>
      <url>/gallery/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/universe.js"/>
      <url>/js/universe.js</url>
      
        <content type="html"><![CDATA[function dark() {window.requestAnimationFrame=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||window.msRequestAnimationFrame;var n,e,i,h,t=.05,s=document.getElementById("universe"),o=!0,a="180,184,240",r="226,225,142",d="226,225,224",c=[];function f(){n=window.innerWidth,e=window.innerHeight,i=.216*n,s.setAttribute("width",n),s.setAttribute("height",e)}function u(){h.clearRect(0,0,n,e);for(var t=c.length,i=0;i<t;i++){var s=c[i];s.move(),s.fadeIn(),s.fadeOut(),s.draw()}}function y(){this.reset=function(){this.giant=m(3),this.comet=!this.giant&&!o&&m(10),this.x=l(0,n-10),this.y=l(0,e),this.r=l(1.1,2.6),this.dx=l(t,6*t)+(this.comet+1-1)*t*l(50,120)+2*t,this.dy=-l(t,6*t)-(this.comet+1-1)*t*l(50,120),this.fadingOut=null,this.fadingIn=!0,this.opacity=0,this.opacityTresh=l(.2,1-.4*(this.comet+1-1)),this.do=l(5e-4,.002)+.001*(this.comet+1-1)},this.fadeIn=function(){this.fadingIn&&(this.fadingIn=!(this.opacity>this.opacityTresh),this.opacity+=this.do)},this.fadeOut=function(){this.fadingOut&&(this.fadingOut=!(this.opacity<0),this.opacity-=this.do/2,(this.x>n||this.y<0)&&(this.fadingOut=!1,this.reset()))},this.draw=function(){if(h.beginPath(),this.giant)h.fillStyle="rgba("+a+","+this.opacity+")",h.arc(this.x,this.y,2,0,2*Math.PI,!1);else if(this.comet){h.fillStyle="rgba("+d+","+this.opacity+")",h.arc(this.x,this.y,1.5,0,2*Math.PI,!1);for(var t=0;t<30;t++)h.fillStyle="rgba("+d+","+(this.opacity-this.opacity/20*t)+")",h.rect(this.x-this.dx/4*t,this.y-this.dy/4*t-2,2,2),h.fill()}else h.fillStyle="rgba("+r+","+this.opacity+")",h.rect(this.x,this.y,this.r,this.r);h.closePath(),h.fill()},this.move=function(){this.x+=this.dx,this.y+=this.dy,!1===this.fadingOut&&this.reset(),(this.x>n-n/4||this.y<0)&&(this.fadingOut=!0)},setTimeout(function(){o=!1},50)}function m(t){return Math.floor(1e3*Math.random())+1<10*t}function l(t,i){return Math.random()*(i-t)+t}f(),window.addEventListener("resize",f,!1),function(){h=s.getContext("2d");for(var t=0;t<i;t++)c[t]=new y,c[t].reset();u()}(),function t(){document.getElementsByTagName('html')[0].getAttribute('data-theme')=='dark'&&u(),window.requestAnimationFrame(t)}()};dark()]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>link</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>电影</title>
      <link href="/movies/index.html"/>
      <url>/movies/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>tags</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>音乐</title>
      <link href="/music/index.html"/>
      <url>/music/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
